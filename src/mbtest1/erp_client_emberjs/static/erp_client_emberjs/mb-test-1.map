{"version":3,"sources":["vendor/ember-cli/app-prefix.js","mb-test-1/adapters/ajax.js","mb-test-1/adapters/application.js","mb-test-1/adapters/base.js","mb-test-1/app.js","mb-test-1/components/link-li.js","mb-test-1/components/modal.js","mb-test-1/controllers/application.js","mb-test-1/controllers/basket.js","mb-test-1/controllers/baskets.js","mb-test-1/controllers/component.js","mb-test-1/controllers/components.js","mb-test-1/controllers/floor.js","mb-test-1/controllers/floors.js","mb-test-1/controllers/modal-notification-center.js","mb-test-1/controllers/modals-container.js","mb-test-1/controllers/navigation.js","mb-test-1/controllers/node.js","mb-test-1/controllers/nodes.js","mb-test-1/controllers/notification-center.js","mb-test-1/controllers/rack.js","mb-test-1/controllers/racks.js","mb-test-1/controllers/room.js","mb-test-1/controllers/rooms.js","mb-test-1/controllers/row.js","mb-test-1/controllers/rows.js","mb-test-1/controllers/server.js","mb-test-1/controllers/servers.js","mb-test-1/controllers/servertemplate.js","mb-test-1/controllers/servertemplates.js","mb-test-1/initializers/app-version.js","mb-test-1/initializers/env-injector-initializer.js","mb-test-1/initializers/export-application-global.js","mb-test-1/initializers/mbtest-app-global-initializer.js","mb-test-1/initializers/models-adapter-initializer.js","mb-test-1/initializers/result-loaders-initializer.js","mb-test-1/initializers/type-mappings-initializer.js","mb-test-1/lib/ajax.js","mb-test-1/lib/connections/api-connection.js","mb-test-1/lib/connections/auth-connection.js","mb-test-1/lib/connections/base-connection.js","mb-test-1/lib/ember-data/system/store/common.js","mb-test-1/lib/ember-data/system/store/serializers.js","mb-test-1/lib/utils.js","mb-test-1/models/basket.js","mb-test-1/models/component.js","mb-test-1/models/core/mixins/load-promise.js","mb-test-1/models/core/model-array.js","mb-test-1/models/core/model.js","mb-test-1/models/core/search-model-array.js","mb-test-1/models/core/type-mappings.js","mb-test-1/models/floor.js","mb-test-1/models/node.js","mb-test-1/models/property.js","mb-test-1/models/propertyoption.js","mb-test-1/models/rack.js","mb-test-1/models/results-loaders/base.js","mb-test-1/models/results-loaders/baskets.js","mb-test-1/models/results-loaders/components.js","mb-test-1/models/results-loaders/floors.js","mb-test-1/models/results-loaders/nodes.js","mb-test-1/models/results-loaders/properties.js","mb-test-1/models/results-loaders/propertyoptions.js","mb-test-1/models/results-loaders/racks.js","mb-test-1/models/results-loaders/results-loader-query-string-builder.js","mb-test-1/models/results-loaders/rooms.js","mb-test-1/models/results-loaders/rows.js","mb-test-1/models/results-loaders/servers.js","mb-test-1/models/results-loaders/servertemplates.js","mb-test-1/models/room.js","mb-test-1/models/row.js","mb-test-1/models/server.js","mb-test-1/models/servertemplate.js","mb-test-1/models/unit.js","mb-test-1/router.js","mb-test-1/routes/application.js","mb-test-1/routes/basket.js","mb-test-1/routes/baskets.js","mb-test-1/routes/component.js","mb-test-1/routes/components.js","mb-test-1/routes/floor.js","mb-test-1/routes/floors.js","mb-test-1/routes/model.js","mb-test-1/routes/node.js","mb-test-1/routes/node/servers.js","mb-test-1/routes/nodes.js","mb-test-1/routes/rack.js","mb-test-1/routes/racks.js","mb-test-1/routes/room.js","mb-test-1/routes/rooms.js","mb-test-1/routes/row.js","mb-test-1/routes/rows.js","mb-test-1/routes/server.js","mb-test-1/routes/servers.js","mb-test-1/routes/servertemplate.js","mb-test-1/routes/servertemplates.js","mb-test-1/routes/title.js","mb-test-1/serializers/application.js","mb-test-1/serializers/rev0.js","mb-test-1/serializers/rev1.js","mb-test-1/templates/application.js","mb-test-1/templates/basket.js","mb-test-1/templates/baskets.js","mb-test-1/templates/component.js","mb-test-1/templates/components.js","mb-test-1/templates/components/link-li.js","mb-test-1/templates/detail-views/key-value.js","mb-test-1/templates/detail-views/side-panel-layout.js","mb-test-1/templates/detail-views/titled-key-values-section.js","mb-test-1/templates/floor.js","mb-test-1/templates/floors.js","mb-test-1/templates/form-fields/base-form-field.js","mb-test-1/templates/form-fields/form-field-layout.js","mb-test-1/templates/form-fields/form-section.js","mb-test-1/templates/form-fields/select-form-field.js","mb-test-1/templates/form-fields/textarea-form-field.js","mb-test-1/templates/modals/base-modal-layout.js","mb-test-1/templates/modals/basket-add-modal.js","mb-test-1/templates/modals/basket-delete-modal.js","mb-test-1/templates/modals/basket-update-modal.js","mb-test-1/templates/modals/component-add-modal.js","mb-test-1/templates/modals/component-delete-modal.js","mb-test-1/templates/modals/component-update-modal.js","mb-test-1/templates/modals/floor-add-modal.js","mb-test-1/templates/modals/floor-delete-modal.js","mb-test-1/templates/modals/floor-update-modal.js","mb-test-1/templates/modals/form-modal-layout.js","mb-test-1/templates/modals/full-modal-layout.js","mb-test-1/templates/modals/modal-base-footer.js","mb-test-1/templates/modals/modal-errors.js","mb-test-1/templates/modals/node-add-modal.js","mb-test-1/templates/modals/node-delete-modal.js","mb-test-1/templates/modals/node-update-modal.js","mb-test-1/templates/modals/rack-add-modal.js","mb-test-1/templates/modals/rack-delete-modal.js","mb-test-1/templates/modals/rack-update-modal.js","mb-test-1/templates/modals/room-add-modal.js","mb-test-1/templates/modals/room-delete-modal.js","mb-test-1/templates/modals/room-update-modal.js","mb-test-1/templates/modals/row-add-modal.js","mb-test-1/templates/modals/row-delete-modal.js","mb-test-1/templates/modals/row-update-modal.js","mb-test-1/templates/modals/server-add-modal.js","mb-test-1/templates/modals/server-delete-modal.js","mb-test-1/templates/modals/server-update-modal.js","mb-test-1/templates/modals/servertemplate-add-modal.js","mb-test-1/templates/modals/servertemplate-delete-modal.js","mb-test-1/templates/modals/servertemplate-update-modal.js","mb-test-1/templates/navigation.js","mb-test-1/templates/node.js","mb-test-1/templates/nodes.js","mb-test-1/templates/notification-center.js","mb-test-1/templates/page-navigations/page-navigation-layout.js","mb-test-1/templates/rack.js","mb-test-1/templates/racks.js","mb-test-1/templates/results/baskets-table.js","mb-test-1/templates/results/component-properties-table.js","mb-test-1/templates/results/components-table.js","mb-test-1/templates/results/floors-table.js","mb-test-1/templates/results/node-servers-table.js","mb-test-1/templates/results/nodes-table.js","mb-test-1/templates/results/racks-table.js","mb-test-1/templates/results/results-load-more.js","mb-test-1/templates/results/rooms-table.js","mb-test-1/templates/results/rows-table.js","mb-test-1/templates/results/server-components-table.js","mb-test-1/templates/results/servers-table.js","mb-test-1/templates/results/servertemplates-table.js","mb-test-1/templates/room.js","mb-test-1/templates/rooms.js","mb-test-1/templates/row.js","mb-test-1/templates/rows.js","mb-test-1/templates/server.js","mb-test-1/templates/servers.js","mb-test-1/templates/servertemplate.js","mb-test-1/templates/servertemplates.js","mb-test-1/templates/tables/cells/linked-text-cell.js","mb-test-1/tests/adapters/ajax.jshint.js","mb-test-1/tests/adapters/application.jshint.js","mb-test-1/tests/adapters/base.jshint.js","mb-test-1/tests/app.jshint.js","mb-test-1/tests/components/link-li.jshint.js","mb-test-1/tests/components/modal.jshint.js","mb-test-1/tests/controllers/application.jshint.js","mb-test-1/tests/controllers/basket.jshint.js","mb-test-1/tests/controllers/baskets.jshint.js","mb-test-1/tests/controllers/component.jshint.js","mb-test-1/tests/controllers/components.jshint.js","mb-test-1/tests/controllers/floor.jshint.js","mb-test-1/tests/controllers/floors.jshint.js","mb-test-1/tests/controllers/modal-notification-center.jshint.js","mb-test-1/tests/controllers/modals-container.jshint.js","mb-test-1/tests/controllers/navigation.jshint.js","mb-test-1/tests/controllers/node.jshint.js","mb-test-1/tests/controllers/nodes.jshint.js","mb-test-1/tests/controllers/notification-center.jshint.js","mb-test-1/tests/controllers/rack.jshint.js","mb-test-1/tests/controllers/racks.jshint.js","mb-test-1/tests/controllers/room.jshint.js","mb-test-1/tests/controllers/rooms.jshint.js","mb-test-1/tests/controllers/row.jshint.js","mb-test-1/tests/controllers/rows.jshint.js","mb-test-1/tests/controllers/server.jshint.js","mb-test-1/tests/controllers/servers.jshint.js","mb-test-1/tests/controllers/servertemplate.jshint.js","mb-test-1/tests/controllers/servertemplates.jshint.js","mb-test-1/tests/helpers/resolver.js","mb-test-1/tests/helpers/resolver.jshint.js","mb-test-1/tests/helpers/start-app.js","mb-test-1/tests/helpers/start-app.jshint.js","mb-test-1/tests/initializers/env-injector-initializer.jshint.js","mb-test-1/tests/initializers/mbtest-app-global-initializer.jshint.js","mb-test-1/tests/initializers/models-adapter-initializer.jshint.js","mb-test-1/tests/initializers/result-loaders-initializer.jshint.js","mb-test-1/tests/initializers/type-mappings-initializer.jshint.js","mb-test-1/tests/lib/ajax.jshint.js","mb-test-1/tests/lib/connections/api-connection.jshint.js","mb-test-1/tests/lib/connections/auth-connection.jshint.js","mb-test-1/tests/lib/connections/base-connection.jshint.js","mb-test-1/tests/lib/ember-data/system/store/common.jshint.js","mb-test-1/tests/lib/ember-data/system/store/serializers.jshint.js","mb-test-1/tests/lib/utils.jshint.js","mb-test-1/tests/models/basket.jshint.js","mb-test-1/tests/models/component.jshint.js","mb-test-1/tests/models/core/mixins/load-promise.jshint.js","mb-test-1/tests/models/core/model-array.jshint.js","mb-test-1/tests/models/core/model.jshint.js","mb-test-1/tests/models/core/search-model-array.jshint.js","mb-test-1/tests/models/core/type-mappings.jshint.js","mb-test-1/tests/models/floor.jshint.js","mb-test-1/tests/models/node.jshint.js","mb-test-1/tests/models/property.jshint.js","mb-test-1/tests/models/propertyoption.jshint.js","mb-test-1/tests/models/rack.jshint.js","mb-test-1/tests/models/results-loaders/base.jshint.js","mb-test-1/tests/models/results-loaders/baskets.jshint.js","mb-test-1/tests/models/results-loaders/components.jshint.js","mb-test-1/tests/models/results-loaders/floors.jshint.js","mb-test-1/tests/models/results-loaders/nodes.jshint.js","mb-test-1/tests/models/results-loaders/properties.jshint.js","mb-test-1/tests/models/results-loaders/propertyoptions.jshint.js","mb-test-1/tests/models/results-loaders/racks.jshint.js","mb-test-1/tests/models/results-loaders/results-loader-query-string-builder.jshint.js","mb-test-1/tests/models/results-loaders/rooms.jshint.js","mb-test-1/tests/models/results-loaders/rows.jshint.js","mb-test-1/tests/models/results-loaders/servers.jshint.js","mb-test-1/tests/models/results-loaders/servertemplates.jshint.js","mb-test-1/tests/models/room.jshint.js","mb-test-1/tests/models/row.jshint.js","mb-test-1/tests/models/server.jshint.js","mb-test-1/tests/models/servertemplate.jshint.js","mb-test-1/tests/models/unit.jshint.js","mb-test-1/tests/router.jshint.js","mb-test-1/tests/routes/application.jshint.js","mb-test-1/tests/routes/basket.jshint.js","mb-test-1/tests/routes/baskets.jshint.js","mb-test-1/tests/routes/component.jshint.js","mb-test-1/tests/routes/components.jshint.js","mb-test-1/tests/routes/floor.jshint.js","mb-test-1/tests/routes/floors.jshint.js","mb-test-1/tests/routes/model.jshint.js","mb-test-1/tests/routes/node.jshint.js","mb-test-1/tests/routes/node/servers.jshint.js","mb-test-1/tests/routes/nodes.jshint.js","mb-test-1/tests/routes/rack.jshint.js","mb-test-1/tests/routes/racks.jshint.js","mb-test-1/tests/routes/room.jshint.js","mb-test-1/tests/routes/rooms.jshint.js","mb-test-1/tests/routes/row.jshint.js","mb-test-1/tests/routes/rows.jshint.js","mb-test-1/tests/routes/server.jshint.js","mb-test-1/tests/routes/servers.jshint.js","mb-test-1/tests/routes/servertemplate.jshint.js","mb-test-1/tests/routes/servertemplates.jshint.js","mb-test-1/tests/routes/title.jshint.js","mb-test-1/tests/serializers/application.jshint.js","mb-test-1/tests/serializers/rev0.jshint.js","mb-test-1/tests/serializers/rev1.jshint.js","mb-test-1/tests/test-helper.js","mb-test-1/tests/test-helper.jshint.js","mb-test-1/tests/unit/components/link-li-test.js","mb-test-1/tests/unit/components/link-li-test.jshint.js","mb-test-1/tests/unit/controllers/navigation-test.js","mb-test-1/tests/unit/controllers/navigation-test.jshint.js","mb-test-1/tests/unit/controllers/nodes-test.js","mb-test-1/tests/unit/controllers/nodes-test.jshint.js","mb-test-1/tests/unit/controllers/nodesdetail-test.js","mb-test-1/tests/unit/controllers/nodesdetail-test.jshint.js","mb-test-1/tests/unit/models/basket-slot-test.js","mb-test-1/tests/unit/models/basket-slot-test.jshint.js","mb-test-1/tests/unit/models/basket-test.js","mb-test-1/tests/unit/models/basket-test.jshint.js","mb-test-1/tests/unit/models/component-property-value-test.js","mb-test-1/tests/unit/models/component-property-value-test.jshint.js","mb-test-1/tests/unit/models/component-test.js","mb-test-1/tests/unit/models/component-test.jshint.js","mb-test-1/tests/unit/models/components-properties-relation-test.js","mb-test-1/tests/unit/models/components-properties-relation-test.jshint.js","mb-test-1/tests/unit/models/floor-test.js","mb-test-1/tests/unit/models/floor-test.jshint.js","mb-test-1/tests/unit/models/groups-properties-relation-test.js","mb-test-1/tests/unit/models/groups-properties-relation-test.jshint.js","mb-test-1/tests/unit/models/node-test.js","mb-test-1/tests/unit/models/node-test.jshint.js","mb-test-1/tests/unit/models/property-option-test.js","mb-test-1/tests/unit/models/property-option-test.jshint.js","mb-test-1/tests/unit/models/property-test.js","mb-test-1/tests/unit/models/property-test.jshint.js","mb-test-1/tests/unit/models/propertygroup-test.js","mb-test-1/tests/unit/models/propertygroup-test.jshint.js","mb-test-1/tests/unit/models/rack-test.js","mb-test-1/tests/unit/models/rack-test.jshint.js","mb-test-1/tests/unit/models/room-test.js","mb-test-1/tests/unit/models/room-test.jshint.js","mb-test-1/tests/unit/models/row-test.js","mb-test-1/tests/unit/models/row-test.jshint.js","mb-test-1/tests/unit/models/server-template-hdd-test.js","mb-test-1/tests/unit/models/server-template-hdd-test.jshint.js","mb-test-1/tests/unit/models/server-template-test.js","mb-test-1/tests/unit/models/server-template-test.jshint.js","mb-test-1/tests/unit/models/server-test.js","mb-test-1/tests/unit/models/server-test.jshint.js","mb-test-1/tests/unit/models/unit-test.js","mb-test-1/tests/unit/models/unit-test.jshint.js","mb-test-1/tests/unit/routes/basket-detail-test.js","mb-test-1/tests/unit/routes/basket-detail-test.jshint.js","mb-test-1/tests/unit/routes/baskets-test.js","mb-test-1/tests/unit/routes/baskets-test.jshint.js","mb-test-1/tests/unit/routes/floor-detail-test.js","mb-test-1/tests/unit/routes/floor-detail-test.jshint.js","mb-test-1/tests/unit/routes/floors-test.js","mb-test-1/tests/unit/routes/floors-test.jshint.js","mb-test-1/tests/unit/routes/node-test.js","mb-test-1/tests/unit/routes/node-test.jshint.js","mb-test-1/tests/unit/routes/nodesdetail-test.js","mb-test-1/tests/unit/routes/nodesdetail-test.jshint.js","mb-test-1/tests/unit/routes/rack-detail-test.js","mb-test-1/tests/unit/routes/rack-detail-test.jshint.js","mb-test-1/tests/unit/routes/racks-test.js","mb-test-1/tests/unit/routes/racks-test.jshint.js","mb-test-1/tests/unit/routes/room-detail-test.js","mb-test-1/tests/unit/routes/room-detail-test.jshint.js","mb-test-1/tests/unit/routes/rooms-test.js","mb-test-1/tests/unit/routes/rooms-test.jshint.js","mb-test-1/tests/unit/routes/row-detail-test.js","mb-test-1/tests/unit/routes/row-detail-test.jshint.js","mb-test-1/tests/unit/routes/rows-test.js","mb-test-1/tests/unit/routes/rows-test.jshint.js","mb-test-1/tests/unit/routes/server-detail-test.js","mb-test-1/tests/unit/routes/server-detail-test.jshint.js","mb-test-1/tests/unit/routes/servers-test.js","mb-test-1/tests/unit/routes/servers-test.jshint.js","mb-test-1/tests/unit/views/navigation-test.js","mb-test-1/tests/unit/views/navigation-test.jshint.js","mb-test-1/tests/unit/views/nodesdetail-test.js","mb-test-1/tests/unit/views/nodesdetail-test.jshint.js","mb-test-1/tests/utils/computed.jshint.js","mb-test-1/tests/utils/constants.jshint.js","mb-test-1/tests/utils/constants/cookie.jshint.js","mb-test-1/tests/utils/error-handlers/base.jshint.js","mb-test-1/tests/utils/error-handlers/validation-server-error-handler.jshint.js","mb-test-1/tests/utils/model.jshint.js","mb-test-1/tests/views/detail-views/api-model-panel.jshint.js","mb-test-1/tests/views/detail-views/body-panel.jshint.js","mb-test-1/tests/views/detail-views/description-lists/basket-titled-key-values-section.jshint.js","mb-test-1/tests/views/detail-views/description-lists/component-titled-key-values-section.jshint.js","mb-test-1/tests/views/detail-views/description-lists/floor-titled-key-values-section.jshint.js","mb-test-1/tests/views/detail-views/description-lists/list-value-generator.jshint.js","mb-test-1/tests/views/detail-views/description-lists/node-titled-key-values-section.jshint.js","mb-test-1/tests/views/detail-views/description-lists/rack-titled-key-values-section.jshint.js","mb-test-1/tests/views/detail-views/description-lists/room-titled-key-values-section.jshint.js","mb-test-1/tests/views/detail-views/description-lists/row-titled-key-values-section.jshint.js","mb-test-1/tests/views/detail-views/description-lists/server-titled-key-values-section.jshint.js","mb-test-1/tests/views/detail-views/description-lists/servertemplate-titled-key-values-section.jshint.js","mb-test-1/tests/views/detail-views/description-lists/titled-key-values-section.jshint.js","mb-test-1/tests/views/detail-views/key-value.jshint.js","mb-test-1/tests/views/detail-views/linked-key-value.jshint.js","mb-test-1/tests/views/detail-views/main-panel.jshint.js","mb-test-1/tests/views/detail-views/side-panel.jshint.js","mb-test-1/tests/views/form-fields/base-form-field.jshint.js","mb-test-1/tests/views/form-fields/form-section.jshint.js","mb-test-1/tests/views/form-fields/select-form-field.jshint.js","mb-test-1/tests/views/form-fields/text-form-field.jshint.js","mb-test-1/tests/views/form-fields/textarea-form-field.jshint.js","mb-test-1/tests/views/modal-notification-center.jshint.js","mb-test-1/tests/views/modals-container.jshint.js","mb-test-1/tests/views/modals/basket-add-modal.jshint.js","mb-test-1/tests/views/modals/basket-delete-modal.jshint.js","mb-test-1/tests/views/modals/basket-update-modal.jshint.js","mb-test-1/tests/views/modals/component-add-modal.jshint.js","mb-test-1/tests/views/modals/component-delete-modal.jshint.js","mb-test-1/tests/views/modals/component-update-modal.jshint.js","mb-test-1/tests/views/modals/floor-add-modal.jshint.js","mb-test-1/tests/views/modals/floor-delete-modal.jshint.js","mb-test-1/tests/views/modals/floor-update-modal.jshint.js","mb-test-1/tests/views/modals/mixins/display-model-errors-modal-mixin.jshint.js","mb-test-1/tests/views/modals/mixins/form-modal-mixin.jshint.js","mb-test-1/tests/views/modals/mixins/full-modal-mixin.jshint.js","mb-test-1/tests/views/modals/mixins/object-action-mixin.jshint.js","mb-test-1/tests/views/modals/mixins/object-validate-and-save-mixin.jshint.js","mb-test-1/tests/views/modals/mixins/open-next-modal-mixin.jshint.js","mb-test-1/tests/views/modals/mixins/search-modal-mixin.jshint.js","mb-test-1/tests/views/modals/mixins/wide-modal-mixin.jshint.js","mb-test-1/tests/views/modals/modal-base-footer.jshint.js","mb-test-1/tests/views/modals/modal-base.jshint.js","mb-test-1/tests/views/modals/modal.jshint.js","mb-test-1/tests/views/modals/node-add-modal.jshint.js","mb-test-1/tests/views/modals/node-delete-modal.jshint.js","mb-test-1/tests/views/modals/node-update-modal.jshint.js","mb-test-1/tests/views/modals/rack-add-modal.jshint.js","mb-test-1/tests/views/modals/rack-delete-modal.jshint.js","mb-test-1/tests/views/modals/rack-update-modal.jshint.js","mb-test-1/tests/views/modals/room-add-modal.jshint.js","mb-test-1/tests/views/modals/room-delete-modal.jshint.js","mb-test-1/tests/views/modals/room-update-modal.jshint.js","mb-test-1/tests/views/modals/row-add-modal.jshint.js","mb-test-1/tests/views/modals/row-delete-modal.jshint.js","mb-test-1/tests/views/modals/row-update-modal.jshint.js","mb-test-1/tests/views/modals/server-add-modal.jshint.js","mb-test-1/tests/views/modals/server-delete-modal.jshint.js","mb-test-1/tests/views/modals/server-update-modal.jshint.js","mb-test-1/tests/views/modals/servertemplate-add-modal.jshint.js","mb-test-1/tests/views/modals/servertemplate-delete-modal.jshint.js","mb-test-1/tests/views/modals/servertemplate-update-modal.jshint.js","mb-test-1/tests/views/navigation.jshint.js","mb-test-1/tests/views/notification-center.jshint.js","mb-test-1/tests/views/page-navigations/page-navigation.jshint.js","mb-test-1/tests/views/results/baskets-table.jshint.js","mb-test-1/tests/views/results/component-properties-table.jshint.js","mb-test-1/tests/views/results/components-table.jshint.js","mb-test-1/tests/views/results/floors-table.jshint.js","mb-test-1/tests/views/results/node-servers-table.jshint.js","mb-test-1/tests/views/results/nodes-table.jshint.js","mb-test-1/tests/views/results/racks-table.jshint.js","mb-test-1/tests/views/results/results-load-more.jshint.js","mb-test-1/tests/views/results/results-table.jshint.js","mb-test-1/tests/views/results/rooms-table.jshint.js","mb-test-1/tests/views/results/rows-table.jshint.js","mb-test-1/tests/views/results/server-components-table.jshint.js","mb-test-1/tests/views/results/servers-table.jshint.js","mb-test-1/tests/views/results/servertemplates-table.jshint.js","mb-test-1/tests/views/tables/cells/linked-text-cell.jshint.js","mb-test-1/tests/views/tables/cells/table-cell-base.jshint.js","mb-test-1/tests/views/tables/cells/titled-linked-cell.jshint.js","mb-test-1/utils/computed.js","mb-test-1/utils/constants.js","mb-test-1/utils/constants/cookie.js","mb-test-1/utils/error-handlers/base.js","mb-test-1/utils/error-handlers/validation-server-error-handler.js","mb-test-1/utils/model.js","mb-test-1/views/detail-views/api-model-panel.js","mb-test-1/views/detail-views/body-panel.js","mb-test-1/views/detail-views/description-lists/basket-titled-key-values-section.js","mb-test-1/views/detail-views/description-lists/component-titled-key-values-section.js","mb-test-1/views/detail-views/description-lists/floor-titled-key-values-section.js","mb-test-1/views/detail-views/description-lists/list-value-generator.js","mb-test-1/views/detail-views/description-lists/node-titled-key-values-section.js","mb-test-1/views/detail-views/description-lists/rack-titled-key-values-section.js","mb-test-1/views/detail-views/description-lists/room-titled-key-values-section.js","mb-test-1/views/detail-views/description-lists/row-titled-key-values-section.js","mb-test-1/views/detail-views/description-lists/server-titled-key-values-section.js","mb-test-1/views/detail-views/description-lists/servertemplate-titled-key-values-section.js","mb-test-1/views/detail-views/description-lists/titled-key-values-section.js","mb-test-1/views/detail-views/key-value.js","mb-test-1/views/detail-views/linked-key-value.js","mb-test-1/views/detail-views/main-panel.js","mb-test-1/views/detail-views/side-panel.js","mb-test-1/views/form-fields/base-form-field.js","mb-test-1/views/form-fields/form-section.js","mb-test-1/views/form-fields/select-form-field.js","mb-test-1/views/form-fields/text-form-field.js","mb-test-1/views/form-fields/textarea-form-field.js","mb-test-1/views/modal-notification-center.js","mb-test-1/views/modals-container.js","mb-test-1/views/modals/basket-add-modal.js","mb-test-1/views/modals/basket-delete-modal.js","mb-test-1/views/modals/basket-update-modal.js","mb-test-1/views/modals/component-add-modal.js","mb-test-1/views/modals/component-delete-modal.js","mb-test-1/views/modals/component-update-modal.js","mb-test-1/views/modals/floor-add-modal.js","mb-test-1/views/modals/floor-delete-modal.js","mb-test-1/views/modals/floor-update-modal.js","mb-test-1/views/modals/mixins/display-model-errors-modal-mixin.js","mb-test-1/views/modals/mixins/form-modal-mixin.js","mb-test-1/views/modals/mixins/full-modal-mixin.js","mb-test-1/views/modals/mixins/object-action-mixin.js","mb-test-1/views/modals/mixins/object-validate-and-save-mixin.js","mb-test-1/views/modals/mixins/open-next-modal-mixin.js","mb-test-1/views/modals/mixins/search-modal-mixin.js","mb-test-1/views/modals/mixins/wide-modal-mixin.js","mb-test-1/views/modals/modal-base-footer.js","mb-test-1/views/modals/modal-base.js","mb-test-1/views/modals/modal.js","mb-test-1/views/modals/node-add-modal.js","mb-test-1/views/modals/node-delete-modal.js","mb-test-1/views/modals/node-update-modal.js","mb-test-1/views/modals/rack-add-modal.js","mb-test-1/views/modals/rack-delete-modal.js","mb-test-1/views/modals/rack-update-modal.js","mb-test-1/views/modals/room-add-modal.js","mb-test-1/views/modals/room-delete-modal.js","mb-test-1/views/modals/room-update-modal.js","mb-test-1/views/modals/row-add-modal.js","mb-test-1/views/modals/row-delete-modal.js","mb-test-1/views/modals/row-update-modal.js","mb-test-1/views/modals/server-add-modal.js","mb-test-1/views/modals/server-delete-modal.js","mb-test-1/views/modals/server-update-modal.js","mb-test-1/views/modals/servertemplate-add-modal.js","mb-test-1/views/modals/servertemplate-delete-modal.js","mb-test-1/views/modals/servertemplate-update-modal.js","mb-test-1/views/navigation.js","mb-test-1/views/notification-center.js","mb-test-1/views/page-navigations/page-navigation.js","mb-test-1/views/results/baskets-table.js","mb-test-1/views/results/component-properties-table.js","mb-test-1/views/results/components-table.js","mb-test-1/views/results/floors-table.js","mb-test-1/views/results/node-servers-table.js","mb-test-1/views/results/nodes-table.js","mb-test-1/views/results/racks-table.js","mb-test-1/views/results/results-load-more.js","mb-test-1/views/results/results-table.js","mb-test-1/views/results/rooms-table.js","mb-test-1/views/results/rows-table.js","mb-test-1/views/results/server-components-table.js","mb-test-1/views/results/servers-table.js","mb-test-1/views/results/servertemplates-table.js","mb-test-1/views/tables/cells/linked-text-cell.js","mb-test-1/views/tables/cells/table-cell-base.js","mb-test-1/views/tables/cells/titled-linked-cell.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('mb-test-1/adapters/ajax', ['exports', 'ember', 'mb-test-1/config/environment', 'mb-test-1/adapters/base'], function (exports, Ember, ENV, BaseAdapter) {\n\n    'use strict';\n\n    var forEach = Ember['default'].EnumerableUtils.forEach;\n\n    exports['default'] = BaseAdapter['default'].extend({\n        host: (function () {\n            return ENV['default'].APP.API_HOST;\n        }).property(),\n\n        namespace: (function () {\n            return ENV['default'].APP.API_NAMESPACE;\n        }).property(),\n\n        _uri: function _uri(type, uri) {\n            this._checkParams(type, uri);\n\n            /*var host = this.getHostForType(type);\n            if (uri && uri.indexOf(host) !== 0 && uri.indexOf('https') !== 0) {\n                uri = host + uri;\n            }*/\n            return uri;\n        },\n\n        find: function find(type, id) {\n            var uri;\n            if (id && String(id).charAt(0) === \"/\") {\n                uri = this.completeURL(this._uri(type, id.substr(1)));\n            } else {\n                uri = this.completeURL(this._uri(type, id));\n                //uri = this.buildURL(type.typeKey, id, snapshot);\n            }\n            return this.ajax(uri, \"GET\");\n        },\n\n        findAll: function findAll(type, sinceToken) {\n            var query;\n\n            if (sinceToken) {\n                query = { since: sinceToken };\n            }\n\n            return this.ajax(this.buildURL(type.typeKey), \"GET\", { data: query });\n        },\n\n        createRecord: function createRecord(type, uri, data, settings) {\n            settings = settings || {};\n            settings.data = data;\n            if (uri && String(uri).charAt(0) === \"/\") {\n                uri = uri.substr(1);\n            }\n            uri = this.completeURL(this._uri(type, uri));\n            return this.ajax(uri, \"POST\", settings);\n        },\n\n        updateRecord: function updateRecord(type, uri, data, settings) {\n            settings = settings || {};\n            settings.data = data;\n            if (uri && String(uri).charAt(0) === \"/\") {\n                uri = uri.substr(1);\n            }\n            Ember['default'].Logger.debug(\"Adapter.updateRecord:\", settings.data);\n            uri = this.completeURL(this._uri(type, uri));\n            return this.ajax(uri, \"PUT\", settings);\n        },\n\n        deleteRecord: function deleteRecord(type, uri, settings) {\n            settings = settings || {};\n            if (uri && String(uri).charAt(0) === \"/\") {\n                uri = uri.substr(1);\n            }\n            uri = this.completeURL(this._uri(type, uri));\n            return this.ajax(uri, \"DELETE\", settings);\n        },\n\n        /*get: function(type, uri, success, error) {\n            var settings = {};\n            settings.error = error;\n            return this.ajax(this._uri(type, uri), 'GET', settings).then(function(json) {\n                success(json);\n            });\n        },//*/\n\n        //createRecord: function(store, type, uri, snapshot) {\n        /*create: function(type, uri, data, success, error, settings) {\n            settings = settings || {};\n            settings.data = data;\n            settings.error = error;\n            this.ajax(this._uri(type, uri), 'POST', settings).then(function(json) {\n                success(json);\n            });\n        },//*/\n\n        //updateRecord: function(store, type, uri, snapshot) {\n        /*update: function(type, uri, data, success, error, settings) {\n            settings = settings || {};\n            settings.data = data;\n            settings.error = error;\n            this.ajax(this._uri(type, uri), 'PUT', settings).then(function(json) {\n                success(json);\n            });\n        },//*/\n\n        //deleteRecord: function(store, type, uri, snapshot) {\n        /*delete: function(type, uri, success, error, settings) {\n            settings = settings || {};\n            settings.error = error;\n            this.ajax(this._uri(type, uri), 'DELETE', settings).then(function(json) {\n                success(json);\n            });\n        },//*/\n\n        /*ajax: function(url, type, settings) {\n            settings = settings || {};\n            settings.url = url;\n            settings.type = type;\n            settings.context = this;\n             var alreadyHasAuth = settings.headers && settings.headers['Authorization'];\n             // HACK this goes away when we have oAuth\n            if (!alreadyHasAuth && url && url.indexOf(ENV.BALANCED.AUTH) === -1) {\n                if (Auth.get('signedIn')) {\n                    var marketplaceId = BalancedApp.currentMarketplace ? BalancedApp.currentMarketplace.get('id') : null;\n                     var matches = MARKETPLACE_URI_REGEX.exec(url);\n                    if (matches) {\n                        marketplaceId = matches[1];\n                    }\n                     var userMarketplace = Auth.get('user').user_marketplace_for_id(marketplaceId);\n                     if (!userMarketplace) {\n                        if (marketplaceId) {\n                            Ember.Logger.warn(\"Couldn't find user marketplace for ID %@ (url: %@)\".fmt(marketplaceId, url));\n                             // If we couldn't find the user marketplace, maybe this is an admin user, so hit the auth server to try to find the API secret\n                            return Ajax.ajax({\n                                url: ENV.BALANCED.AUTH + '/marketplaces/%@'.fmt(marketplaceId),\n                                type: 'GET',\n                                error: settings.error\n                            }).then(function(response) {\n                                Auth.addUserMarketplace(response.id, response.uri, response.name, response.secret);\n                                 settings.headers = settings.headers || {};\n                                settings.headers['Authorization'] = Utils.encodeAuthorization(response.secret);\n                                return Ajax.ajax(settings);\n                            });\n                        }\n                    } else if (!userMarketplace.get('secret')) {\n                        userMarketplace.reload();\n                    } else {\n                        var secret = userMarketplace.get('secret');\n                        settings.headers = settings.headers || {};\n                        settings.headers['Authorization'] = Utils.encodeAuthorization(secret);\n                    }\n                }\n            }\n             return Ajax.ajax(settings);\n        },\n         load: function(settings) {\n            var deferred = Ember.RSVP.defer();\n            jQuery.ajax(settings).then(deferred.resolve, deferred.reject);\n            return deferred.promise;\n        },*/\n\n        ajaxError: function ajaxError(jqXHR, responseText, errorThrown) {\n            var isObject = jqXHR !== null && typeof jqXHR === \"object\";\n\n            if (isObject) {\n                jqXHR.then = null;\n                if (!jqXHR.errorThrown) {\n                    if (typeof errorThrown === \"string\") {\n                        jqXHR.errorThrown = new Error(errorThrown);\n                    } else {\n                        jqXHR.errorThrown = errorThrown;\n                    }\n                }\n            }\n\n            return jqXHR;\n        },\n\n        ajaxSuccess: function ajaxSuccess(jqXHR, jsonPayload) {\n            return jsonPayload;\n        },\n\n        ajax: function ajax(url, type, options) {\n            var adapter = this;\n\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                var hash = adapter.ajaxOptions(url, type, options);\n\n                hash.success = function (json, textStatus, jqXHR) {\n                    json = adapter.ajaxSuccess(jqXHR, json);\n                    //if (json instanceof InvalidError) {\n                    //    Ember.run(null, reject, json);\n                    //} else {\n                    Ember['default'].run(null, resolve, json);\n                    //}\n                };\n\n                hash.error = function (jqXHR, textStatus, errorThrown) {\n                    Ember['default'].run(null, reject, adapter.ajaxError(jqXHR, jqXHR.responseText, errorThrown));\n                };\n                Ember['default'].Logger.debug(\"Adapter.ajax:\", hash);\n                Ember['default'].$.ajax(hash);\n            }, \"_: BaseAdapter#ajax \" + type + \" to \" + url);\n        },\n\n        ajaxOptions: function ajaxOptions(url, type, options) {\n            var hash = options || {};\n            hash.url = url;\n            hash.type = type;\n            hash.dataType = \"json\";\n            hash.context = this;\n\n            if (hash.data && type !== \"GET\") {\n                //hash.contentType = 'application/json; charset=utf-8';\n                hash.contentType = \"application/vnd.api+json; charset=utf-8\";\n                hash.data = JSON.stringify(hash.data);\n            }\n\n            var headers = Ember['default'].get(this, \"headers\");\n            if (headers !== undefined) {\n                hash.beforeSend = function (xhr) {\n                    forEach.call(Ember['default'].keys(headers), function (key) {\n                        xhr.setRequestHeader(key, headers[key]);\n                    });\n                };\n            }\n\n            return hash;\n        }\n    });\n\n});","define('mb-test-1/adapters/application', ['exports', 'mb-test-1/adapters/ajax'], function (exports, AjaxAdapter) {\n\n\t'use strict';\n\n\texports['default'] = AjaxAdapter['default'];\n\n});","define('mb-test-1/adapters/base', ['exports', 'ember', 'mb-test-1/config/environment'], function (exports, Ember, ENV) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Object.extend({\n    hostsByType: [],\n    defaultSerializer: \"mb-test-1/serializers/rev1\",\n    addTrailingSlashes: false,\n\n    pathForType: function pathForType(type) {\n      var dasherized = Ember['default'].String.dasherize(type);\n      return Ember['default'].String.pluralize(dasherized);\n    },\n\n    completeURL: function completeURL(uri) {\n      Ember['default'].Logger.debug(\"BaseAdapter.completeURL: uri=\", uri);\n      if (uri.indexOf(\"http\") === 0) {\n        return uri;\n      }\n\n      var namespace = Ember['default'].get(this, \"namespace\");\n      if (namespace && uri.indexOf(namespace) === 0) {\n        uri = uri.slice(namespace.length + 1);\n        Ember['default'].Logger.debug(\"BaseAdapter.completeURL: sliced uri=\", uri);\n      }\n\n      var url = [uri];\n      var host = Ember['default'].get(this, \"host\");\n      var prefix = this.urlPrefix();\n\n      if (prefix) {\n        url.unshift(prefix);\n      }\n\n      url = url.join(\"/\");\n      if (!host && url) {\n        url = \"/\" + url;\n      }\n\n      return url;\n    },\n\n    generateURI: function generateURI(type, id) {\n      var url = [];\n\n      if (type) {\n        url.push(this.pathForType(type));\n      }\n\n      //We might get passed in an array of ids from findMany\n      //in which case we don't want to modify the url, as the\n      //ids will be passed in through a query param\n      if (id && !Ember['default'].isArray(id)) {\n        url.push(encodeURIComponent(id));\n      }\n\n      return url.join(\"/\");\n    },\n\n    buildURL: function buildURL(type, id, snapshot) {\n      var uri = this.generateURI(type, id, snapshot);\n      var url = this.completeURL(uri);\n      if (this.get(\"addTrailingSlashes\")) {\n        if (url.charAt(url.length - 1) !== \"/\") {\n          url += \"/\";\n        }\n      }\n      return url;\n    },\n\n    registerHostForType: function registerHostForType(type, host) {\n      this.hostsByType.push({\n        type: type,\n        host: host\n      });\n    },\n\n    getHostForType: function getHostForType(type) {\n      var hostType = this.hostsByType.findBy(\"type\", type);\n      if (hostType) {\n        return hostType.host;\n      } else {\n        return ENV['default'].APP.API_HOST;\n      }\n    },\n\n    /*get: function(type, uri, success, error) {\n      return Ember.assert(\"Your adapter should override get\", false);\n    },\n     create: function(type, uri, data, success, error) {\n      return Ember.assert(\"Your adapter should override create\", false);\n    },\n     update: function(type, uri, data, success, error) {\n      return Ember.assert(\"Your adapter should override update\", false);\n    },\n     \"delete\": function(type, uri, success, error) {\n      return Ember.assert(\"Your adapter should override delete\", false);\n    },*/\n\n    _checkParams: function _checkParams(type, uri) {\n      if (!uri) {\n        throw new Error(\"Missing URI in adapter call for %@\".fmt(type));\n      }\n      if (!type) {\n        throw new Error(\"Missing type in adapter call for %@\".fmt(uri));\n      }\n    },\n\n    urlPrefix: function urlPrefix(path, parentURL) {\n      var host = Ember['default'].get(this, \"host\");\n      var namespace = Ember['default'].get(this, \"namespace\");\n      var url = [];\n\n      if (path) {\n        // Protocol relative url\n        //jscs:disable disallowEmptyBlocks\n        if (/^\\/\\//.test(path)) {} else if (path.charAt(0) === \"/\") {\n          //jscs:enable disallowEmptyBlocks\n          if (host) {\n            path = path.slice(1);\n            url.push(host);\n          }\n          // Relative path\n        } else if (!/^http(s)?:\\/\\//.test(path)) {\n          url.push(parentURL);\n        }\n      } else {\n        if (host) {\n          url.push(host);\n        }\n        if (namespace) {\n          url.push(namespace);\n        }\n      }\n\n      if (path) {\n        url.push(path);\n      }\n\n      return url.join(\"/\");\n    } });\n\n  // Do nothing, the full host is already included. This branch\n  // avoids the absolute path logic and the relative path logic.\n\n  // Absolute path\n\n});","define('mb-test-1/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'mb-test-1/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default'],\n\n    // Basic logging, e.g. \"Transitioned into 'post'\"\n    LOG_TRANSITIONS: false,\n\n    // Extremely detailed logging, highlighting every internal\n    // step made while transitioning into a route, including\n    // `beforeModel`, `model`, and `afterModel` hooks, and\n    // information about redirects and aborted transitions\n    LOG_TRANSITIONS_INTERNAL: false,\n\n    LOG_ACTIVE_GENERATION: false\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('mb-test-1/components/link-li', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        tagName: 'li',\n        classNameBindings: ['active'],\n        active: (function () {\n            return this.get('childViews').anyBy('active');\n        }).property('childViews.@each.active')\n    });\n\n});","define('mb-test-1/components/modal', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var ModalComponent = Ember['default'].Component.extend({\n        submitAction: 'submit',\n        classNames: ['modal-container'],\n        modalElement: '.modal',\n\n        willDestroyElement: function willDestroyElement() {\n            this.hide();\n        },\n\n        hide: function hide() {\n            this.$(this.get('modalElement')).modal('hide');\n        },\n\n        reposition: function reposition() {\n            // trigger a resize to reposition the dialog\n            this.$(document.body).trigger('resize');\n        },\n\n        actions: {\n            open: function open(model) {\n                var self = this;\n                var modalElement = this.get('modalElement');\n\n                if (model) {\n                    model.on('didCreate', function () {\n                        self.hide();\n                    });\n\n                    this.set('model', model);\n                }\n\n                this.$(modalElement).modal({\n                    manager: this.$()\n                });\n            },\n\n            close: function close() {\n                this.hide();\n            },\n\n            save: function save(model) {\n                model = model || this.get('model');\n\n                if (Ember['default'].get(model, 'isSaving')) {\n                    return;\n                }\n\n                var self = this;\n\n                model.save().then(function () {\n                    if (!self.get('submitAction')) {\n                        return;\n                    }\n\n                    self.sendAction('submitAction', model);\n                });\n            }\n        }\n    });\n\n    exports['default'] = ModalComponent;\n\n});","define('mb-test-1/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend(Ember['default'].Evented, {\n        needs: [\"notification_center\"] });\n\n});","define('mb-test-1/controllers/basket', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['notification_center'],\n        serversResultsLoader: (function () {\n            return this.get('model').getServersLoader();\n        }).property('model')\n    });\n\n});","define('mb-test-1/controllers/baskets', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['application'],\n\n        resultsLoader: Ember['default'].computed.oneWay('model')\n    });\n\n});","define('mb-test-1/controllers/component', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['notification_center'],\n        propertiesResultsLoader: (function () {\n            return this.get('model').getPropertiesLoader();\n        }).property('model')\n    });\n\n});","define('mb-test-1/controllers/components', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['application'],\n\n        resultsLoader: Ember['default'].computed.oneWay('model')\n    });\n\n});","define('mb-test-1/controllers/floor', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['notification_center'],\n        serversResultsLoader: (function () {\n            return this.get('model').getServersLoader();\n        }).property('model')\n    });\n\n});","define('mb-test-1/controllers/floors', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['application'],\n\n        resultsLoader: Ember['default'].computed.oneWay('model')\n    });\n\n});","define('mb-test-1/controllers/modal-notification-center', ['exports', 'mb-test-1/controllers/notification-center'], function (exports, NotificationCenterController) {\n\n    'use strict';\n\n    exports['default'] = NotificationCenterController['default'].extend({\n        model: []\n    });\n\n});","define('mb-test-1/controllers/modals-container', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var ModalsContainerController = Ember['default'].Controller.extend({\n        needs: ['notification_center', 'modal_notification_center'],\n        registerContainer: function registerContainer(modalsContainer) {\n            this.set('modalsContainer', modalsContainer);\n        },\n\n        close: function close() {\n            var modalsContainer = this.get('modalsContainer');\n            if (modalsContainer) {\n                modalsContainer.forEach(function (modal) {\n                    modal.close();\n                });\n            }\n        },\n\n        open: function open(klass, args) {\n            this.close();\n            var modalView = klass;\n\n            if (_.isString(klass)) {\n                klass = this.get('container').lookupFactory('view:' + klass);\n            }\n\n            modalView = klass.open.apply(klass, args);\n            this.openInstance(modalView);\n            return modalView;\n        },\n\n        openInstance: function openInstance(modalView) {\n            var modalsContainer = this.get('modalsContainer');\n\n            Ember['default'].run(function () {\n                modalsContainer.pushObject(modalView);\n            });\n            modalView.open().on('hidden.bs.modal', function () {\n                modalsContainer.removeObject(modalView);\n            });\n        },\n\n        currentModal: Ember['default'].computed.reads('modalsContainer.firstObject')\n    });\n\n    exports['default'] = ModalsContainerController;\n\n});","define('mb-test-1/controllers/navigation', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ArrayController.extend({\n    model: Ember['default'].A([Ember['default'].Object.create({ title: 'Nodes', location: 'nodes', active: null }), Ember['default'].Object.create({ title: 'Floors', location: 'floors', active: null }), Ember['default'].Object.create({ title: 'Rooms', location: 'rooms', active: null }), Ember['default'].Object.create({ title: 'Rows', location: 'rows', active: null }), Ember['default'].Object.create({ title: 'Racks', location: 'racks', active: null }), Ember['default'].Object.create({ title: 'Baskets', location: 'baskets', active: null }), Ember['default'].Object.create({ title: 'Servers', location: 'servers', active: null }), Ember['default'].Object.create({ title: 'Server Templates', location: 'servertemplates', active: null }), Ember['default'].Object.create({ title: 'Components', location: 'components', active: null })]),\n    title: 'MB Test 1: EmberJS'\n  });\n\n});","define('mb-test-1/controllers/node', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['notification_center'],\n        serversResultsLoader: (function () {\n            return this.get('model').getServersLoader();\n        }).property('model')\n    });\n\n});","define('mb-test-1/controllers/nodes', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['application'],\n\n        resultsLoader: Ember['default'].computed.oneWay('model')\n    });\n\n});","define('mb-test-1/controllers/notification-center', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var AlertMessage = Ember['default'].Object.extend({\n        expire: false\n    });\n\n    exports['default'] = Ember['default'].ArrayController.extend({\n        model: [],\n\n        clearAlerts: function clearAlerts() {\n            this.set(\"content\", []);\n        },\n\n        clearNamedAlert: function clearNamedAlert(name) {\n            var cleanAlerts = this.rejectBy(\"name\", name);\n            this.set(\"content\", cleanAlerts);\n        },\n\n        expireAlerts: function expireAlerts() {\n            var cleanAlerts = this.rejectBy(\"expire\");\n            this.set(\"content\", cleanAlerts);\n        },\n\n        alert: function alert(attributes) {\n            var message = AlertMessage.create(attributes);\n            this.pushObject(message);\n            return message;\n        },\n\n        alertInfo: function alertInfo(message, options) {\n            options = _.extend({\n                message: message,\n                type: \"info\"\n            }, options);\n\n            return this.alert(options);\n        },\n\n        alertWarning: function alertWarning(message, options) {\n            options = _.extend({\n                message: message,\n                type: \"warning\"\n            }, options);\n\n            return this.alert(options);\n        },\n\n        alertError: function alertError(message, options) {\n            options = _.extend({\n                message: message,\n                type: \"error\"\n            }, options);\n\n            return this.alert(options);\n        },\n\n        alertSuccess: function alertSuccess(message, options) {\n            options = _.extend({\n                message: message,\n                type: \"success\"\n            }, options);\n            return this.alert(options);\n        }\n    });\n\n});","define('mb-test-1/controllers/rack', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['notification_center'],\n        serversResultsLoader: (function () {\n            return this.get('model').getServersLoader();\n        }).property('model')\n    });\n\n});","define('mb-test-1/controllers/racks', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['application'],\n\n        resultsLoader: Ember['default'].computed.oneWay('model')\n    });\n\n});","define('mb-test-1/controllers/room', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['notification_center'],\n        serversResultsLoader: (function () {\n            return this.get('model').getServersLoader();\n        }).property('model')\n    });\n\n});","define('mb-test-1/controllers/rooms', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['application'],\n\n        resultsLoader: Ember['default'].computed.oneWay('model')\n    });\n\n});","define('mb-test-1/controllers/row', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['notification_center'],\n        serversResultsLoader: (function () {\n            return this.get('model').getServersLoader();\n        }).property('model')\n    });\n\n});","define('mb-test-1/controllers/rows', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['application'],\n\n        resultsLoader: Ember['default'].computed.oneWay('model')\n    });\n\n});","define('mb-test-1/controllers/server', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['notification_center'],\n        componentsResultsLoader: (function () {\n            return this.get('model').getComponentsLoader();\n        }).property('model')\n    });\n\n});","define('mb-test-1/controllers/servers', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['application'],\n\n        resultsLoader: Ember['default'].computed.oneWay('model')\n    });\n\n});","define('mb-test-1/controllers/servertemplate', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['notification_center'],\n        serversResultsLoader: (function () {\n            return this.get('model').getServersLoader();\n        }).property('model')\n    });\n\n});","define('mb-test-1/controllers/servertemplates', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['application'],\n\n        resultsLoader: Ember['default'].computed.oneWay('model')\n    });\n\n});","define('mb-test-1/initializers/app-version', ['exports', 'mb-test-1/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('mb-test-1/initializers/env-injector-initializer', ['exports', 'mb-test-1/config/environment'], function (exports, ENV) {\n\n    'use strict';\n\n    exports['default'] = {\n        name: 'global-env-mbtest1',\n        initialize: function initialize(container) {\n            container.typeInjection('controller', 'ENV', 'env:main');\n            container.typeInjection('route', 'ENV', 'env:main');\n            container.register('env:main', ENV['default'], {\n                instantiate: false,\n                singleton: true\n            });\n        }\n    };\n\n});","define('mb-test-1/initializers/export-application-global', ['exports', 'ember', 'mb-test-1/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('mb-test-1/initializers/mbtest-app-global-initializer', ['exports'], function (exports) {\n\n    'use strict';\n\n    exports['default'] = {\n        name: 'mbtest-app-global',\n        initialize: function initialize(container, App) {\n            window.MbTestApp = App;\n        }\n    };\n\n});","define('mb-test-1/initializers/models-adapter-initializer', ['exports', 'mb-test-1/config/environment'], function (exports, ENV) {\n\n  'use strict';\n\n  exports['default'] = {\n    name: \"modelsAdapter\",\n    initialize: function initialize(container, App) {\n      var adapter;\n      if (App.ADAPTER) {\n        adapter = App.ADAPTER;\n      } else {\n        adapter = container.lookup(\"adapter:ajax\");\n      }\n      var register = function register(factoryName, host) {\n        var klass = container.lookupFactory(\"model:\" + factoryName);\n        adapter.registerHostForType(klass, host);\n      };\n      register(\"node\", ENV['default'].APP.API_HOST);\n      register(\"server\", ENV['default'].APP.API_HOST);\n      container.register(\"adapter:main\", adapter, { instantiate: false });\n    }\n  };\n\n});","define('mb-test-1/initializers/result-loaders-initializer', ['exports'], function (exports) {\n\n  'use strict';\n\n  var LOADER_NAMES = [\"base\", \"nodes\", \"servers\", \"floors\", \"rooms\", \"rows\", \"racks\", \"baskets\", \"servertemplates\", \"components\", \"properties\", \"propertyoptions\"];\n\n  exports['default'] = {\n    name: \"resultLoaders\",\n    initialize: function initialize(container) {\n      var i, klass, len, name, results;\n      results = [];\n      for (i = 0, len = LOADER_NAMES.length; i < len; i++) {\n        name = LOADER_NAMES[i];\n        klass = require(\"mb-test-1/models/results-loaders/\" + name)[\"default\"];\n        results.push(container.register(\"results-loader:\" + name, klass));\n      }\n    }\n  };\n\n});","define('mb-test-1/initializers/type-mappings-initializer', ['exports', 'mb-test-1/models/core/type-mappings'], function (exports, TypeMappings) {\n\n  'use strict';\n\n  exports['default'] = {\n    name: \"typeMappings\",\n    initialize: function initialize(container) {\n      var registerMapping = function registerMapping(key, factoryName) {\n        var klass = container.lookupFactory(\"model:\" + (factoryName || key));\n        return TypeMappings['default'].addTypeMapping(key, klass);\n      };\n      registerMapping(\"Nodes\", \"node\");\n      registerMapping(\"Servers\", \"server\");\n      registerMapping(\"Baskets\", \"basket\");\n      registerMapping(\"Racks\", \"rack\");\n      registerMapping(\"Rows\", \"row\");\n      registerMapping(\"Rooms\", \"room\");\n      registerMapping(\"Floors\", \"floor\");\n      registerMapping(\"Components\", \"component\");\n      registerMapping(\"ServerTemplates\", \"servertemplate\");\n      registerMapping(\"Server Templates\", \"servertemplate\");\n      registerMapping(\"Properties\", \"property\");\n      registerMapping(\"PropertyOptions\", \"propertyoption\");\n      registerMapping(\"Property Options\", \"propertyoption\");\n    }\n  };\n\n});","define('mb-test-1/lib/ajax', ['exports', 'ember', 'mb-test-1/config/environment', 'mb-test-1/utils/constants/cookie', 'mb-test-1/lib/connections/api-connection'], function (exports, Ember, ENV, COOKIE, ApiConnection) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Namespace.create({\n        csrfToken: Ember['default'].$.cookie(COOKIE['default'].CSRF_TOKEN),\n        defaultApiKey: null,\n\n        loadCSRFToken: function loadCSRFToken() {\n            var self = this;\n            var deferred = Ember['default'].RSVP.defer();\n            // POSTing to / will return a csrf token\n            this.ajax({\n                type: \"POST\",\n                url: ENV['default'].APP.API_HOST\n            }).then(function (response) {\n                self.csrfToken = response.csrf;\n                deferred.resolve();\n            });\n            return deferred.promise;\n        },\n\n        loadCSRFTokenIfNotLoaded: function loadCSRFTokenIfNotLoaded() {\n            return this.csrfToken ? Ember['default'].RSVP.resolve() : this.loadCSRFToken();\n        },\n\n        ajax: function ajax(settings) {\n            var connection = ApiConnection['default'].create({});\n            /*if (settings.url.indexOf(ENV.APP.API_HOST) >= 0) {\n                connection = AuthConnection.create({\n                    csrfToken: this.csrfToken\n                });\n            } else {\n                connection = ApiConnection.create({\n                    apiKey: this.defaultApiKey\n                });\n            }*/\n            return connection.ajax(settings);\n        }\n    });\n\n});","define('mb-test-1/lib/connections/api-connection', ['exports', 'ember', 'mb-test-1/lib/connections/base-connection', 'mb-test-1/lib/utils'], function (exports, Ember, BaseConnection, Utils) {\n\n    'use strict';\n\n    var DEFAULT_SETTINGS = {\n        dataType: \"json\",\n        contentType: \"application/json; charset=UTF-8\",\n        accepts: {\n            json: \"application/vnd.cegesta+json; version=1.1\"\n        } };\n\n    var ApiConnection = BaseConnection['default'].extend({\n        getEncodedAuthorization: function getEncodedAuthorization() {\n            var apiKey = this.get(\"apiKey\");\n            return Utils['default'].encodeAuthorization(apiKey);\n        },\n\n        isAuthorized: function isAuthorized() {\n            return !Ember['default'].isBlank(this.get(\"apiKey\"));\n        },\n\n        settings: function settings(additionalSettings) {\n            var headers = {};\n            /*if (this.isAuthorized()) {\n                headers[\"Authorization\"] = this.getEncodedAuthorization();\n            }*/\n            var settings = _.extend({\n                headers: headers\n            }, DEFAULT_SETTINGS, additionalSettings);\n\n            if (settings.data && settings.type.toUpperCase() !== \"GET\") {\n                settings.data = JSON.stringify(settings.data);\n            }\n            return settings;\n        } });\n\n    exports['default'] = ApiConnection;\n\n});","define('mb-test-1/lib/connections/auth-connection', ['exports', 'mb-test-1/lib/connections/base-connection'], function (exports, BaseConnection) {\n\n    'use strict';\n\n    //import ENV from \"mb-test-1/config/environment\";\n    exports['default'] = BaseConnection['default'].extend({\n        csrfToken: (function () {\n            var Ajax = require(\"mb-test-1/lib/ajax\")[\"default\"];\n            return Ajax.csrfToken;\n        }).property(),\n\n        getCsrfToken: function getCsrfToken() {\n            return this.get(\"csrfToken\");\n        },\n\n        settings: function settings(additionalSettings) {\n            var settings = additionalSettings; /*_.extend({\n                                               headers: {\n                                               \"X-CSRFToken\": this.getCsrfToken()\n                                               }\n                                               }, additionalSettings);*/\n\n            // This does NOT work in Firefox\n            // See http://stackoverflow.com/questions/16668386/cors-synchronous-requests-not-working-in-firefox\n            /* istanbul ignore if */\n            /*if (!window.TESTING) {\n                settings.xhrFields = {\n                    withCredentials: true\n                };\n            } else {\n                settings.beforeSend = function(xhr) {\n                    xhr.withCredentials = true;\n                };\n            }*/\n            return settings;\n        }\n    });\n\n});","define('mb-test-1/lib/connections/base-connection', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Object.extend({\n        settings: function settings(_settings) {\n            // This function can be overriden by descendant classes so they can add default arguments\n            return _settings;\n        },\n\n        post: function post(url, data) {\n            return this.ajax({\n                url: url,\n                data: data,\n                type: \"POST\"\n            });\n        },\n\n        \"delete\": function _delete(url) {\n            return this.ajax({\n                url: url,\n                type: \"DELETE\"\n            });\n        },\n\n        ajax: function ajax(settings) {\n            var Adapter = MbTestApp.__container__.lookup(\"adapter:main\");\n            return Adapter.load(this.settings(settings));\n        }\n    });\n\n});","define('mb-test-1/lib/ember-data/system/store/common', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports._bind = _bind;\n  exports._guard = _guard;\n  exports._objectIsAlive = _objectIsAlive;\n\n  var get = Ember['default'].get;\n  function _bind(fn) {\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    return function () {\n      return fn.apply(undefined, args);\n    };\n  }\n\n  function _guard(promise, test) {\n    var guarded = promise[\"finally\"](function () {\n      if (!test()) {\n        guarded._subscribers.length = 0;\n      }\n    });\n\n    return guarded;\n  }\n\n  function _objectIsAlive(object) {\n    return !(get(object, \"isDestroyed\") || get(object, \"isDestroying\"));\n  }\n\n});","define('mb-test-1/lib/ember-data/system/store/serializers', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports.serializerForAdapter = serializerForAdapter;\n\n  function serializerForAdapter(store, adapter, type) {\n    var serializer = adapter.serializer;\n\n    if (serializer === undefined) {\n      serializer = store.serializerFor(type);\n    }\n\n    if (serializer === null || serializer === undefined) {\n      serializer = {\n        extract: function extract(store, type, payload) {\n          return payload;\n        }\n      };\n    }\n\n    return serializer;\n  }\n\n});","define('mb-test-1/lib/utils', ['exports', 'ember', 'mb-test-1/utils/constants'], function (exports, Ember, Constants) {\n\n    'use strict';\n\n    var FORMAT_NUMBER_REGEX = /\\B(?=(\\d{3})+(?!\\d))/g,\n        PRETTY_LOG_URL_REGEX = /\\/marketplaces\\/[^\\/]*\\/(.+)$/,\n        STRIP_DOMAIN_REGEX = /^.*\\/\\/[^\\/]+/,\n        TO_TITLECASE_REGEX = /\\w\\S*/g,\n        SPACE_REPLACE_REGEX = /\\s/g,\n        UNDERSCORE_REPLACE_REGEX = /_/g,\n        PARAM_HELPER_1_REGEX = /[\\[]/,\n        PARAM_HELPER_2_REGEX = /[\\]]/,\n        PARAM_URI_DECODE_REGEX = /\\+/g,\n        FORMAT_CURRENCY_REGEX = /(\\d)(?=(\\d{3})+\\.)/g,\n        FORMAT_ERROR_REGEX = /-\\s/,\n        REMOVE_COMMA_WHITESPACE_REGEX = /,|\\s/g,\n        CURRENCY_TEST_REGEX = /^([0-9]*(\\.[0-9]{0,2})?)$/,\n        HIDE_BA_NUMBER_REGEX = /([0-9])[\\s+\\-]([0-9])/g,\n        HIDE_CC_NUMBER_REGEX = /([0-9]*)([0-9]{4})/g;\n\n    var Utils = Ember['default'].Namespace.create({\n\n        toDataUri: function toDataUri(string) {\n            return \"data:text/plain;charset=utf-8;base64,\" + window.btoa(string);\n        },\n\n        queryStringToObject: function queryStringToObject(string) {\n            if (string === undefined) {\n                return undefined;\n            }\n\n            var results = {};\n            var pairs = string.split(\"?\")[1].split(\"&\");\n            pairs.forEach(function (str) {\n                var pair = str.split(\"=\").map(function (s) {\n                    return window.decodeURIComponent(s);\n                });\n                results[pair[0]] = pair[1];\n            });\n\n            return results;\n        },\n\n        objectToQueryString: function objectToQueryString(object) {\n            return _.map(object, function (v, k) {\n                var value = Ember['default'].isBlank(v) ? \"\" : v;\n                return encodeURIComponent(k) + \"=\" + encodeURIComponent(value);\n            }).join(\"&\");\n        },\n\n        stripDomain: function stripDomain(url) {\n            return url.replace(STRIP_DOMAIN_REGEX, \"\");\n        },\n\n        prettyLogUrl: function prettyLogUrl(url) {\n            return Utils.stripDomain(url).replace(PRETTY_LOG_URL_REGEX, \"/.../$1\").split(\"?\")[0];\n        },\n\n        prettyPrint: function prettyPrint(obj) {\n            return JSON.stringify(obj, null, 2);\n        },\n\n        geoIP: function geoIP(ip, callback) {\n            if (window.TESTING) {\n                return callback(\"(San Francisco, California, United States)\");\n            }\n\n            if (ip) {\n                return Ember['default'].$.ajax(\"https://freegeoip.net/json/\" + ip, {\n                    dataType: \"jsonp\",\n                    type: \"GET\",\n                    jsonp: \"callback\"\n                }).then(function (result) {\n                    var geoIpString;\n\n                    if (result.city && result.region_name && result.country_name) {\n                        geoIpString = \"(\" + result.city + \", \" + result.region_name + \", \" + result.country_name + \")\";\n                    } else if (result.region_name && result.country_name) {\n                        geoIpString = \"(\" + result.region_name + \", \" + result.country_name + \")\";\n                    }\n\n                    if (_.isFunction(callback)) {\n                        return callback(geoIpString);\n                    } else {\n                        return geoIpString;\n                    }\n                });\n            }\n        },\n\n        toTitleCase: function toTitleCase(str) {\n            if (!str) {\n                return str;\n            }\n\n            return str.replace(UNDERSCORE_REPLACE_REGEX, \" \").replace(TO_TITLECASE_REGEX, function (txt) {\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            });\n        },\n\n        toLowerCase: function toLowerCase(str) {\n            if (!str) {\n                return str;\n            }\n\n            return str.toLowerCase();\n        },\n\n        getParamByName: function getParamByName(uri, name) {\n            name = name.replace(PARAM_HELPER_1_REGEX, \"\\\\\\\\[\").replace(PARAM_HELPER_2_REGEX, \"\\\\\\\\]\");\n            var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n                results = regex.exec(uri);\n            return results === null ? \"\" : decodeURIComponent(results[1].replace(PARAM_URI_DECODE_REGEX, \" \"));\n        },\n\n        /*\n         * Inserts or updates a single query string parameter\n         */\n        updateQueryStringParameter: function updateQueryStringParameter(uri, key, value) {\n            var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n            var separator = uri.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n            if (uri.match(re)) {\n                return uri.replace(re, \"$1\" + key + \"=\" + value + \"$2\");\n            } else {\n                return uri + separator + key + \"=\" + value;\n            }\n        },\n\n        sortDict: function sortDict(dict) {\n            var sorted = [];\n            for (var key in dict) {\n                sorted[sorted.length] = key;\n            }\n            sorted.sort();\n\n            var tempDict = {};\n            for (var i = 0; i < sorted.length; i++) {\n                tempDict[sorted[i]] = dict[sorted[i]];\n            }\n\n            return tempDict;\n        },\n\n        formatCurrency: function formatCurrency(cents) {\n            if (!cents) {\n                return \"$0.00\";\n            }\n\n            var prepend = \"$\";\n            if (cents < 0) {\n                cents = cents * -1;\n                prepend = \"-$\";\n            }\n\n            return prepend + Utils.centsToDollars(cents);\n        },\n\n        formatNumber: function formatNumber(number) {\n            if (!number) {\n                return 0;\n            }\n\n            return (\"\" + number).replace(FORMAT_NUMBER_REGEX, \",\");\n        },\n\n        formatError: function formatError(error) {\n            if (error !== null && error !== undefined) {\n                if (error.message) {\n                    // amount validation\n                    return error.message;\n                } else if (error.search === undefined) {\n                    // ember validation\n                    return (error.get(\"messages\") || []).join(\", \");\n                } else {\n                    // server-side validation\n                    var split = error.search(FORMAT_ERROR_REGEX);\n                    if (split !== -1) {\n                        return error.slice(split + 2);\n                    }\n                }\n            }\n            return error;\n        },\n\n        capitalize: function capitalize(str) {\n            if (!str) {\n                return str;\n            }\n\n            return str.charAt(0).toUpperCase() + str.slice(1).replace(UNDERSCORE_REPLACE_REGEX, \" \");\n        },\n\n        dollarsToCents: function dollarsToCents(dollars) {\n            if (!dollars) {\n                throw new Error(\"%@ is not a valid dollar amount\".fmt(dollars));\n            }\n\n            // remove commas and whitespace\n            dollars = dollars.replace(REMOVE_COMMA_WHITESPACE_REGEX, \"\");\n\n            // make sure our input looks reasonable now, or else fail\n            if (!CURRENCY_TEST_REGEX.test(dollars)) {\n                throw new Error(\"%@ is not a valid dollar amount\".fmt(dollars));\n            }\n\n            return Math.round(100 * parseFloat(dollars));\n        },\n\n        centsToDollars: function centsToDollars(cents) {\n            if (!cents) {\n                return \"0\";\n            }\n\n            return (cents / 100).toFixed(2).replace(FORMAT_CURRENCY_REGEX, \"$1,\");\n        },\n\n        applyUriFilters: function applyUriFilters(uri, params) {\n            if (!uri) {\n                return uri;\n            }\n\n            var transformedParams = [\"limit\", \"offset\", \"sortField\", \"sortOrder\", \"minDate\", \"maxDate\", \"type\", \"query\"];\n\n            var filteringParams = {\n                limit: params.limit || 10,\n                offset: params.offset || 0\n            };\n\n            if (params.sortField && params.sortOrder && params.sortOrder !== \"none\") {\n                filteringParams.sort = params.sortField + \",\" + params.sortOrder;\n            }\n\n            if (params.minDate) {\n                filteringParams[\"created_at[>]\"] = params.minDate.toISOString();\n            }\n            if (params.maxDate) {\n                filteringParams[\"created_at[<]\"] = params.maxDate.toISOString();\n            }\n            if (params.type) {\n                switch (params.type) {\n                    case \"search\":\n                        filteringParams[\"type[in]\"] = Constants['default'].SEARCH.SEARCH_TYPES.join(\",\");\n                        break;\n                    case \"transaction\":\n                        filteringParams[\"type[in]\"] = Constants['default'].SEARCH.TRANSACTION_TYPES.join(\",\");\n                        break;\n                    case \"funding_instrument\":\n                        filteringParams[\"type[in]\"] = Constants['default'].SEARCH.FUNDING_INSTRUMENT_TYPES.join(\",\");\n                        break;\n                    default:\n                        filteringParams.type = params.type;\n                }\n            }\n            filteringParams.q = \"\";\n            if (params.query && params.query !== \"%\") {\n                filteringParams.q = params.query;\n            }\n\n            filteringParams = _.extend(filteringParams, _.omit(params, transformedParams));\n            filteringParams = Utils.sortDict(filteringParams);\n            return this.buildUri(uri, filteringParams);\n        },\n\n        buildUri: function buildUri(path, queryStringObject) {\n            var queryString = _.isString(queryStringObject) ? queryStringObject : this.objectToQueryString(queryStringObject);\n            return Ember['default'].isBlank(queryString) ? path : path + \"?\" + queryString;\n        },\n\n        /*\n         * This function checks whether data is loaded, when it is loaded, loadedFunc\n         * is called and the result is returned. Otherwise, result of loadingFunc()\n         * will be returned and callback(loadedFunc()) will be called once the data is loaded\n         *\n         * It is very useful for getting a loading message when it is loading,\n         * update the information later with the data is loaded.\n         */\n        maybeDeferredLoading: function maybeDeferredLoading(data, callback, loadingFunc, loadedFunc) {\n            // the data is already loaded\n            if (data.isLoaded) {\n                return loadedFunc();\n            }\n\n            // called when data is loaded\n            data.on(\"didLoad\", function () {\n                callback(loadedFunc());\n            });\n            return loadingFunc();\n        },\n\n        combineUri: function combineUri(baseUri, path) {\n            if (!baseUri || !path) {\n                throw new Error(\"Can't combine URIs: %@ %@\".fmt(baseUri, path));\n            }\n\n            // strip trailing slash\n            if (baseUri[baseUri.length - 1] === \"/\") {\n                baseUri = baseUri.substring(0, baseUri.length - 1);\n            }\n\n            // strip leading slash\n            if (path[0] === \"/\") {\n                path = path.substring(1);\n            }\n\n            return baseUri + \"/\" + path;\n        },\n\n        date_formats: {\n            date: \"MMM D, YYYY\",\n            time: \"h:mm A\",\n            date_time: \"MMM D, YYYY, h:mm A\",\n            short: \"M/D/YYYY, h:mm A\",\n            long: \"MMMM D YYYY, h:mm A\" },\n\n        formatDate: function formatDate(date, format) {\n            if (_.isDate(date)) {\n                return moment(date).format(format);\n            } else if (_.isString(date)) {\n                // As of Sept 22 2014 there is an issue with log api results returning the time zone as\n                // \"+00:00Z\" which is not being parsed as valid ISO_8601\n                // https://github.com/balanced/balanced/issues/644\n                return moment(date.replace(/\\+00:00Z$/, \"Z\"), moment.ISO_8601).format(format);\n            } else {\n                return date;\n            }\n        },\n\n        humanReadableDateTime: function humanReadableDateTime(isoDate) {\n            return Utils.formatDate(isoDate, Utils.date_formats.date_time);\n        },\n\n        humanReadableDate: function humanReadableDate(isoDate) {\n            return Utils.formatDate(isoDate, Utils.date_formats.date);\n        },\n\n        humanReadableTime: function humanReadableTime(isoDate) {\n            return Utils.formatDate(isoDate, Utils.date_formats.time);\n        },\n\n        humanReadableDateShort: function humanReadableDateShort(isoDate) {\n            return Utils.formatDate(isoDate, Utils.date_formats.short);\n        },\n\n        humanReadableDateLong: function humanReadableDateLong(isoDate) {\n            return Utils.formatDate(isoDate, Utils.date_formats.long);\n        },\n\n        // filters any number that is in the form of a string and longer than 4 digits (bank codes, ccard numbers etc)\n        filterSensitiveData: function filterSensitiveData(str) {\n            if (Ember['default'].isNone(str)) {\n                return str;\n            }\n            var strValue = \"\" + str;\n            return strValue.replace(HIDE_BA_NUMBER_REGEX, \"$1$2\").replace(HIDE_CC_NUMBER_REGEX, \"XX-HIDE-XX-$2\");\n        },\n\n        // Takes a hash and filters out all the sensitive data. Only preserves\n        // top-level properties, since mixpanel doesn't do nested properties\n        filterSensitivePropertiesMap: function filterSensitivePropertiesMap(obj) {\n            if (!obj) {\n                return obj;\n            }\n\n            var ret = {};\n            for (var name in obj) {\n                if (obj.hasOwnProperty(name)) {\n                    ret[name] = Utils.filterSensitiveData(obj[name]);\n                }\n            }\n            return ret;\n        },\n\n        encodeAuthorization: function encodeAuthorization(apiKey) {\n            return \"Basic \" + window.btoa(apiKey + \":\");\n        },\n\n        extractValidationErrorHash: function extractValidationErrorHash(errorsRoot) {\n            var errorsHash = {};\n            _.each(errorsRoot.errors, function (error) {\n                for (var key in error.extras) {\n                    errorsHash[key] = error.extras[key];\n                }\n            });\n            return errorsHash;\n        },\n\n        traverse: function traverse(o, fn, ctx, addlKey) {\n            addlKey = addlKey || \"\";\n\n            _.each(o, function (val, key) {\n                fn.call(this, val, addlKey + key);\n\n                if (_.isObject(val)) {\n                    Utils.traverse(val, fn, ctx, key + \".\");\n                }\n            }, ctx);\n        },\n\n        safeFormat: function safeFormat(template) {\n            var args = _.toArray(arguments).slice(1).map(function (str) {\n                return Ember['default'].Handlebars.Utils.escapeExpression(str);\n            });\n            return template.fmt.apply(template, args);\n        },\n\n        formatBankName: function formatBankName(bankName) {\n            var formattedBankName = Utils.toTitleCase(bankName);\n\n            _.each(Constants['default'].BANK_NAMES, function (unformattedArr, formattedStr) {\n                _.each(unformattedArr, function (unformattedStr) {\n                    formattedBankName = formattedBankName.replace(unformattedStr, formattedStr);\n                });\n            });\n\n            return formattedBankName;\n        },\n\n        formatStatusCode: function formatStatusCode(statusCode) {\n            if (statusCode) {\n                return Utils.capitalize(statusCode.replace(/-/g, \" \"));\n            } else {\n                return null;\n            }\n        },\n\n        formatFileSize: function formatFileSize(bytes) {\n            if (bytes >= 1000000000) {\n                bytes = (bytes / 1000000000).toFixed(2) + \" gb\";\n            } else if (bytes >= 1000000) {\n                bytes = (bytes / 1000000).toFixed(2) + \" mb\";\n            } else if (bytes >= 1000) {\n                bytes = (bytes / 1000).toFixed(2) + \" kb\";\n            } else if (bytes > 1) {\n                bytes = bytes + \" bytes\";\n            } else if (bytes === 1) {\n                bytes = bytes + \" byte\";\n            } else {\n                bytes = \"0 byte\";\n            }\n            return bytes;\n        },\n\n        getCurrentYear: function getCurrentYear() {\n            return moment().get(\"year\");\n        }\n    });\n\n    exports['default'] = Utils;\n\n});","define('mb-test-1/models/basket', ['exports', 'ember', 'mb-test-1/models/core/model', 'mb-test-1/utils/model'], function (exports, Ember, Model, utils__model) {\n\n    'use strict';\n\n    exports['default'] = Model['default'].extend(Ember['default'].Validations, {\n        validations: {\n            name: {\n                presence: true\n            },\n            rack: {\n                presence: true\n            },\n            slot_qty: {\n                presence: true\n            },\n            unit_takes: {\n                presence: true\n            }\n        },\n        /*name: DS.attr('string'),\n        rack: DS.belongsTo('rack'),\n        slot_qty: DS.attr('number'),\n        unit_takes: DS.attr('number'),\n        servers: DS.hasMany('server')*/\n        uri: \"/baskets\",\n        route_name: \"baskets\",\n        type_name: \"Basket\",\n        type_plural: \"Baskets\",\n\n        json_node: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.node;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").node;\n            });\n        }).property(\"__json\"),\n\n        json_floor: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.floor;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").floor;\n            });\n        }).property(\"__json\"),\n\n        json_room: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.room;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").room;\n            });\n        }).property(\"__json\"),\n\n        json_row: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.row;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").row;\n            });\n        }).property(\"__json\"),\n\n        json_rack: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.rack;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").rack;\n            });\n        }).property(\"__json\"),\n\n        getResultsLoader: utils__model.generateResultsLoader(\"baskets\", \"uri\"),\n        getServersLoader: utils__model.generateResultsLoader(\"servers\", \"servers_uri\"),\n\n        servers_uri: (function () {\n            return this.get(\"uri\") + \"/servers\";\n        }).property(\"uri\") });\n\n});","define('mb-test-1/models/component', ['exports', 'ember', 'mb-test-1/models/core/model', 'mb-test-1/utils/model'], function (exports, Ember, Model, utils__model) {\n\n    'use strict';\n\n    exports['default'] = Model['default'].extend(Ember['default'].Validations, {\n        validations: {\n            name: {\n                presence: true\n            },\n            manufacturer: {\n                presence: true\n            },\n            model_name: {\n                presence: true\n            },\n            serial_number: {\n                presence: true\n            },\n            kind: {\n                presence: true\n            }\n        },\n        uri: \"/components\",\n        route_name: \"components\",\n        type_name: \"Component\",\n        type_plural: \"Components\",\n\n        json_kind: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.kind;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").kind;\n            });\n        }).property(\"__json\"),\n\n        json_server: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.server;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").server;\n            });\n        }).property(\"__json\"),\n\n        getResultsLoader: utils__model.generateResultsLoader(\"components\", \"uri\"),\n        getPropertiesLoader: utils__model.generateResultsLoader(\"properties\", \"properties_uri\"),\n\n        properties_uri: (function () {\n            return this.get(\"uri\") + \"/properties\";\n        }).property(\"uri\") });\n\n});","define('mb-test-1/models/core/mixins/load-promise', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var Evented = Ember['default'].Evented,\n        // ember-runtime/mixins/evented\n    run = Ember['default'].run,\n        // ember-metal/run-loop\n    get = Ember['default'].get,\n        // ember-metal/accessors\n    set = Ember['default'].set;\n\n    var PENDING = void 0;\n    var SEALED = 0;\n    var FULFILLED = 1;\n    var REJECTED = 2;\n\n    var LoadPromise = Ember['default'].Mixin.create(Evented, {\n        init: function init() {\n            this._super.apply(this, arguments);\n\n            _.each(['didLoad', 'didCreate'], function (name) {\n                this.one(name, this, function () {\n                    run(this, 'resolve', this);\n                });\n            }, this);\n\n            _.each(['becameError', 'becameInvalid'], function (name) {\n                this.one(name, this, function () {\n                    run(this, 'reject', this);\n                });\n            }, this);\n\n            if (get(this, 'isLoaded')) {\n                this.trigger('didLoad');\n            }\n        },\n\n        resolveOn: function resolveOn(successEvent) {\n            var model = this;\n            var deferred = Ember['default'].RSVP.defer();\n\n            function success(args) {\n                resetEventHandlers();\n                deferred.resolve(args || model);\n            }\n\n            function error(args) {\n                resetEventHandlers();\n                deferred.reject(args || model);\n            }\n\n            function resetEventHandlers() {\n                _.each(['becameError', 'becameInvalid'], function (name) {\n                    this.off(name, error);\n                }, model);\n\n                _.each(['didLoad', 'didCreate'], function (name) {\n                    this.off(name, success);\n                }, model);\n            }\n\n            model._resetPromise();\n            model.one(successEvent, success);\n            model.one('becameError', error);\n            model.one('becameInvalid', error);\n\n            return deferred.promise;\n        },\n\n        _resetPromise: function _resetPromise() {\n            // once a promise is resolved it doesn't not seem possible to get it\n            // to \"reset\". we emulate that capability here by creating a new\n            // promise if it has already been rejected which can happen during\n            // model object validation.\n            var resolved = this.get('_deferred');\n\n            // RSVP got rid of isRejected and uses _state to maintain a promise's state\n            if (resolved && resolved.promise && resolved.promise._state === REJECTED) {\n                set(this, '_deferred', Ember['default'].RSVP.defer());\n            }\n        },\n\n        //\n        then: function then(resolve, reject, label) {\n            var deferred, promise, entity;\n\n            entity = this;\n            deferred = get(this, '_deferred');\n            promise = deferred.promise;\n\n            function fulfillmentHandler(fulfillment) {\n                if (fulfillment === promise) {\n                    return resolve(entity);\n                } else {\n                    return resolve(fulfillment);\n                }\n            }\n\n            return promise.then(resolve && fulfillmentHandler, reject, label);\n        },\n\n        resolve: function resolve(value) {\n            var deferred, promise;\n\n            deferred = Ember['default'].get(this, '_deferred');\n            promise = deferred.promise;\n\n            if (value === this) {\n                deferred.resolve(promise);\n            } else {\n                deferred.resolve(value);\n            }\n        },\n\n        reject: function reject(value) {\n            Ember['default'].get(this, '_deferred').reject(value);\n        },\n\n        _deferred: Ember['default'].computed(function () {\n            return Ember['default'].RSVP.defer('Ember: DeferredMixin - ' + this);\n        })\n    });\n\n    exports['default'] = LoadPromise;\n\n});","define('mb-test-1/models/core/model-array', ['exports', 'ember', 'mb-test-1/models/core/mixins/load-promise', 'mb-test-1/models/core/type-mappings', 'mb-test-1/lib/ember-data/system/store/common', 'mb-test-1/lib/ember-data/system/store/serializers'], function (exports, Ember, LoadPromise, TypeMappings, common, serializers) {\n\n    'use strict';\n\n    var Promise = Ember['default'].RSVP.Promise;\n\n    var getAdapter = function getAdapter() {\n        return MbTestApp.__container__.lookup(\"adapter:main\");\n    };\n\n    var ModelArray = Ember['default'].ArrayProxy.extend(LoadPromise['default'], {\n        hasNextPage: false,\n        loadingNextPage: false,\n\n        loadNextPage: function loadNextPage() {\n            var self = this;\n\n            var promise = this.resolveOn(\"didLoad\");\n            self.set(\"loadingNextPage\", true);\n\n            if (this.get(\"hasNextPage\")) {\n                var typeClass = this.get(\"typeClass\");\n                getAdapter().find(typeClass, this.get(\"next_uri\")).then(function (json) {\n                    var deserializedJson = typeClass.serializer.extractCollection(json);\n                    self._populateModels(deserializedJson);\n                    self.set(\"loadingNextPage\", false);\n                });\n            } else {\n                promise.reject(this);\n                self.set(\"loadingNextPage\", false);\n            }\n\n            return promise;\n        },\n\n        loadAll: function loadAll() {\n            var self = this;\n            var loadAll = _.bind(this.loadAll, this);\n\n            if (this.get(\"isLoaded\")) {\n                _.defer(function () {\n                    if (self.get(\"hasNextPage\") && !self.get(\"loadingNextPage\")) {\n                        self.loadNextPage().then(loadAll);\n                    }\n                });\n            } else {\n                this.one(\"didLoad\", loadAll);\n            }\n        },\n\n        reload: function reload() {\n            var deferred = Ember['default'].RSVP.defer();\n            if (!this.get(\"isLoaded\")) {\n                return this;\n            }\n\n            var self = this;\n            this.set(\"isLoaded\", false);\n            var typeClass = this.get(\"typeClass\");\n\n            getAdapter().find(this.constructor, this.get(\"uri\")).then(function (json) {\n                // todo, maybe we should go through and reload each item rather\n                // than nuking and re-adding\n                self.clear();\n                var deserializedJson = typeClass.serializer.extractCollection(json);\n                self._populateModels(deserializedJson);\n                deferred.resolve(self);\n            }, function () {\n                deferred.reject(self);\n            });\n            return deferred.promise;\n        },\n\n        _populateModels: function _populateModels(json) {\n            //Ember.Logger.debug('input data:');\n            //Ember.Logger.debug(json);\n            var self = this;\n\n            var typeClass = this.get(\"typeClass\");\n\n            var itemsArray;\n            if (json && Ember['default'].$.isArray(json)) {\n                itemsArray = json;\n                this.setProperties({\n                    next_uri: undefined,\n                    hasNextPage: false,\n                    counts: {},\n                    total: json.length\n                });\n            } else {\n                if (json && json.items && Ember['default'].$.isArray(json.items)) {\n                    //Ember.Logger.debug('next step is here - parse json.items: ');\n                    //Ember.Logger.debug(json.items);\n\n                    itemsArray = json.items;\n\n                    if (json.linked) {\n                        this.set(\"linked\", json.linked);\n                    }\n\n                    if (json.next_uri) {\n                        this.set(\"next_uri\", json.next_uri);\n                        this.set(\"hasNextPage\", true);\n                    } else {\n                        this.set(\"next_uri\", undefined);\n                        this.set(\"hasNextPage\", false);\n                    }\n\n                    this.set(\"counts\", json.counts);\n                    this.set(\"total\", json.total);\n                } else {\n                    this.set(\"isError\", true);\n                    return;\n                }\n            }\n\n            var typedObjects = _.map(itemsArray, function (item) {\n                var typedObj = typeClass._materializeLoadedObjectFromAPIResult(item);\n\n                // if an object is deleted, remove it from the collection\n                typedObj.on(\"didDelete\", function () {\n                    self.removeObject(typedObj);\n                });\n\n                return typedObj;\n            });\n\n            //Ember.Logger.debug('typedObjects is equal to: ');\n            //Ember.Logger.debug(typedObjects);\n\n            this.addObjects(typedObjects);\n            this.set(\"isLoaded\", true);\n            this.trigger(\"didLoad\");\n        },\n\n        _handleError: function _handleError(jqXHR, textStatus, errorThrown) {\n            if (jqXHR.status === 400) {\n                this.set(\"isValid\", false);\n                this.trigger(\"becameInvalid\", jqXHR.responseText);\n            } else {\n                this.set(\"isError\", true);\n                this.trigger(\"becameError\", jqXHR.responseText);\n            }\n        }\n    });\n\n    ModelArray.reopenClass({\n        newArrayLoadedFromUri: function newArrayLoadedFromUri(uri, defaultType) {\n            var typeClass = TypeMappings['default'].typeClass(defaultType);\n            var modelObjectsArray = this.create({\n                content: Ember['default'].A(),\n                typeClass: typeClass,\n                uri: uri\n            });\n\n            if (!uri) {\n                //Ember.Logger.warn(\"DELETE ME: No URI\");\n                return modelObjectsArray;\n            }\n            modelObjectsArray.set(\"isLoaded\", false);\n            getAdapter().find(typeClass, uri).then(function (json) {\n                var deserializedJson = typeClass.serializer.extractCollection(json);\n                //Ember.Logger.debug('deserializedJson: ');\n                //Ember.Logger.debug(deserializedJson);\n                modelObjectsArray._populateModels(deserializedJson);\n            }, function (jqXHR, textStatus, errorThrown) {\n                //Ember.Logger.debug(arguments);\n                modelObjectsArray._handleError(jqXHR, textStatus, errorThrown);\n            }); //*/\n\n            return modelObjectsArray;\n        },\n\n        newArrayCreatedFromJson: function newArrayCreatedFromJson(json, defaultType) {\n            var typeClass = TypeMappings['default'].typeClass(defaultType);\n            var modelObjectsArray = this.create({\n                content: Ember['default'].A(),\n                typeClass: typeClass,\n                uri: null\n            });\n\n            if (!json) {\n                return modelObjectsArray;\n            }\n\n            var deserializedJson = typeClass.serializer.extractCollection(json);\n            modelObjectsArray._populateModels(deserializedJson);\n\n            return modelObjectsArray;\n        }\n    });\n\n    exports['default'] = ModelArray;\n\n});","define('mb-test-1/models/core/model', ['exports', 'ember', 'mb-test-1/models/core/mixins/load-promise', 'mb-test-1/models/core/type-mappings', 'mb-test-1/utils/computed', 'mb-test-1/serializers/rev1', 'mb-test-1/lib/utils', 'mb-test-1/models/core/model-array'], function (exports, Ember, LoadPromise, TypeMappings, Computed, Rev1Serializer, Utils, ModelArray) {\n\n    'use strict';\n\n    var JSON_PROPERTY_KEY = \"__json\";\n    var URI_POSTFIX = \"_uri\";\n    var URI_METADATA_PROPERTY = \"_uris\";\n    var INTEGER_REGEX = /\\b[0-9]+\\b/;\n    var PRIVATE_PROPERTIES = [\"id\", \"validationErrors\", \"_type\"];\n    var AJAX_ERROR_PARSERS = [];\n\n    var Model = Ember['default'].Object.extend(Ember['default'].Evented, Ember['default'].Copyable, LoadPromise['default'], {\n        isLoaded: false,\n        isSaving: false,\n        isDeleted: false,\n        isError: false,\n        isNew: true,\n        isValid: true,\n\n        displayErrorDescription: (function () {\n            return (!this.get(\"isValid\") || this.get(\"isError\")) && (!this.get(\"validationErrors\") || !_.keys(this.get(\"validationErrors\")).length);\n        }).property(\"isValid\", \"isError\", \"validationErrors\"),\n\n        id: Computed['default'].orProperties(\"__json.id\", \"_id\"),\n\n        // computes the ID from the URI - exists because at times Ember needs the\n        // ID of our model before it has finished loading. This gets overridden\n        // when the real model object gets loaded by the ID value from the JSON\n        // attribute\n        _id: (function () {\n            var uri = this.get(\"uri\");\n\n            if (uri) {\n                return uri.substring(uri.lastIndexOf(\"/\") + 1);\n            }\n        }).property(\"uri\"),\n\n        save: function save(settings) {\n            var Adapter = this.constructor.getAdapter();\n            var self = this;\n            settings = settings || {};\n            var data = this.constructor.serializer.serialize(this);\n\n            self.set(\"isSaving\", true);\n\n            var creatingNewModel = this.get(\"isNew\");\n\n            var resolveEvent = creatingNewModel ? \"didCreate\" : \"didUpdate\";\n            var uri = creatingNewModel ? this._createUri() : this.get(\"uri\");\n            var adapterFunc = creatingNewModel ? Adapter.createRecord : Adapter.updateRecord;\n\n            var promise = this.resolveOn(resolveEvent);\n\n            Ember['default'].Logger.debug(\"Model.save: uri=\", uri);\n            Ember['default'].Logger.debug(\"Model.save: data=\", data);\n\n            adapterFunc.call(Adapter, this.constructor, uri, data, settings).then(function (json) {\n                var deserializedJson = self.constructor.serializer.extractSingle(json, self.constructor, creatingNewModel ? null : self.get(\"href\"));\n                self._updateFromJson(deserializedJson);\n\n                self.setProperties({\n                    isNew: false,\n                    isSaving: false,\n                    isValid: true,\n                    isError: false\n                });\n\n                self.trigger(resolveEvent);\n                Model.Events.trigger(resolveEvent, self);\n            }, Ember['default'].$.proxy(self._handleError, self));\n\n            return promise;\n        },\n\n        ingestErrorResponse: function ingestErrorResponse(response) {\n            var errorHandler = new ValidationServerErrorHandler(this, response);\n            errorHandler.execute();\n        },\n\n        validateAndSave: function validateAndSave(settings) {\n            this.get(\"validationErrors\").clear();\n            this.validate();\n            if (this.get(\"isValid\")) {\n                var Adapter = this.constructor.getAdapter();\n                var self = this;\n                settings = settings || {};\n                var data = this.constructor.serializer.serialize(this);\n\n                self.set(\"isSaving\", true);\n\n                var creatingNewModel = this.get(\"isNew\");\n                var uri = creatingNewModel ? this._createUri() : this.get(\"uri\");\n                var adapterFunc = creatingNewModel ? Adapter.createRecord : Adapter.updateRecord;\n                var deferred = Ember['default'].RSVP.defer();\n                var successHandler = function successHandler(json) {\n                    var deserializedJson = self.constructor.serializer.extractSingle(json, self.constructor, creatingNewModel ? null : self.get(\"href\"));\n                    self._updateFromJson(deserializedJson);\n                    self.setProperties({\n                        isNew: false,\n                        isSaving: false,\n                        isValid: true,\n                        isError: false\n                    });\n                };\n\n                adapterFunc.call(Adapter, this.constructor, uri, data, settings).then(function (json) {\n                    successHandler(json);\n                    deferred.resolve(self);\n                }, function (response) {\n                    self.ingestErrorResponse(response.responseJSON);\n                    deferred.reject(self);\n                });\n                return deferred.promise;\n            } else {\n                return Ember['default'].RSVP.reject(this);\n            }\n        },\n\n        _createUri: function _createUri() {\n            return this.get(\"uri\");\n        },\n\n        \"delete\": function _delete(settings) {\n            var self = this;\n            settings = settings || {};\n\n            Ember['default'].Logger.debug(\"Model.delete:\");\n            Ember['default'].Logger.debug(this);\n            Ember['default'].Logger.debug(this.get(\"uri\"));\n\n            this.setProperties({\n                isDeleted: true,\n                isSaving: true\n            });\n\n            this.constructor.getAdapter().deleteRecord(this.constructor, this.get(\"uri\")).then(function (json) {\n                self.set(\"isSaving\", false);\n                self.trigger(\"didDelete\");\n                Model.Events.trigger(\"didDelete\", self);\n            }, Ember['default'].$.proxy(self._handleError, self), settings);\n            return this.resolveOn(\"didDelete\");\n        },\n\n        reload: function reload() {\n            if (!this.get(\"isLoaded\")) {\n                return this;\n            }\n\n            var self = this;\n            this.set(\"isLoaded\", false);\n\n            var promise = this.resolveOn(\"didLoad\");\n\n            Ember['default'].Logger.debug(\"Model.reload: uri=\", this.get(\"uri\"));\n\n            this.constructor.getAdapter().find(this.constructor, this.get(\"uri\")).then(function (json) {\n                var deserializedJson = self.constructor.serializer.extractSingle(json, self.constructor, self.get(\"href\"));\n                self._updateFromJson(deserializedJson);\n                self.set(\"isLoaded\", true);\n                self.trigger(\"didLoad\");\n            }, Ember['default'].$.proxy(self._handleError, self));\n\n            return promise;\n        },\n\n        copy: function copy() {\n            var modelObject = this.constructor.create({\n                uri: this.get(\"uri\")\n            });\n\n            modelObject._updateFromJson(this.get(JSON_PROPERTY_KEY));\n            return modelObject;\n        },\n\n        updateFromModel: function updateFromModel(modelObj) {\n            this._updateFromJson(modelObj.get(JSON_PROPERTY_KEY));\n        },\n\n        populateFromJsonResponse: function populateFromJsonResponse(json) {\n            var decodingUri = this.get(\"isNew\") ? null : this.get(\"uri\");\n            var modelJson = this.constructor.serializer.extractSingle(json, this.constructor, decodingUri);\n\n            if (modelJson) {\n                this._updateFromJson(modelJson);\n            } else {\n                this.setProperties({\n                    isNew: false,\n                    isError: true\n                });\n\n                this.trigger(\"becameError\");\n            }\n        },\n\n        getPojoProperties: function getPojoProperties(pojo) {\n            return Ember['default'].getProperties(pojo, Object.keys(pojo));\n        },\n        getProxiedProperties: function getProxiedProperties(proxyObject) {\n            // Three levels, first the content, then the prototype, then the properties of the instance itself\n            var contentProperties = this.getPojoProperties(proxyObject.get(\"content\")),\n                prototypeProperties = Ember['default'].getProperties(proxyObject, Object.keys(proxyObject.constructor.prototype)),\n                objectProperties = this.getPojoProperties(proxyObject);\n            return Ember['default'].merge(Ember['default'].merge(contentProperties, prototypeProperties), objectProperties);\n        },\n        getEmberObjectProperties: function getEmberObjectProperties(emberObject) {\n            var prototypeProperties = Ember['default'].getProperties(emberObject, Object.keys(emberObject.constructor.prototype)),\n                objectProperties = this.getPojoProperties(emberObject);\n            return Ember['default'].merge(prototypeProperties, objectProperties);\n        },\n        getProperties: function getProperties(object) {\n            if (object instanceof Ember['default'].ObjectProxy) {\n                return this.getProxiedProperties(object);\n            } else if (object instanceof Ember['default'].Object) {\n                return this.getEmberObjectProperties(object);\n            } else {\n                return this.getPojoProperties(object);\n            }\n        },\n\n        _updateFromJson: function _updateFromJson(json) {\n            var self = this;\n            if (!json) {\n                return;\n            }\n\n            var changes = {\n                isNew: false\n            };\n            changes[JSON_PROPERTY_KEY] = json;\n            //changes['_type'] = this.type_plural;\n\n            //Ember.Logger.debug('_updateFromJson: JSON=', json);\n\n            this.setProperties(changes);\n\n            var class_props = this.getProperties(this.constructor.proto());\n            //Ember.Logger.debug('PROPS: ', class_props);\n\n            Ember['default'].changeProperties(function () {\n                for (var prop in json) {\n                    if (json.hasOwnProperty(prop)) {\n                        if (class_props[prop] || self[prop] instanceof Ember['default'].ComputedProperty) {\n                            //Ember.Logger.debug('--> exclude property ', prop, json[prop]);//*/\n                            continue;\n                        }\n                        if (Ember['default'].$.inArray(prop, PRIVATE_PROPERTIES) >= 0) {\n                            //Ember.Logger.debug('--> exclude private property ', prop, json[prop]);//*/\n                            continue;\n                        }\n                        if (prop === \"type\") {\n                            self.set(\"_type\", json[prop]);\n                            continue;\n                        }\n                        //Ember.Logger.debug('--> SET property ', prop, json[prop]);//*/\n\n                        //var desc = Ember.meta(self.constructor.proto(), false);\n                        //Ember.Logger.debug(desc);\n\n                        /*var desc = Ember.meta(self.constructor.proto(), false).descs[prop];\n                        // don't override computed properties with raw json\n                        if (!(desc && desc instanceof Ember.ComputedProperty)) {\n                            self.set(prop, json[prop]);\n                        }*/\n                        var value = json[prop];\n                        if (Ember['default'].typeOf(value) === \"object\") {\n                            self.set(prop, Ember['default'].Object.create(value));\n                        } else if (Ember['default'].typeOf(value) === \"array\") {\n                            var arr = Ember['default'].A();\n                            value.forEach(function (item) {\n                                arr.pushObject(Ember['default'].Object.create(item));\n                            });\n                            self.set(prop, arr);\n                        } else {\n                            self.set(prop, json[prop]);\n                        }\n                    }\n                }\n            });\n\n            this.set(\"isLoaded\", true);\n            this.trigger(\"didLoad\");\n        },\n\n        _handleError: function _handleError(jqXHR, textStatus, errorThrown) {\n            this.set(\"isSaving\", false);\n\n            if (jqXHR.status >= 400 && jqXHR.status < 500) {\n                this.set(\"isValid\", false);\n                this.trigger(\"becameInvalid\", jqXHR.responseJSON || jqXHR.responseText);\n            } else {\n                this.setProperties({\n                    isError: true,\n                    errorStatusCode: jqXHR.status\n                });\n                this.trigger(\"becameError\", jqXHR.responseJSON || jqXHR.responseText);\n            }\n\n            if (jqXHR.responseJSON) {\n                var res = jqXHR.responseJSON;\n\n                if (res.errors && res.errors.length > 0) {\n                    var error = res.errors[0];\n\n                    _.each(AJAX_ERROR_PARSERS, function (ERROR_PARSER) {\n                        var doesMatch = false;\n                        if (_.isFunction(ERROR_PARSER.match)) {\n                            doesMatch = ERROR_PARSER.match(error);\n                        } else if (_.isRegExp(ERROR_PARSER.match)) {\n                            doesMatch = ERROR_PARSER.match.test(error.category_code);\n                        } else if (_.isString(ERROR_PARSER.match) && ERROR_PARSER.match === error.category_code) {\n                            doesMatch = true;\n                        } else if (!ERROR_PARSER.match) {\n                            doesMatch = true;\n                        }\n\n                        if (doesMatch) {\n                            error = ERROR_PARSER.parse(error);\n                        }\n                    });\n\n                    this.setProperties({\n                        validationErrors: Utils['default'].extractValidationErrorHash(res),\n                        errorDescription: error.description,\n                        requestId: error.request_id,\n                        errorCategoryCode: error.category_code,\n                        lastError: error\n                    });\n                } else {\n                    if (res.description) {\n                        this.set(\"errorDescription\", res.description);\n                    }\n\n                    if (res.request_id) {\n                        this.set(\"requestId\", res.requestId);\n                    }\n                }\n            }\n        },\n\n        _extractTypeClassFromUrisMetadata: function _extractTypeClassFromUrisMetadata(uriProperty) {\n            var uriMetadataProperty = JSON_PROPERTY_KEY + \".\" + URI_METADATA_PROPERTY;\n\n            var metadataType = this.get(uriMetadataProperty + \".\" + uriProperty + \"._type\");\n            if (metadataType) {\n                var mappedType = TypeMappings['default'].classForType(metadataType);\n                if (mappedType) {\n                    return mappedType;\n                } else {\n                    Ember['default'].Logger.warn(\"Couldn't map _type of %@ for URI: %@\".fmt(metadataType, this.get(\"uri\")));\n                }\n            }\n\n            return undefined;\n        },\n\n        isEqual: function isEqual(a, b) {\n            b = b || this;\n            return Ember['default'].get(a, \"id\") === Ember['default'].get(b, \"id\");\n        }\n    });\n\n    Model.reopenClass({\n        getAdapter: function getAdapter() {\n            return MbTestApp.__container__.lookup(\"adapter:main\");\n        },\n\n        serializer: Rev1Serializer['default'].create(),\n\n        find: function find(uri, settings) {\n            Ember['default'].Logger.debug(\"Model.find: uri=\", uri);\n            var modelClass = this;\n            var modelObject = modelClass.create({\n                uri: uri\n            });\n\n            modelObject.setProperties({\n                isLoaded: false,\n                isNew: false\n            });\n\n            this.getAdapter().find(modelClass, uri).then(function (json) {\n                Ember['default'].Logger.debug(\"Model.find: json=\", json);\n                modelObject.populateFromJsonResponse(json, uri);\n            }, Ember['default'].$.proxy(modelObject._handleError, modelObject));\n\n            //Ember.Logger.debug('modelObject:', modelObject);\n\n            return modelObject;\n        },\n\n        fetch: function fetch(uri, settings) {\n            var modelClass = this;\n            var deferred = Ember['default'].RSVP.defer();\n            this.getAdapter().get(modelClass, uri, function (json) {\n                var object = modelClass.create({\n                    uri: uri,\n                    isLoaded: false,\n                    isNew: false\n                });\n                object.populateFromJsonResponse(json, uri);\n                deferred.resolve(object);\n            }, function (error) {\n                deferred.reject(error.responseJSON);\n            });\n            return deferred.promise;\n        },\n\n        findAll: function findAll(settings) {\n            var uri = this.create().get(\"uri\");\n\n            if (!uri) {\n                throw new Error(\"Can't call findAll for class that doesn't have a default URI: %@\".fmt(this));\n            }\n\n            return ModelArray['default'].newArrayLoadedFromUri(uri, this);\n        },\n\n        constructUri: function constructUri(id) {\n            var uri = this.create().get(\"uri\");\n            if (id) {\n                return Utils['default'].combineUri(uri, id);\n            }\n            return uri;\n        },\n\n        /*\n         * Used for adding a one-to-one association to a model.\n         *\n         * Params:\n         * - propertyName - The property whose value we'll get to determine the URI\n         *  or embedded data to use for the association\n         *  - defaultType - Used as a fallback in case the object doesn't have a\n         * _type or the _uris doesn't have data for this association\n         *\n         * Example:\n         *\n         * Marketplace = UserMarketplace.extend({\n         *      owner_customer: Model.belongsTo('owner_customer_json', 'customer')\n         * });\n         */\n        belongsTo: function belongsTo(propertyName, defaultType) {\n            defaultType = defaultType || \"model\";\n\n            var embeddedProperty = JSON_PROPERTY_KEY + \".\" + propertyName;\n            var uriProperty = propertyName + URI_POSTFIX;\n            var fullUriProperty = JSON_PROPERTY_KEY + \".\" + propertyName + URI_POSTFIX;\n\n            return Ember['default'].computed(function () {\n                var typeClass = TypeMappings['default'].typeClass(defaultType);\n\n                var embeddedPropertyValue = this.get(embeddedProperty);\n                var uriPropertyValue = this.get(fullUriProperty);\n\n                if (embeddedPropertyValue) {\n                    if (!embeddedPropertyValue._type) {\n                        var response_like = {};\n                        response_like[embeddedPropertyValue.type] = [embeddedPropertyValue];\n                        embeddedPropertyValue = typeClass.serializer.extractSingle(response_like, typeClass) || embeddedPropertyValue;\n                    }\n\n                    var embeddedObj = typeClass._materializeLoadedObjectFromAPIResult(embeddedPropertyValue);\n                    return embeddedObj;\n                } else if (uriPropertyValue) {\n                    var metadataTypeClass = this._extractTypeClassFromUrisMetadata(uriProperty);\n                    if (metadataTypeClass) {\n                        typeClass = metadataTypeClass;\n                        return typeClass.find(uriPropertyValue);\n                    } else {\n                        // if we can't figure out what type it is from the\n                        // metadata, fetch it and set the result as an embedded\n                        // property in our JSON. That'll force an update of the\n                        // association\n                        var self = this;\n                        this.constructor.getAdapter().get(defaultType, uriPropertyValue, function (json) {\n                            var modelJson = typeClass.serializer.extractSingle(json, typeClass, uriPropertyValue);\n                            self.set(embeddedProperty, modelJson);\n                        });\n\n                        return embeddedPropertyValue;\n                    }\n                } else {\n                    return embeddedPropertyValue;\n                }\n            }).property(embeddedProperty, fullUriProperty);\n        },\n\n        belongsToWithUri: function belongsToWithUri(defaultType, uriPropertyName) {\n            return Ember['default'].computed(function () {\n                var typeClass = this.get(\"container\").lookupFactory(\"model:\" + defaultType);\n                var uriPropertyValue = this.get(uriPropertyName);\n                if (uriPropertyValue) {\n                    return typeClass.find(uriPropertyValue);\n                } else {\n                    return null;\n                }\n            }).property(uriPropertyName);\n        },\n\n        /*\n         * Used for adding a one-to-many association to a model.\n         *\n         * Params:\n         * - propertyName - The property whose value we'll get to determine the URI\n         *  or embedded data to use for the association\n         *  - defaultType - Used to find/construct child objects. If the _type\n         * field is present in the returned JSON, we'll map that to create objects\n         * of the correct type. Since we use the type of object to pick which host\n         * to use, it's important to set the defaultType, even if your returned\n         * data uses the _type field.\n         *\n         * Example:\n         *\n         * Marketplace = UserMarketplace.extend({\n         *      customers: Model.hasMany('customers_json', 'customer')\n         * });\n         */\n        hasMany: function hasMany(propertyName, defaultType) {\n            defaultType = defaultType || \"model\";\n\n            var embeddedProperty = JSON_PROPERTY_KEY + \".\" + propertyName;\n            var uriProperty = propertyName + URI_POSTFIX;\n            var fullUriProperty = JSON_PROPERTY_KEY + \".\" + uriProperty;\n            var uriMetadataProperty = JSON_PROPERTY_KEY + \".\" + URI_METADATA_PROPERTY;\n\n            return Ember['default'].computed(function () {\n                var typeClass = TypeMappings['default'].typeClass(defaultType);\n                var embeddedPropertyValue = this.get(embeddedProperty);\n                // if the URI isn't defined in the JSON, check for a property on\n                // the model. This way we can hardcode URIs if necessary to support\n                // undocumented URIs\n                var uriPropertyValue = this.get(fullUriProperty) || this.get(uriProperty);\n\n                if (embeddedPropertyValue) {\n                    return ModelArray['default'].newArrayCreatedFromJson(embeddedPropertyValue, defaultType);\n                } else if (uriPropertyValue) {\n                    return ModelArray['default'].newArrayLoadedFromUri(uriPropertyValue, defaultType);\n                } else {\n                    return ModelArray['default'].create({\n                        content: Ember['default'].A(),\n                        typeClass: typeClass\n                    });\n                }\n            }).property(embeddedProperty, uriProperty, fullUriProperty, uriMetadataProperty + \".@each\");\n        },\n\n        _materializeLoadedObjectFromAPIResult: function _materializeLoadedObjectFromAPIResult(json) {\n            //Ember.Logger.debug('ok, me. Lets test _materializeLoadedObjectFromAPIResult: ');\n            //Ember.Logger.debug('input data: ');\n            //Ember.Logger.debug(json);\n\n            var objClass = this;\n\n            if (json._type) {\n                var mappedTypeClass = TypeMappings['default'].classForType(json._type);\n                if (mappedTypeClass) {\n                    objClass = mappedTypeClass;\n                }\n            } else {\n                // HACK - once we fix the API response from the auth proxy, we should take out the if\n                Ember['default'].Logger.warn(\"No _type field found on URI: \" + json.uri);\n            }\n\n            var typedObj = objClass.create();\n            typedObj.set(\"isNew\", false);\n            typedObj._updateFromJson(json);\n            typedObj.trigger(\"didLoad\");\n\n            //Ember.Logger.debug('typedObj: ');\n            //Ember.Logger.debug(typedObj);\n\n            return typedObj;\n        },\n\n        _isEmbedded: function _isEmbedded(propertyName, settings) {\n            settings = settings || {};\n\n            var embedded = !/_uri$/.test(propertyName);\n            if (settings.hasOwnProperty(\"embedded\")) {\n                embedded = settings.embedded;\n            }\n\n            return embedded;\n        }\n    });\n\n    Model.Events = Ember['default'].Object.extend(Ember['default'].Evented).create();\n\n    exports['default'] = Model;\n\n});","define('mb-test-1/models/core/search-model-array', ['exports', 'ember', 'mb-test-1/models/core/model-array'], function (exports, Ember, ModelArray) {\n\n    'use strict';\n\n    var readOnly = function readOnly(type) {\n        return Ember['default'].computed.readOnly(\"counts.\" + type);\n    };\n\n    var SearchModelArray = ModelArray['default'].extend(Ember['default'].SortableMixin, {});\n\n    exports['default'] = SearchModelArray;\n\n    //total_servers: readOnly('server'),\n    //total_results: Computed.sumAll('total_servers')\n\n});","define('mb-test-1/models/core/type-mappings', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var TypeMapping = Ember['default'].Object.extend({\n        init: function init() {\n            this.typesMap = {};\n        },\n\n        addTypeMapping: function addTypeMapping(typeCode, className) {\n            this.typesMap[typeCode.toLowerCase()] = className;\n        },\n\n        classForType: function classForType(typeCode) {\n            typeCode = typeCode.toLowerCase();\n            var mappedType = this.typesMap[typeCode];\n            if (!mappedType) {\n                Ember['default'].Logger.warn(\"Couldn't map typeCode %@\".fmt(typeCode));\n            }\n            return this.typeClass(mappedType);\n        },\n\n        typeClass: function typeClass(type) {\n            if (_.isString(type)) {\n                return this.classForType(type);\n            } else {\n                return type;\n            }\n        }\n    });\n\n    var TypeMappings = TypeMapping.create();\n    exports['default'] = TypeMappings;\n\n});","define('mb-test-1/models/floor', ['exports', 'ember', 'mb-test-1/models/core/model', 'mb-test-1/utils/model'], function (exports, Ember, Model, utils__model) {\n\n    'use strict';\n\n    exports['default'] = Model['default'].extend(Ember['default'].Validations, {\n        validations: {\n            name: {\n                presence: true\n            },\n            node: {\n                presence: true\n            }\n        },\n        /*name: DS.attr('string'),\n        node: DS.belongsTo('node', { async: true }),\n        rooms: DS.hasMany('room', { async: true })*/\n        uri: \"/floors\",\n        route_name: \"floors\",\n        type_name: \"Floor\",\n        type_plural: \"Floors\",\n\n        node_name: (function () {\n            var node = this.get(\"json_node\");\n            if (node) {\n                return node.name;\n            }\n            return \"---\";\n        }).property(\"json_node\"),\n\n        json_node: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.node;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").node;\n            });\n        }).property(\"__json\"),\n\n        //node: Model.belongsTo('node', 'nodes'),\n        getServersLoader: utils__model.generateResultsLoader(\"servers\", \"servers_uri\"),\n        getResultsLoader: utils__model.generateResultsLoader(\"floors\", \"uri\"),\n\n        servers_uri: (function () {\n            return this.get(\"uri\") + \"/servers\";\n        }).property(\"uri\") });\n\n});","define('mb-test-1/models/node', ['exports', 'ember', 'mb-test-1/models/core/model', 'mb-test-1/utils/model'], function (exports, Ember, Model, utils__model) {\n\n    'use strict';\n\n    //import DS from 'ember-data';\n    exports['default'] = Model['default'].extend(Ember['default'].Validations, {\n        validations: {\n            name: {\n                presence: true\n            },\n            address: {\n                presence: true\n            }\n        },\n\n        uri: \"/nodes\",\n        route_name: \"nodes\",\n        type_name: \"Node\",\n        type_plural: \"Nodes\",\n\n        //name: DS.attr('string'),\n        //address: DS.attr('string'),\n\n        //floors: DS.hasMany('floor', { async: true }),\n        //racks: DS.hasMany('rack', { async: true }),\n        //servers: DS.hasMany('server', { async: true }),\n\n        /*servers_count: function(){\n            return this.get('servers').get('length');\n        }.property('servers'),*/\n\n        servers: Model['default'].hasMany(\"servers\", \"server\"),\n\n        getServersLoader: utils__model.generateResultsLoader(\"servers\", \"servers_uri\"),\n        getResultsLoader: utils__model.generateResultsLoader(\"nodes\", \"uri\"),\n\n        servers_uri: (function () {\n            return \"/nodes/\" + this.get(\"id\") + \"/servers\";\n        }).property(\"uri\", \"id\") });\n\n});","define('mb-test-1/models/property', ['exports', 'ember', 'mb-test-1/models/core/model', 'mb-test-1/utils/model'], function (exports, Ember, Model, utils__model) {\n\n    'use strict';\n\n    exports['default'] = Model['default'].extend(Ember['default'].Validations, {\n        validations: {\n            name: {\n                presence: true\n            }\n        },\n\n        uri: \"/properties\",\n        route_name: \"properties\",\n        type_name: \"Property\",\n        type_plural: \"Properties\",\n\n        getOptionsLoader: utils__model.generateResultsLoader(\"propertyoptions\", \"options_uri\"),\n\n        options_uri: (function () {\n            return this.get(\"uri\") + \"/options\";\n        }).property(\"uri\") });\n\n});","define('mb-test-1/models/propertyoption', ['exports', 'ember', 'mb-test-1/models/core/model', 'mb-test-1/utils/model', 'mb-test-1/models/core/model-array'], function (exports, Ember, Model, utils__model, ModelArray) {\n\n    'use strict';\n\n    exports['default'] = Model['default'].extend(Ember['default'].Validations, {\n        validations: {\n            name: {\n                presence: true\n            }\n        },\n\n        uri: \"/properties\",\n        route_name: \"properties\",\n        type_name: \"PropertyOption\",\n        type_plural: \"PropertyOptions\",\n\n        // Server Template\n        getCPUSockets: function getCPUSockets() {\n            return ModelArray['default'].newArrayLoadedFromUri(this.get(\"cpusockets_uri\"), \"PropertyOptions\");\n        },\n\n        cpusockets_uri: (function () {\n            return \"/properties/cpu.socket/options\";\n        }).property(),\n\n        getRAMStandards: function getRAMStandards() {\n            return ModelArray['default'].newArrayLoadedFromUri(this.get(\"ramstandards_uri\"), \"PropertyOptions\");\n        },\n\n        ramstandards_uri: (function () {\n            return \"/properties/ram.standard/options\";\n        }).property(),\n\n        getHDDFormFactors: function getHDDFormFactors() {\n            return ModelArray['default'].newArrayLoadedFromUri(this.get(\"hddformfactors_uri\"), \"PropertyOptions\");\n        },\n\n        hddformfactors_uri: (function () {\n            return \"/properties/hdd.form_factor/options\";\n        }).property(),\n\n        getHDDConnectionType: function getHDDConnectionType() {\n            return ModelArray['default'].newArrayLoadedFromUri(this.get(\"hddconnectiontype_uri\"), \"PropertyOptions\");\n        },\n\n        hddconnectiontype_uri: (function () {\n            return \"/properties/hdd.connection_type/options\";\n        }).property(),\n\n        // Component\n        getComponentKinds: function getComponentKinds() {\n            return ModelArray['default'].newArrayLoadedFromUri(this.get(\"componentkinds_uri\"), \"PropertyOptions\");\n        },\n\n        componentkinds_uri: (function () {\n            return \"/properties/component.kind/options\";\n        }).property() });\n\n});","define('mb-test-1/models/rack', ['exports', 'ember', 'mb-test-1/models/core/model', 'mb-test-1/utils/model'], function (exports, Ember, Model, utils__model) {\n\n    'use strict';\n\n    exports['default'] = Model['default'].extend(Ember['default'].Validations, {\n        validations: {\n            name: {\n                presence: true\n            },\n            row: {\n                presence: true\n            },\n            total_units: {\n                presence: true\n            }\n        },\n        /*name: DS.attr('string'),\n        node: DS.belongsTo('node', { async: true }),\n        row: DS.belongsTo('row', { async: true }),\n        total_units: DS.attr('number'),\n        max_gap: DS.attr('number'),\n        units: DS.hasMany('unit', { async: true }),\n        servers: DS.hasMany('server', { async: true })*/\n        uri: \"/racks\",\n        route_name: \"racks\",\n        type_name: \"Rack\",\n        type_plural: \"Racks\",\n\n        json_node: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.node;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").node;\n            });\n        }).property(\"__json\"),\n\n        json_floor: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.floor;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").floor;\n            });\n        }).property(\"__json\"),\n\n        json_room: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.room;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").room;\n            });\n        }).property(\"__json\"),\n\n        json_row: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.row;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").row;\n            });\n        }).property(\"__json\"),\n\n        getResultsLoader: utils__model.generateResultsLoader(\"racks\", \"uri\"),\n        getServersLoader: utils__model.generateResultsLoader(\"servers\", \"servers_uri\"),\n\n        servers_uri: (function () {\n            return this.get(\"uri\") + \"/servers\";\n        }).property(\"uri\") });\n\n});","define('mb-test-1/models/results-loaders/base', ['exports', 'mb-test-1/lib/utils', 'ember', 'mb-test-1/models/core/model-array', 'mb-test-1/models/core/search-model-array', 'mb-test-1/models/results-loaders/results-loader-query-string-builder'], function (exports, Utils, Ember, ModelArray, SearchModelArray, ResultsLoaderQueryStringBuilder) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Object.extend({\n        limit: 50,\n        sort: (function () {\n            return this.get(\"sortDirection\") + this.get(\"sortField\");\n        }).property(\"sortField\", \"sortDirection\"),\n\n        setSortField: function setSortField(field) {\n            var oldValue = this.get(\"sortField\");\n            var direction = \"\";\n            if (field === oldValue) {\n                direction = this.get(\"sortDirection\") === \"asc\" ? \"-\" : \"\";\n            }\n            this.setProperties({\n                sortDirection: direction,\n                sortField: field\n            });\n        },\n\n        sortDirection: \"-\",\n        sortField: \"updated_at\",\n\n        resultsUri: (function () {\n            var path = this.get(\"path\");\n            var query = this.get(\"queryStringArguments\");\n\n            if (path === undefined) {\n                return undefined;\n            } else {\n                return Utils['default'].buildUri(path, query);\n            }\n        }).property(\"path\", \"queryStringArguments\"),\n\n        queryString: (function () {\n            return Utils['default'].objectToQueryString(this.get(\"queryStringArguments\"));\n        }).property(\"queryStringArguments\"),\n\n        results: (function () {\n            var uri = this.get(\"resultsUri\");\n            var type = this.get(\"resultsType\");\n\n            Ember['default'].Logger.debug(\"results-loaders.base.results: uri=\", uri);\n\n            if (Ember['default'].isBlank(uri)) {\n                return ModelArray['default'].create({\n                    isLoaded: true\n                });\n            } else {\n                var searchArray = SearchModelArray['default'].newArrayLoadedFromUri(uri, type);\n                searchArray.setProperties({\n                    sortProperties: [this.get(\"sortField\") || \"created_at\"],\n                    sortAscending: this.get(\"sortDirection\") === \"asc\"\n                });\n                return searchArray;\n            }\n        }).property(\"resultsUri\", \"resultsType\", \"sortField\", \"sortDirection\"),\n\n        isLoading: Ember['default'].computed.not(\"results.isLoaded\"),\n\n        queryStringArguments: (function () {\n            var queryStringBuilder = new ResultsLoaderQueryStringBuilder['default']();\n            queryStringBuilder.addValues({\n                limit: this.get(\"limit\"),\n                sort: this.get(\"sort\"),\n\n                type: this.get(\"typeFilters\"),\n                status: this.get(\"statusFilters\"),\n                method: this.get(\"methodFilters\"),\n                endpoint: this.get(\"endpointFilters\"),\n                status_rollup: this.get(\"statusRollupFilters\"),\n\n                \"created_at[>]\": this.get(\"startTime\"),\n                \"created_at[<]\": this.get(\"endTime\"),\n\n                q: this.get(\"searchQuery\")\n            });\n\n            return queryStringBuilder.getQueryStringAttributes();\n        }).property(\"sort\", \"startTime\", \"endTime\", \"typeFilters\", \"statusFilters\", \"endpointFilters\", \"statusRollupFilters\", \"limit\")\n    });\n\n});","define('mb-test-1/models/results-loaders/baskets', ['exports', 'mb-test-1/models/results-loaders/base', 'mb-test-1/models/basket'], function (exports, BaseResultsLoader, Basket) {\n\n    'use strict';\n\n    exports['default'] = BaseResultsLoader['default'].extend({\n        resultsType: Basket['default'] });\n\n});","define('mb-test-1/models/results-loaders/components', ['exports', 'mb-test-1/models/results-loaders/base', 'mb-test-1/models/component'], function (exports, BaseResultsLoader, Component) {\n\n    'use strict';\n\n    exports['default'] = BaseResultsLoader['default'].extend({\n        resultsType: Component['default'] });\n\n});","define('mb-test-1/models/results-loaders/floors', ['exports', 'mb-test-1/models/results-loaders/base', 'mb-test-1/models/floor'], function (exports, BaseResultsLoader, Floor) {\n\n    'use strict';\n\n    exports['default'] = BaseResultsLoader['default'].extend({\n        resultsType: Floor['default'] });\n\n});","define('mb-test-1/models/results-loaders/nodes', ['exports', 'mb-test-1/models/results-loaders/base', 'mb-test-1/models/node'], function (exports, BaseResultsLoader, Node) {\n\n    'use strict';\n\n    exports['default'] = BaseResultsLoader['default'].extend({\n        resultsType: Node['default'] });\n\n});","define('mb-test-1/models/results-loaders/properties', ['exports', 'mb-test-1/models/results-loaders/base', 'mb-test-1/models/property'], function (exports, BaseResultsLoader, Property) {\n\n    'use strict';\n\n    exports['default'] = BaseResultsLoader['default'].extend({\n        resultsType: Property['default'] });\n\n});","define('mb-test-1/models/results-loaders/propertyoptions', ['exports', 'mb-test-1/models/results-loaders/base', 'mb-test-1/models/propertyoption'], function (exports, BaseResultsLoader, PropertyOption) {\n\n    'use strict';\n\n    exports['default'] = BaseResultsLoader['default'].extend({\n        resultsType: PropertyOption['default'] });\n\n});","define('mb-test-1/models/results-loaders/racks', ['exports', 'mb-test-1/models/results-loaders/base', 'mb-test-1/models/rack'], function (exports, BaseResultsLoader, Rack) {\n\n    'use strict';\n\n    exports['default'] = BaseResultsLoader['default'].extend({\n        resultsType: Rack['default'] });\n\n});","define('mb-test-1/models/results-loaders/results-loader-query-string-builder', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var isSerializableDate = function isSerializableDate(value) {\n    return _.isDate(value) || moment.isMoment(value);\n  };\n\n  exports['default'] = Ember['default'].Object.extend({\n    queryStringAttributes: {},\n\n    addValues: function addValues(object) {\n      var self = this;\n      _.each(object, function (value, key) {\n        self.addValue(key, value);\n      });\n    },\n\n    addValue: function addValue(key, value) {\n      if (Ember['default'].isArray(value)) {\n        if (value.length === 1) {\n          return this.queryStringAttributes[key] = value[0];\n        } else if (value.length > 1) {\n          return this.queryStringAttributes[key + \"[in]\"] = value.join(\",\");\n        }\n      } else if (isSerializableDate(value)) {\n        return this.queryStringAttributes[key] = value.toISOString();\n      } else if (!Ember['default'].isBlank(value)) {\n        return this.queryStringAttributes[key] = value;\n      }\n    },\n\n    getQueryStringAttributes: function getQueryStringAttributes() {\n      return this.queryStringAttributes;\n    }\n\n  });\n\n});","define('mb-test-1/models/results-loaders/rooms', ['exports', 'mb-test-1/models/results-loaders/base', 'mb-test-1/models/room'], function (exports, BaseResultsLoader, Room) {\n\n    'use strict';\n\n    exports['default'] = BaseResultsLoader['default'].extend({\n        resultsType: Room['default'] });\n\n});","define('mb-test-1/models/results-loaders/rows', ['exports', 'mb-test-1/models/results-loaders/base', 'mb-test-1/models/row'], function (exports, BaseResultsLoader, Row) {\n\n    'use strict';\n\n    exports['default'] = BaseResultsLoader['default'].extend({\n        resultsType: Row['default'] });\n\n});","define('mb-test-1/models/results-loaders/servers', ['exports', 'mb-test-1/models/results-loaders/base', 'mb-test-1/models/server'], function (exports, BaseResultsLoader, Server) {\n\n    'use strict';\n\n    var ServersResultsLoader = BaseResultsLoader['default'].extend({\n        resultsType: Server['default'] });\n\n    exports['default'] = ServersResultsLoader;\n\n});","define('mb-test-1/models/results-loaders/servertemplates', ['exports', 'mb-test-1/models/results-loaders/base', 'mb-test-1/models/servertemplate'], function (exports, BaseResultsLoader, ServerTemplate) {\n\n    'use strict';\n\n    exports['default'] = BaseResultsLoader['default'].extend({\n        resultsType: ServerTemplate['default'] });\n\n});","define('mb-test-1/models/room', ['exports', 'ember', 'mb-test-1/models/core/model', 'mb-test-1/utils/model'], function (exports, Ember, Model, utils__model) {\n\n    'use strict';\n\n    exports['default'] = Model['default'].extend(Ember['default'].Validations, {\n        validations: {\n            name: {\n                presence: true\n            },\n            floor: {\n                presence: true\n            }\n        },\n\n        /*name: DS.attr('string'),\n        floor: DS.belongsTo('floor', { async: true }),\n        rows: DS.hasMany('row', { async: true })*/\n        uri: \"/rooms\",\n        route_name: \"rooms\",\n        type_name: \"Room\",\n        type_plural: \"Rooms\",\n\n        node_name: (function () {\n            var node = this.get(\"json_node\");\n            if (node) {\n                return node.name;\n            }\n            return \"---\";\n        }).property(\"json_node\"),\n\n        json_node: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.node;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").node;\n            });\n        }).property(\"__json\"),\n\n        floor_name: (function () {\n            var obj = this.get(\"json_floor\");\n            if (obj) {\n                return obj.name;\n            }\n            return \"---\";\n        }).property(\"json_floor\"),\n\n        json_floor: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.floor;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").floor;\n            });\n        }).property(\"__json\"),\n\n        //floor: Model.belongsTo('floor', 'floors'),\n        getServersLoader: utils__model.generateResultsLoader(\"servers\", \"servers_uri\"),\n        getResultsLoader: utils__model.generateResultsLoader(\"rooms\", \"uri\"),\n\n        servers_uri: (function () {\n            return this.get(\"uri\") + \"/servers\";\n        }).property(\"uri\") });\n\n});","define('mb-test-1/models/row', ['exports', 'ember', 'mb-test-1/models/core/model', 'mb-test-1/utils/model'], function (exports, Ember, Model, utils__model) {\n\n    'use strict';\n\n    exports['default'] = Model['default'].extend(Ember['default'].Validations, {\n        validations: {\n            name: {\n                presence: true\n            },\n            room: {\n                presence: true\n            }\n        },\n        /*name: DS.attr('string'),\n        room: DS.belongsTo('room', { async: true }),\n        racks: DS.hasMany('rack', { async: true })*/\n        uri: \"/rows\",\n        route_name: \"rows\",\n        type_name: \"Row\",\n        type_plural: \"Rows\",\n\n        json_node: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.node;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").node;\n            });\n        }).property(\"__json\"),\n\n        json_floor: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.floor;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").floor;\n            });\n        }).property(\"__json\"),\n\n        json_room: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.room;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").room;\n            });\n        }).property(\"__json\"),\n\n        getServersLoader: utils__model.generateResultsLoader(\"servers\", \"servers_uri\"),\n        getResultsLoader: utils__model.generateResultsLoader(\"rows\", \"uri\"),\n\n        servers_uri: (function () {\n            return this.get(\"uri\") + \"/servers\";\n        }).property(\"uri\") });\n\n});","define('mb-test-1/models/server', ['exports', 'ember', 'mb-test-1/models/core/model', 'mb-test-1/utils/model'], function (exports, Ember, Model, utils__model) {\n\n    'use strict';\n\n    exports['default'] = Model['default'].extend(Ember['default'].Validations, {\n        validations: {\n            name: {\n                presence: true\n            },\n            template: {\n                presence: true\n            }\n        },\n        uri: \"/servers\",\n        route_name: \"servers\",\n        type_name: \"Server\",\n        type_plural: \"Servers\",\n\n        json_node: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.node;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").node;\n            });\n        }).property(\"__json\"),\n\n        json_floor: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.floor;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").floor;\n            });\n        }).property(\"__json\"),\n\n        json_room: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.room;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").room;\n            });\n        }).property(\"__json\"),\n\n        json_row: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.row;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").row;\n            });\n        }).property(\"__json\"),\n\n        json_rack: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.rack;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").rack;\n            });\n        }).property(\"__json\"),\n\n        json_basket: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.basket;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").basket;\n            });\n        }).property(\"__json\"),\n\n        json_template: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.template;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").template;\n            });\n        }).property(\"__json\"),\n\n        getResultsLoader: utils__model.generateResultsLoader(\"servers\", \"uri\"),\n        getComponentsLoader: utils__model.generateResultsLoader(\"components\", \"components_uri\"),\n\n        components_uri: (function () {\n            return this.get(\"uri\") + \"/components\";\n        }).property(\"uri\") });\n\n});","define('mb-test-1/models/servertemplate', ['exports', 'ember', 'mb-test-1/models/core/model', 'mb-test-1/utils/model'], function (exports, Ember, Model, utils__model) {\n\n    'use strict';\n\n    exports['default'] = Model['default'].extend(Ember['default'].Validations, {\n        validations: {\n            name: {\n                presence: true\n            },\n            cpu_socket: {\n                presence: true\n            },\n            cpu_qty: {\n                presence: true\n            },\n            ram_standard: {\n                presence: true\n            },\n            ram_qty: {\n                presence: true\n            },\n            unit_takes: {\n                presence: true\n            }\n        },\n        /*name: DS.attr('string'),\n        cpu_socket: DS.belongsTo('property-option', { async: true }),\n        cpu_qty: DS.attr('number'),\n        ram_standard: DS.belongsTo('property-option', { async: true }),\n        ram_qty: DS.attr('number'),\n        unit_takes: DS.attr('number'),\n        hdds: DS.hasMany('server-template-hdd', { async: true })*/\n        uri: \"/servertemplates\",\n        route_name: \"servertemplates\",\n        type_name: \"ServerTemplate\",\n        type_plural: \"ServerTemplates\",\n\n        json_cpu_socket: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.cpu_socket;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").cpu_socket;\n            });\n        }).property(\"__json\"),\n\n        json_ram_standard: (function () {\n            var json = this.get(\"__json\");\n            var self = this;\n            if (json) {\n                return json.ram_standard;\n            }\n            this.reload().then(function () {\n                return self.get(\"__json\").ram_standard;\n            });\n        }).property(\"__json\"),\n\n        getResultsLoader: utils__model.generateResultsLoader(\"servertemplates\", \"uri\"),\n        getServersLoader: utils__model.generateResultsLoader(\"servers\", \"servers_uri\"),\n\n        servers_uri: (function () {\n            return this.get(\"uri\") + \"/servers\";\n        }).property(\"uri\") });\n\n});","define('mb-test-1/models/unit', ['exports', 'mb-test-1/models/core/model'], function (exports, Model) {\n\n    'use strict';\n\n    exports['default'] = Model['default'].extend({\n        /*rack: DS.belongsTo('rack', { async: true }),\n        position: DS.attr('number'),\n        basket: DS.belongsTo('basket', { async: true }),\n        server: DS.belongsTo('server', { async: true })*/\n        uri: '/units',\n        route_name: 'units',\n        type_name: 'Unit',\n        type_plural: 'Units' });\n\n});","define('mb-test-1/router', ['exports', 'ember', 'mb-test-1/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  exports['default'] = Router.map(function () {\n    this.route('nodes', { path: '/nodes' });\n    this.route('node', { path: '/nodes/:node_id' });\n\n    this.route('racks', { path: '/racks' });\n    this.route('rack', { path: '/racks/:rack_id' });\n\n    this.route('rows', { path: '/rows' });\n    this.route('row', { path: '/rows/:row_id' });\n\n    this.route('rooms', { path: '/rooms' });\n    this.route('room', { path: '/rooms/:room_id' });\n\n    this.route('floors', { path: '/floors' });\n    this.route('floor', { path: '/floors/:floor_id' });\n\n    this.route('servers', { path: '/servers' });\n    this.route('server', { path: '/servers/:server_id' });\n\n    this.route('baskets', { path: '/baskets' });\n    this.route('basket', { path: '/baskets/:basket_id' });\n\n    this.route('servertemplates', { path: '/servertemplates' });\n    this.route('servertemplate', { path: '/servertemplates/:servertemplate_id' });\n\n    this.route('components', { path: '/components' });\n    this.route('component', { path: '/components/:component_id' });\n  });\n\n});","define('mb-test-1/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var INFINITE_LOOP_DURATION_MILLIS = 2500;\n    var INFINITE_LOOP_NUM_ERRORS = 5;\n\n    var ApplicationRoute = Ember['default'].Route.extend(Ember['default'].Evented, {\n        init: function init() {\n            this.set('errorTimestamps', []);\n        },\n\n        redirect: function redirect() {\n            this.transitionTo('nodes');\n        },\n\n        actions: {\n            closeModal: function closeModal() {\n                return this.container.lookup('controller:modals-container').close();\n            },\n\n            openModal: function openModal(klass) {\n                var container = this.get('container');\n                var args = _.toArray(arguments).slice(1);\n                return container.lookup('controller:modals-container').open(klass, args);\n            },\n\n            error: function error(_error, transition) {\n                if (!window.TESTING) {\n                    // Check for an infinite loop of error handling and short-circuit\n                    // if we've seen too many errors in too short a period\n                    var errorTimestamps = this.get('errorTimestamps');\n                    var currentTimestamp = new Date().getTime();\n                    errorTimestamps.push(currentTimestamp);\n                    if (errorTimestamps.length > INFINITE_LOOP_NUM_ERRORS) {\n                        var filtered = _.filter(errorTimestamps, function (t) {\n                            return t > currentTimestamp - INFINITE_LOOP_DURATION_MILLIS;\n                        });\n\n                        this.set('errorTimestamps', filtered);\n                        if (filtered.length > INFINITE_LOOP_NUM_ERRORS) {\n                            this.get('auth').forgetLogin();\n                            this.transitionTo('login');\n\n                            return;\n                        }\n                    }\n                }\n\n                // the error object could be an ember object or a jqxhr\n                var statusCode = _error.errorStatusCode || _error.status;\n                var uri = _error.uri;\n\n                Ember['default'].Logger.error('Error while loading route (%@: %@): '.fmt(statusCode, uri), _error.stack || _error.message || _error.name || _error);\n\n                // if we had a problem loading the marketplace, check that it's not the current\n                // marketplace, since that might send us into an infinite loop\n                if (_error.get && _error.get('uri') === this.get('auth').getLastUsedMarketplaceUri()) {\n                    this.get('auth').forgetLastUsedMarketplaceUri();\n                }\n\n                if (statusCode === 401 || statusCode === 403) {\n                    if (_error.get && _error.get('uri')) {\n                        // if we loaded an ember object and got a 401/403, let's forget about the transition\n                        this.get('auth').set('attemptedTransition', null);\n\n                        this.controllerFor('notification_center').alertError('You are not permitted to access this resource.');\n                        this.transitionTo('marketplaces');\n                    } else if (transition) {\n                        this.get('auth').set('attemptedTransition', transition);\n\n                        // If we're not authorized, need to log in (maybe as a different user),\n                        // so let's log out\n                        this.get('auth').forgetLogin();\n                        this.transitionTo('login');\n                    }\n                } else if (statusCode === 404) {\n                    this.controllerFor('notification_center').alertError('Couldn\\'t find the resource for this page, please make sure the URL is valid.');\n                    this.transitionTo('marketplaces');\n                } else {\n                    var controller = this.controllerFor('notification_center');\n                    var name = 'PageLoadError';\n\n                    controller.clearNamedAlert(name);\n                    controller.alertError('There was an error loading this page.', {\n                        name: name\n                    });\n                    this.transitionTo('marketplaces');\n                }\n            },\n\n            willTransition: function willTransition() {\n                this.controllerFor('modals_container').close();\n                this.controllerFor('notification_center').expireAlerts();\n            }\n        }\n    });\n\n    exports['default'] = ApplicationRoute;\n\n});","define('mb-test-1/routes/basket', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model(params) {\n            var model = this.get('container').lookupFactory('model:basket');\n            var uri = model.constructUri(params.basket_id);\n            return model.find(uri);\n        }\n    });\n\n});","define('mb-test-1/routes/baskets', ['exports', 'mb-test-1/routes/title', 'mb-test-1/models/basket'], function (exports, TitleRoute, Basket) {\n\n    'use strict';\n\n    exports['default'] = TitleRoute['default'].extend({\n        title: \"Basket List\",\n        model: function model(params) {\n            var instance = Basket['default'].create();\n            return instance.getResultsLoader();\n        }\n    });\n\n});","define('mb-test-1/routes/component', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model(params) {\n            var model = this.get('container').lookupFactory('model:component');\n            var uri = model.constructUri(params.component_id);\n            return model.find(uri);\n        }\n    });\n\n});","define('mb-test-1/routes/components', ['exports', 'mb-test-1/routes/title', 'mb-test-1/models/component'], function (exports, TitleRoute, Component) {\n\n    'use strict';\n\n    exports['default'] = TitleRoute['default'].extend({\n        title: \"Component List\",\n        model: function model(params) {\n            var instance = Component['default'].create();\n            return instance.getResultsLoader();\n        }\n    });\n\n});","define('mb-test-1/routes/floor', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model(params) {\n            var model = this.get('container').lookupFactory('model:floor');\n            var uri = model.constructUri(params.floor_id);\n            return model.find(uri);\n        }\n    });\n\n});","define('mb-test-1/routes/floors', ['exports', 'mb-test-1/routes/title', 'mb-test-1/models/floor'], function (exports, TitleRoute, Floor) {\n\n    'use strict';\n\n    exports['default'] = TitleRoute['default'].extend({\n        title: \"Floor List\",\n        model: function model(params) {\n            var instance = Floor['default'].create();\n            return instance.getResultsLoader();\n        }\n    });\n\n});","define('mb-test-1/routes/model', ['exports', 'mb-test-1/routes/title', 'mb-test-1/lib/utils'], function (exports, TitleRoute, Utils) {\n\n    'use strict';\n\n    exports['default'] = TitleRoute['default'].extend({\n        model: function model(params) {\n            /*var marketplace = this.modelFor('marketplace');\n            var modelObject = this.get('modelObject');\n            var uri = this.get('marketplaceUri');\n             return marketplace.then(function(marketplace) {\n                var modelUri = Utils.combineUri(marketplace.get(uri), params.item_id);\n                return modelObject.find(modelUri);\n            });*/\n            var modelObject = this.get(\"modelObject\");\n            var modelUri = params.item_id;\n            console.log(\"TitleRoute:model: before return\");\n            return modelObject.find(modelUri);\n        }\n    });\n\n});","define('mb-test-1/routes/node', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model(params) {\n            var Node = this.get('container').lookupFactory('model:node');\n            var nodeUri = Node.constructUri(params.node_id);\n            return Node.find(nodeUri);\n        }\n    });\n\n});","define('mb-test-1/routes/node/servers', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        pageTitle: \"Servers\",\n        model: function model() {\n            var node = this.modelFor(\"node\");\n            return node.getServersLoader();\n        } });\n\n});","define('mb-test-1/routes/nodes', ['exports', 'mb-test-1/routes/title', 'mb-test-1/models/node'], function (exports, TitleRoute, Node) {\n\n    'use strict';\n\n    exports['default'] = TitleRoute['default'].extend({\n        title: \"Node List\",\n        model: function model(params) {\n            //var ret = Node.findAll();\n            //Ember.Logger.debug('Route->Nodes->model: ');\n            //Ember.Logger.debug(ret);\n            //return ret;//*/\n            var node = Node['default'].create();\n            return node.getResultsLoader();\n        }\n    });\n\n});","define('mb-test-1/routes/rack', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model(params) {\n            var model = this.get('container').lookupFactory('model:rack');\n            var uri = model.constructUri(params.rack_id);\n            return model.find(uri);\n        }\n    });\n\n});","define('mb-test-1/routes/racks', ['exports', 'mb-test-1/routes/title', 'mb-test-1/models/rack'], function (exports, TitleRoute, Rack) {\n\n    'use strict';\n\n    exports['default'] = TitleRoute['default'].extend({\n        title: \"Rack List\",\n        model: function model(params) {\n            var instance = Rack['default'].create();\n            return instance.getResultsLoader();\n        }\n    });\n\n});","define('mb-test-1/routes/room', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model(params) {\n            var model = this.get('container').lookupFactory('model:room');\n            var uri = model.constructUri(params.room_id);\n            return model.find(uri);\n        }\n    });\n\n});","define('mb-test-1/routes/rooms', ['exports', 'mb-test-1/routes/title', 'mb-test-1/models/room'], function (exports, TitleRoute, Room) {\n\n    'use strict';\n\n    exports['default'] = TitleRoute['default'].extend({\n        title: \"Room List\",\n        model: function model(params) {\n            var instance = Room['default'].create();\n            return instance.getResultsLoader();\n        }\n    });\n\n});","define('mb-test-1/routes/row', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model(params) {\n            var model = this.get('container').lookupFactory('model:row');\n            var uri = model.constructUri(params.row_id);\n            return model.find(uri);\n        }\n    });\n\n});","define('mb-test-1/routes/rows', ['exports', 'mb-test-1/routes/title', 'mb-test-1/models/row'], function (exports, TitleRoute, Row) {\n\n    'use strict';\n\n    exports['default'] = TitleRoute['default'].extend({\n        title: \"Row List\",\n        model: function model(params) {\n            var instance = Row['default'].create();\n            return instance.getResultsLoader();\n        }\n    });\n\n});","define('mb-test-1/routes/server', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model(params) {\n            var model = this.get('container').lookupFactory('model:server');\n            var uri = model.constructUri(params.server_id);\n            return model.find(uri);\n        }\n    });\n\n});","define('mb-test-1/routes/servers', ['exports', 'mb-test-1/routes/title', 'mb-test-1/models/server'], function (exports, TitleRoute, Server) {\n\n    'use strict';\n\n    exports['default'] = TitleRoute['default'].extend({\n        title: \"Server List\",\n        model: function model(params) {\n            var instance = Server['default'].create();\n            return instance.getResultsLoader();\n        }\n    });\n\n});","define('mb-test-1/routes/servertemplate', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model(params) {\n            var model = this.get('container').lookupFactory('model:servertemplate');\n            var uri = model.constructUri(params.servertemplate_id);\n            return model.find(uri);\n        }\n    });\n\n});","define('mb-test-1/routes/servertemplates', ['exports', 'mb-test-1/routes/title', 'mb-test-1/models/servertemplate'], function (exports, TitleRoute, ServerTemplate) {\n\n    'use strict';\n\n    exports['default'] = TitleRoute['default'].extend({\n        title: \"Server Template List\",\n        model: function model(params) {\n            var instance = ServerTemplate['default'].create();\n            return instance.getResultsLoader();\n        }\n    });\n\n});","define('mb-test-1/routes/title', ['exports', 'mb-test-1/lib/utils', 'ember'], function (exports, Utils, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        title: \"Model\",\n\n        pageTitle: function pageTitle(route, setTitle) {\n            var model = route.controller.get(\"content\");\n            var title = route.get(\"title\");\n\n            return Utils['default'].maybeDeferredLoading(model, setTitle, function () {\n                return title + \": loading ...\";\n            }, function () {\n                return title + \": %@\".fmt(model.get(\"page_title\"));\n            });\n        }\n    });\n\n});","define('mb-test-1/serializers/application', ['exports', 'mb-test-1/serializers/rev1'], function (exports, Rev1) {\n\n\t'use strict';\n\n\texports['default'] = Rev1['default'];\n\n});","define('mb-test-1/serializers/rev0', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var JSON_PROPERTY_KEY = '__json';\n\n    var Rev0Serializer = Ember['default'].Object.extend({\n        //  properties which are not echoed back to the server\n        privateProperties: ['id', 'uri', 'validationErrors', JSON_PROPERTY_KEY, 'links', '_type'],\n\n        serialize: function serialize(record) {\n            var json = this._propertiesMap(record);\n            return json;\n        },\n\n        extractSingle: function extractSingle(rootJson, type, href) {\n            return rootJson;\n        },\n\n        extractCollection: function extractCollection(rootJson) {\n            return rootJson;\n        },\n\n        // Taken from http://stackoverflow.com/questions/9211844/reflection-on-emberjs-objects-how-to-find-a-list-of-property-keys-without-knowi\n        _propertiesMap: function _propertiesMap(record) {\n            var computedProps = [];\n            record.constructor.eachComputedProperty(function (prop) {\n                computedProps.push(prop);\n            });\n\n            var lifecycleProperties = ['isLoaded', 'isNew', 'isSaving', 'isValid', 'isError', 'isDeleted'];\n\n            var props = {};\n            for (var prop in record) {\n                if (record.hasOwnProperty(prop) && $.inArray(prop, computedProps) === -1 && $.inArray(prop, lifecycleProperties) === -1 && $.inArray(prop, this.privateProperties) === -1 && prop.indexOf('__ember') < 0 && prop.indexOf('_super') < 0 && Ember['default'].typeOf(record.get(prop)) !== 'function') {\n                    props[prop] = record[prop];\n                }\n            }\n\n            return props;\n        }\n    });\n\n    exports['default'] = Rev0Serializer;\n\n});","define('mb-test-1/serializers/rev1', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var JSON_PROPERTY_KEY = '__json';\n    var LINKS_PROPERTY_KEY = '__links';\n    var EMBEDDED_DATA_PROPERTY_KEY = '__embedded';\n\n    var Rev1Serializer = Ember['default'].Object.extend({\n        //  properties which are not echoed back to the server\n        privateProperties: ['id', 'uri', 'validationErrors', JSON_PROPERTY_KEY, LINKS_PROPERTY_KEY, EMBEDDED_DATA_PROPERTY_KEY, '_type', 'links'],\n\n        serialize: function serialize(record) {\n            Ember['default'].Logger.debug('Rev1Serializer.serialize:', record);\n            var attributes = this._propertiesMap(record);\n            var json = {};\n            json.data = attributes;\n            return json;\n        },\n\n        extractSingle: function extractSingle(rawPayload, href) {\n            var included_storage = Ember['default'].Object.createWithMixins(Ember['default'].Copyable);\n            var payload = this.normalizePayload(rawPayload, included_storage);\n            var primaryRecord;\n\n            Ember['default'].Logger.debug('extractSingle: rawPayload=', rawPayload);\n\n            if (!!!payload.data) {\n                Ember['default'].warn('Key <data> is required in payload.');\n                return null;\n            }\n\n            var value = payload.data;\n            if (value === null) {\n                return null;\n            }\n\n            if (Ember['default'].typeOf(value) === 'array') {\n                Ember['default'].warn('Single object have to be returned under the key <data>.');\n                return null;\n            }\n\n            //var typeName = value['type'];\n            primaryRecord = this.normalize(value, included_storage);\n\n            Ember['default'].Logger.debug('extractSingle: primaryRecord=', primaryRecord);\n\n            return primaryRecord;\n        },\n\n        extractCollection: function extractCollection(rawPayload) {\n            var self = this;\n            var included_storage = Ember['default'].Object.createWithMixins(Ember['default'].Copyable);\n\n            var nextUri = rawPayload.links ? rawPayload.links.next : null;\n            var counts = rawPayload.meta ? rawPayload.meta.counts : null;\n            var total = rawPayload.meta ? rawPayload.meta.total : null;\n\n            var payload = this.normalizePayload(rawPayload, included_storage);\n\n            if (Ember['default'].typeOf(payload.data) !== 'array') {\n                Ember['default'].warn('Array must be returned.');\n                return null;\n            }\n\n            var collection = [];\n            payload.data.forEach(function (value) {\n                collection.push(self.normalize(value, included_storage));\n            });\n\n            return {\n                items: collection,\n                //linked: linked,\n                next_uri: nextUri,\n                counts: counts,\n                total: total\n            };\n        },\n\n        resolveLink: function resolveLink(linkage, included_storage) {\n            Ember['default'].Logger.debug('resoliveLink: linkage=', linkage);\n            var collection_of_type = included_storage[linkage.type];\n            var original = collection_of_type[linkage.id];\n            return Ember['default'].copy(original, true);\n        },\n\n        /**\n        * Flatten links\n        */\n        normalize: function normalize(hash, included_storage) {\n            if (!hash) {\n                return hash;\n            }\n\n            var key, relation, linkage, relation_key;\n            var json = {};\n            var links = hash.links;\n            var meta = hash.meta;\n            delete hash.links;\n            delete hash.meta;\n\n            if (links && links.self) {\n                json.uri = links.self;\n                delete links.self;\n            }\n\n            if (Ember['default'].typeOf('links') === 'object') {\n                json.uri = links.self;\n                delete links.self;\n            }\n\n            for (key in hash) {\n                json[key] = hash[key];\n            }\n            json._type = json.type;\n            delete json.type;\n\n            if (Ember['default'].typeOf(links) === 'object') {\n                for (relation_key in links) {\n                    relation = links[relation_key];\n                    if (!!!relation) {\n                        json[relation_key] = null;\n                        continue;\n                    }\n                    linkage = relation.linkage;\n                    if (!!!linkage) {\n                        Ember['default'].warn('Attribute <linkage> cannot be null.');\n                        json[relation_key] = null;\n                        continue;\n                    }\n                    if (Ember['default'].typeOf(linkage) === 'array') {\n                        json[relation_key] = [];\n                        for (var i = 0, l = linkage.length; i < l; i++) {\n                            json[relation_key].push(this.resolveLink(linkage[i], included_storage));\n                        }\n                    } else if (Ember['default'].typeOf(linkage) === 'object') {\n                        json[relation_key] = this.resolveLink(linkage, included_storage);\n                    }\n                }\n            }\n            return json;\n        },\n\n        /**\n        * Extract top-level \"links\" before normalizing.\n        */\n        normalizePayload: function normalizePayload(payload, included_storage) {\n            if (payload.included) {\n                this.extractIncluded(payload.included, included_storage);\n                delete payload.included;\n            }\n            return payload;\n        },\n\n        /*\n        * Extract top-level \"included\" containing associated objects\n        */\n        extractIncluded: function extractIncluded(included, storage) {\n            var link, value, relation;\n            var typeName, objectId, linkage, linkedTypeName, relationId;\n\n            // fill storage at first\n            for (var i = 0, l = included.length; i < l; i++) {\n                value = included[i];\n                value._type = value.type;\n                delete value.type;\n                typeName = value._type;\n                objectId = value.id + '';\n                storage[typeName] = storage[typeName] || {};\n                storage[typeName][objectId] = value;\n            }\n\n            // find && replace 'links'\n            for (typeName in storage) {\n                for (objectId in storage[typeName]) {\n                    value = Ember['default'].copy(storage[typeName][objectId], true);\n                    if (!value.links) {\n                        continue;\n                    }\n                    for (relation in value.links) {\n                        linkage = value.links[relation].linkage;\n                        // linkage is 'null'\n                        if (!!!linkage) {\n                            continue;\n                        }\n                        relationId = linkage.id + '';\n                        linkedTypeName = linkage.type;\n                        value[relation] = Ember['default'].copy(storage[linkedTypeName][relationId], true);\n                    }\n                    delete value.links;\n                    storage[typeName][objectId] = value;\n                }\n            }\n        },\n\n        // Taken from http://stackoverflow.com/questions/9211844/reflection-on-emberjs-objects-how-to-find-a-list-of-property-keys-without-knowi\n        _propertiesMap: function _propertiesMap(record) {\n            var self = this;\n            var computedProps = [];\n            record.constructor.eachComputedProperty(function (prop) {\n                computedProps.push(prop);\n            });\n\n            var lifecycleProperties = ['isLoaded', 'isNew', 'isSaving', 'isValid', 'isError', 'isDeleted'];\n\n            var props = {};\n            for (var prop in record) {\n                if (record.hasOwnProperty(prop) && Ember['default'].$.inArray(prop, computedProps) === -1 && Ember['default'].$.inArray(prop, lifecycleProperties) === -1 && Ember['default'].$.inArray(prop, this.privateProperties) === -1 && prop.indexOf('__ember') < 0 && prop.indexOf('_super') < 0 && Ember['default'].typeOf(record.get(prop)) !== 'function') {\n                    if (Ember['default'].typeOf(record[prop]) === 'array') {\n                        props[prop] = [];\n                        record[prop].forEach(function (value, index) {\n                            props[prop][index] = self._propertiesMap(value);\n                        });\n                    } else {\n                        props[prop] = Ember['default'].String.htmlSafe(record[prop]).string;\n                    }\n                }\n            }\n\n            return props;\n        }\n    });\n\n    exports['default'] = Rev1Serializer;\n\n});","define('mb-test-1/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"starter-template\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" /.container \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2, 1]),1,1);\n        var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"render\", [\"navigation\"], {});\n        content(env, morph1, context, \"outlet\");\n        inline(env, morph2, context, \"render\", [\"modals-container\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/basket', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"detail-views/description-lists/basket-titled-key-values-section\"], {\"model\": get(env, context, \"model\")});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h3\");\n            var el2 = dom.createTextNode(\"Server List\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"results\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n            inline(env, morph0, context, \"view\", [\"results/node-servers-table\"], {\"loader\": get(env, context, \"serversResultsLoader\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"view\", [\"detail-views/api-model-panel\"], {\"model\": get(env, context, \"model\")}, child0, null);\n          block(env, morph1, context, \"view\", [\"detail-views/main-panel\"], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"pageType\": \"Basket\", \"title\": get(env, context, \"model.name\")});\n        block(env, morph1, context, \"view\", [\"detail-views/body-panel\"], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/baskets', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"buttons page-actions\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          dom.setAttribute(el2,\"class\",\"btn\");\n          var el3 = dom.createTextNode(\"Add a basket\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          element(env, element0, context, \"action\", [\"openModal\", \"modals/basket-add-modal\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"results-actions-bar\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"results\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"items-wrapper\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4, 1]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"title\": \"Basket List\"}, child0, null);\n        inline(env, morph1, context, \"view\", [\"results/baskets-table\"], {\"loader\": get(env, context, \"resultsLoader\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/component', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"detail-views/description-lists/component-titled-key-values-section\"], {\"model\": get(env, context, \"model\")});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h3\");\n            var el2 = dom.createTextNode(\"Property List\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"results\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n            inline(env, morph0, context, \"view\", [\"results/component-properties-table\"], {\"loader\": get(env, context, \"propertiesResultsLoader\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"view\", [\"detail-views/api-model-panel\"], {\"model\": get(env, context, \"model\")}, child0, null);\n          block(env, morph1, context, \"view\", [\"detail-views/main-panel\"], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"pageType\": \"Component\", \"title\": get(env, context, \"model.name\")});\n        block(env, morph1, context, \"view\", [\"detail-views/body-panel\"], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/components', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"buttons page-actions\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          dom.setAttribute(el2,\"class\",\"btn\");\n          var el3 = dom.createTextNode(\"Add a component\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          element(env, element0, context, \"action\", [\"openModal\", \"modals/component-add-modal\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"results-actions-bar\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"results\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"items-wrapper\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4, 1]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"title\": \"Component List\"}, child0, null);\n        inline(env, morph1, context, \"view\", [\"results/components-table\"], {\"loader\": get(env, context, \"resultsLoader\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/components/link-li', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/detail-views/key-value', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"dd\");\n            var el2 = dom.createElement(\"a\");\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1, 0]);\n            var morph0 = dom.createMorphAt(element0,0,0);\n            element(env, element0, context, \"bind-attr\", [], {\"href\": get(env, context, \"view.link\")});\n            content(env, morph0, context, \"view.value\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"dd\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n            content(env, morph0, context, \"view.value\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"dt\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          dom.insertBoundary(fragment, null);\n          content(env, morph0, context, \"view.key\");\n          block(env, morph1, context, \"if\", [get(env, context, \"view.hasLink\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.value\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/detail-views/side-panel-layout', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h3\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"view.panelTitle\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.panelTitle\")], {}, child0, null);\n        content(env, morph1, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/detail-views/titled-key-values-section', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          dom.setAttribute(el1,\"class\",\"pull-right delete-model-link text-danger\");\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-trash-o\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          element(env, element1, context, \"action\", [\"openModal\", get(env, context, \"view.deleteModelModalClass\"), get(env, context, \"view.model\")], {});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          dom.setAttribute(el1,\"class\",\"pull-right edit-model-link\");\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-edit\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          element(env, element0, context, \"action\", [\"openModal\", get(env, context, \"view.editModelModalClass\"), get(env, context, \"view.model\")], {});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"view\", [get(env, context, \"item\")], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"key-value-display\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h3\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dl\");\n        dom.setAttribute(el2,\"class\",\"dl-horizontal\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element2 = dom.childAt(fragment, [0]);\n        var element3 = dom.childAt(element2, [1]);\n        var element4 = dom.childAt(element2, [3]);\n        var morph0 = dom.createMorphAt(element3,1,1);\n        var morph1 = dom.createMorphAt(element3,3,3);\n        var morph2 = dom.createMorphAt(element3,4,4);\n        var morph3 = dom.createMorphAt(element4,1,1);\n        var morph4 = dom.createMorphAt(element4,3,3);\n        content(env, morph0, context, \"view.title\");\n        block(env, morph1, context, \"if\", [get(env, context, \"view.deleteModelModalClass\")], {}, child0, null);\n        block(env, morph2, context, \"if\", [get(env, context, \"view.editModelModalClass\")], {}, child1, null);\n        block(env, morph3, context, \"each\", [get(env, context, \"view.keyValueListViews\")], {\"keyword\": \"item\"}, child2, null);\n        content(env, morph4, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/floor', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"detail-views/description-lists/floor-titled-key-values-section\"], {\"model\": get(env, context, \"model\")});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h3\");\n            var el2 = dom.createTextNode(\"Server List\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"results\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n            inline(env, morph0, context, \"view\", [\"results/node-servers-table\"], {\"loader\": get(env, context, \"serversResultsLoader\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"view\", [\"detail-views/api-model-panel\"], {\"model\": get(env, context, \"model\")}, child0, null);\n          block(env, morph1, context, \"view\", [\"detail-views/main-panel\"], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"pageType\": \"Floor\", \"title\": get(env, context, \"model.name\")});\n        block(env, morph1, context, \"view\", [\"detail-views/body-panel\"], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/floors', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"buttons page-actions\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          dom.setAttribute(el2,\"class\",\"btn\");\n          var el3 = dom.createTextNode(\"Add a floor\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          element(env, element0, context, \"action\", [\"openModal\", \"modals/floor-add-modal\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"results-actions-bar\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"results\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"items-wrapper\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4, 1]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"title\": \"Floor List\"}, child0, null);\n        inline(env, morph1, context, \"view\", [\"results/floors-table\"], {\"loader\": get(env, context, \"resultsLoader\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/form-fields/base-form-field', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"input\", [], {\"viewName\": \"inputElement\", \"name\": get(env, context, \"view.inputName\"), \"type\": get(env, context, \"view.inputType\"), \"value\": get(env, context, \"view.value\"), \"class\": get(env, context, \"view.inputClassNames\"), \"maxlength\": get(env, context, \"view.maxlength\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/form-fields/form-field-layout', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"i\");\n            dom.setAttribute(el1,\"class\",\"icon-tooltip\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"view\", [\"popover\"], {\"data-trigger\": \"hover\", \"data-placement\": \"left\", \"data-original-title\": get(env, context, \"view.tooltipTitle\"), \"data-content\": get(env, context, \"view.tooltipContent\"), \"data-html\": \"true\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            content(env, morph0, context, \"view.errorMessages\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                    \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"li\");\n              var el2 = dom.createComment(\"\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n              content(env, morph0, context, \"message\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"ul\");\n            var el2 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"            \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n            block(env, morph0, context, \"each\", [get(env, context, \"view.errorMessages\")], {\"keyword\": \"message\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"alert alert-error\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"view.isOneError\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"alert alert-info\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"view.explanationText\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"label\");\n        dom.setAttribute(el1,\"class\",\"control-label\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,1,1);\n        var morph1 = dom.createMorphAt(element0,3,3);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        var morph3 = dom.createMorphAt(fragment,4,4,contextualElement);\n        var morph4 = dom.createMorphAt(fragment,6,6,contextualElement);\n        dom.insertBoundary(fragment, null);\n        element(env, element0, context, \"bind-attr\", [], {\"for\": get(env, context, \"view.inputElement.elementId\")});\n        content(env, morph0, context, \"view.labelText\");\n        block(env, morph1, context, \"if\", [get(env, context, \"view.tooltipContent\")], {}, child0, null);\n        content(env, morph2, context, \"yield\");\n        block(env, morph3, context, \"if\", [get(env, context, \"view.isError\")], {}, child1, null);\n        block(env, morph4, context, \"if\", [get(env, context, \"view.explanationText\")], {}, child2, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/form-fields/form-section', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"description col-md-4\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"view.sectionDescription\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"pull-right col-md-8\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n        content(env, morph0, context, \"view.sectionTitle\");\n        block(env, morph1, context, \"if\", [get(env, context, \"view.sectionDescription\")], {}, child0, null);\n        content(env, morph2, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/form-fields/select-form-field', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"view\", [\"select\"], {\"class\": \"full\", \"content\": get(env, context, \"view.content\"), \"optionValuePath\": get(env, context, \"view.optionValuePath\"), \"optionLabelPath\": get(env, context, \"view.optionLabelPath\"), \"value\": get(env, context, \"view.value\"), \"selection\": get(env, context, \"view.selection\"), \"name\": get(env, context, \"view.name\"), \"prompt\": get(env, context, \"view.prompt\"), \"disabled\": get(env, context, \"view.disabled\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/form-fields/textarea-form-field', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"textarea\", [], {\"viewName\": \"textAreaElement\", \"name\": get(env, context, \"view.inputName\"), \"value\": get(env, context, \"view.value\"), \"class\": get(env, context, \"view.inputClassNames\"), \"maxlength\": get(env, context, \"view.maxlength\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/base-modal-layout', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"modal-dialog\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-content\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"modal-header\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"class\",\"close\");\n        dom.setAttribute(el4,\"data-dismiss\",\"modal\");\n        var el5 = dom.createElement(\"i\");\n        dom.setAttribute(el5,\"class\",\"fa fa-times\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h2\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [1, 3]),0,0);\n        var morph1 = dom.createMorphAt(element0,3,3);\n        content(env, morph0, context, \"view.title\");\n        content(env, morph1, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/basket-add-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          var morph3 = dom.createMorphAt(fragment,7,7,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\", \"name\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Height in units\", \"field\": \"unit_takes\", \"name\": \"unit_takes\"});\n          inline(env, morph2, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Total slots Qty\", \"field\": \"slot_qty\", \"name\": \"slot_qty\"});\n          inline(env, morph3, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.racksForSelect\"), \"value\": get(env, context, \"view.parentView.selectedRack\"), \"labelText\": \"Rack\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"rack\", \"field\": \"rack\", \"prompt\": \"---\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/basket-delete-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-body modal-info\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"content\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Are you sure you want to delete this basket?\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,3,3);\n        element(env, element0, context, \"action\", [\"save\", get(env, context, \"view.model\")], {\"target\": \"view\", \"on\": \"submit\"});\n        inline(env, morph0, context, \"view\", [\"modals/modal-base-footer\"], {\"isSaving\": get(env, context, \"view.isSaving\"), \"submitButtonText\": \"Delete\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/basket-update-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          var morph3 = dom.createMorphAt(fragment,7,7,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Height in units\", \"field\": \"unit_takes\"});\n          inline(env, morph2, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Total slots Qty\", \"field\": \"slot_qty\"});\n          inline(env, morph3, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.racksForSelect\"), \"value\": get(env, context, \"view.parentView.selectedRack\"), \"labelText\": \"Rack\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"rack\", \"field\": \"rack\", \"prompt\": \"---\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\"), \"sectionTitle\": \"Basket information\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/component-add-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          var morph3 = dom.createMorphAt(fragment,7,7,contextualElement);\n          var morph4 = dom.createMorphAt(fragment,9,9,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\", \"name\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Manufacturer\", \"field\": \"manufacturer\", \"name\": \"manufacturer\"});\n          inline(env, morph2, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Model name\", \"field\": \"model_name\", \"name\": \"model_name\"});\n          inline(env, morph3, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Serial number\", \"field\": \"serial_number\", \"name\": \"serial_number\"});\n          inline(env, morph4, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.kindsForSelect\"), \"value\": get(env, context, \"view.parentView.selectedKind\"), \"labelText\": \"Kind\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"kind\", \"field\": \"kind\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/component-delete-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-body modal-info\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"content\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Are you sure you want to delete this component?\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,3,3);\n        element(env, element0, context, \"action\", [\"save\", get(env, context, \"view.model\")], {\"target\": \"view\", \"on\": \"submit\"});\n        inline(env, morph0, context, \"view\", [\"modals/modal-base-footer\"], {\"isSaving\": get(env, context, \"view.isSaving\"), \"submitButtonText\": \"Delete\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/component-update-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          var morph3 = dom.createMorphAt(fragment,7,7,contextualElement);\n          var morph4 = dom.createMorphAt(fragment,9,9,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\", \"name\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Manufacturer\", \"field\": \"manufacturer\", \"name\": \"manufacturer\"});\n          inline(env, morph2, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Model name\", \"field\": \"model_name\", \"name\": \"model_name\"});\n          inline(env, morph3, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Serial number\", \"field\": \"serial_number\", \"name\": \"serial_number\"});\n          inline(env, morph4, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.kindsForSelect\"), \"value\": get(env, context, \"view.parentView.selectedKind\"), \"labelText\": \"Kind\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"kind\", \"field\": \"kind\", \"disabled\": true});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/floor-add-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"inputClassNames\": \"full\", \"labelText\": \"Name\", \"field\": \"name\", \"name\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.nodesForSelect\"), \"value\": get(env, context, \"view.model.node\"), \"labelText\": \"Node\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"node\", \"field\": \"node\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/floor-delete-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-body modal-info\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"content\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Are you sure you want to delete this floor?\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,3,3);\n        element(env, element0, context, \"action\", [\"save\", get(env, context, \"view.model\")], {\"target\": \"view\", \"on\": \"submit\"});\n        inline(env, morph0, context, \"view\", [\"modals/modal-base-footer\"], {\"isSaving\": get(env, context, \"view.isSaving\"), \"submitButtonText\": \"Delete\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/floor-update-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.nodesForSelect\"), \"value\": get(env, context, \"view.parentView.selectedNode\"), \"labelText\": \"Node\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"node\", \"field\": \"node\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\"), \"sectionTitle\": \"Floor information\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/form-modal-layout', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"balanced-logo-24\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          dom.setAttribute(el1,\"class\",\"description\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"view.description\");\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h3\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"view.subtitle\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"modal-dialog\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-content\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"modal-header\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"class\",\"close\");\n        dom.setAttribute(el4,\"data-dismiss\",\"modal\");\n        var el5 = dom.createElement(\"i\");\n        dom.setAttribute(el5,\"class\",\"icon-x\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h2\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"form\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"modal-body clearfix\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element0, [3]);\n        var morph0 = dom.createMorphAt(element1,3,3);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [5]),0,0);\n        var morph2 = dom.createMorphAt(element1,7,7);\n        var morph3 = dom.createMorphAt(element1,8,8);\n        var morph4 = dom.createMorphAt(dom.childAt(element2, [1]),1,1);\n        var morph5 = dom.createMorphAt(element2,3,3);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.logo\")], {}, child0, null);\n        content(env, morph1, context, \"view.title\");\n        block(env, morph2, context, \"if\", [get(env, context, \"view.description\")], {}, child1, null);\n        block(env, morph3, context, \"if\", [get(env, context, \"view.subtitle\")], {}, child2, null);\n        element(env, element2, context, \"action\", [\"save\"], {\"on\": \"submit\", \"target\": get(env, context, \"view\")});\n        content(env, morph4, context, \"yield\");\n        inline(env, morph5, context, \"view\", [\"modals/modal-base-footer\"], {\"isSaving\": get(env, context, \"view.isSaving\"), \"beforeSubmitText\": get(env, context, \"view.beforeSubmitText\"), \"cancelButtonText\": get(env, context, \"view.cancelButtonText\"), \"submitButtonText\": get(env, context, \"view.submitButtonText\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/full-modal-layout', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"modal-header\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"class\",\"close\");\n        dom.setAttribute(el2,\"data-dismiss\",\"modal\");\n        var el3 = dom.createElement(\"i\");\n        dom.setAttribute(el3,\"class\",\"icon-x\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h2\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 3]),0,0);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        content(env, morph0, context, \"view.title\");\n        content(env, morph1, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/modal-base-footer', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"class\",\"btn secondary\");\n          dom.setAttribute(el1,\"type\",\"button\");\n          dom.setAttribute(el1,\"name\",\"modal-cancel\");\n          dom.setAttribute(el1,\"data-dismiss\",\"modal\");\n          dom.setAttribute(el1,\"aria-hidden\",\"true\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,0,0);\n          element(env, element0, context, \"bind-attr\", [], {\"disabled\": \"view.isSaving\"});\n          content(env, morph0, context, \"view.cancelButtonText\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"before-submit-text\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        dom.setAttribute(el1,\"type\",\"submit\");\n        dom.setAttribute(el1,\"name\",\"modal-submit\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [3]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph2 = dom.createMorphAt(element1,0,0);\n        content(env, morph0, context, \"view.beforeSubmitText\");\n        block(env, morph1, context, \"if\", [get(env, context, \"view.cancelButtonText\")], {}, child0, null);\n        element(env, element1, context, \"bind-attr\", [], {\"disabled\": \"view.isSaving\", \"class\": \":btn view.isSaving:disabled\"});\n        content(env, morph2, context, \"view.submitButtonText\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/modal-errors', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"alert alert-error modal-content-error\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          content(env, morph0, context, \"view.model.errorDescription\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.model.displayErrorDescription\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/node-add-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"inputClassNames\": \"full\", \"labelText\": \"Name\", \"field\": \"name\", \"name\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/textarea-form-field\"], {\"model\": get(env, context, \"view.model\"), \"inputClassNames\": \"full\", \"labelText\": \"Address\", \"field\": \"address\", \"name\": \"address\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/node-delete-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-body modal-info\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"content\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Are you sure you want to delete this node?\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,3,3);\n        element(env, element0, context, \"action\", [\"save\", get(env, context, \"view.model\")], {\"target\": \"view\", \"on\": \"submit\"});\n        inline(env, morph0, context, \"view\", [\"modals/modal-base-footer\"], {\"isSaving\": get(env, context, \"view.isSaving\"), \"submitButtonText\": \"Delete\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/node-update-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/textarea-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Address\", \"field\": \"address\", \"maxlength\": 434});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\"), \"sectionTitle\": \"Node information\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/rack-add-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"inputClassNames\": \"full\", \"labelText\": \"Name\", \"field\": \"name\", \"name\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"inputClassNames\": \"full\", \"labelText\": \"Total units\", \"field\": \"total_units\", \"name\": \"total_units\"});\n          inline(env, morph2, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.rowsForSelect\"), \"value\": get(env, context, \"view.parentView.selectedRow\"), \"labelText\": \"Row\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"row\", \"field\": \"row\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/rack-delete-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-body modal-info\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"content\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Are you sure you want to delete this rack?\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,3,3);\n        element(env, element0, context, \"action\", [\"save\", get(env, context, \"view.model\")], {\"target\": \"view\", \"on\": \"submit\"});\n        inline(env, morph0, context, \"view\", [\"modals/modal-base-footer\"], {\"isSaving\": get(env, context, \"view.isSaving\"), \"submitButtonText\": \"Delete\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/rack-update-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Total units\", \"field\": \"total_units\"});\n          inline(env, morph2, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.rowsForSelect\"), \"value\": get(env, context, \"view.parentView.selectedRow\"), \"labelText\": \"Row\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"row\", \"field\": \"row\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\"), \"sectionTitle\": \"Rack information\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/room-add-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"inputClassNames\": \"full\", \"labelText\": \"Name\", \"field\": \"name\", \"name\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.floorsForSelect\"), \"value\": get(env, context, \"view.model.floor\"), \"labelText\": \"Floor\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"floor\", \"field\": \"floor\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/room-delete-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-body modal-info\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"content\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Are you sure you want to delete this room?\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,3,3);\n        element(env, element0, context, \"action\", [\"save\", get(env, context, \"view.model\")], {\"target\": \"view\", \"on\": \"submit\"});\n        inline(env, morph0, context, \"view\", [\"modals/modal-base-footer\"], {\"isSaving\": get(env, context, \"view.isSaving\"), \"submitButtonText\": \"Delete\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/room-update-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.floorsForSelect\"), \"value\": get(env, context, \"view.parentView.selectedFloor\"), \"labelText\": \"Floor\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"floor\", \"field\": \"floor\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\"), \"sectionTitle\": \"Room information\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/row-add-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"inputClassNames\": \"full\", \"labelText\": \"Name\", \"field\": \"name\", \"name\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.roomsForSelect\"), \"value\": get(env, context, \"view.parentView.selectedRoom\"), \"labelText\": \"Room\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"room\", \"field\": \"room\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/row-delete-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-body modal-info\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"content\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Are you sure you want to delete this row?\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,3,3);\n        element(env, element0, context, \"action\", [\"save\", get(env, context, \"view.model\")], {\"target\": \"view\", \"on\": \"submit\"});\n        inline(env, morph0, context, \"view\", [\"modals/modal-base-footer\"], {\"isSaving\": get(env, context, \"view.isSaving\"), \"submitButtonText\": \"Delete\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/row-update-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.roomsForSelect\"), \"value\": get(env, context, \"view.parentView.selectedRoom\"), \"labelText\": \"Room\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"room\", \"field\": \"room\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\"), \"sectionTitle\": \"Row information\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/server-add-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\", \"name\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.templatesForSelect\"), \"value\": get(env, context, \"view.parentView.selectedTemplate\"), \"labelText\": \"Server template\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"template\", \"field\": \"template\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/server-delete-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-body modal-info\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"content\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Are you sure you want to delete this server?\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,3,3);\n        element(env, element0, context, \"action\", [\"save\", get(env, context, \"view.model\")], {\"target\": \"view\", \"on\": \"submit\"});\n        inline(env, morph0, context, \"view\", [\"modals/modal-base-footer\"], {\"isSaving\": get(env, context, \"view.isSaving\"), \"submitButtonText\": \"Delete\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/server-update-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.templatesForSelect\"), \"value\": get(env, context, \"view.parentView.selectedTemplate\"), \"labelText\": \"Server Template\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"template\", \"field\": \"template\", \"disabled\": true});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\"), \"sectionTitle\": \"Basket information\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/servertemplate-add-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"hdd-row clearfix\");\n            dom.setAttribute(el1,\"style\",\"background:#e6e6e6;padding:6px;margin:6px 0px;\");\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(element0,1,1);\n            var morph1 = dom.createMorphAt(element0,3,3);\n            var morph2 = dom.createMorphAt(element0,5,5);\n            inline(env, morph0, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"hdd\"), \"content\": get(env, context, \"view.parentView.hddFormFactorsForSelect\"), \"labelText\": \"HDD Form Factor\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"hdd_form_factor\", \"field\": \"hdd_form_factor\"});\n            inline(env, morph1, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"hdd\"), \"content\": get(env, context, \"view.parentView.hddConnectionTypeForSelect\"), \"labelText\": \"HDD Connection Type\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"hdd_connection_type\", \"field\": \"hdd_connection_type\"});\n            inline(env, morph2, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"hdd\"), \"labelText\": \"HDD Qty\", \"name\": \"hdd_qty\", \"field\": \"hdd_qty\"});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"hdds clearfix\");\n          dom.setAttribute(el1,\"style\",\"margin:10px 0;\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"clearfix\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"button\");\n          var el4 = dom.createTextNode(\"Add HDD\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [13]);\n          var element2 = dom.childAt(element1, [3, 1]);\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          var morph3 = dom.createMorphAt(fragment,7,7,contextualElement);\n          var morph4 = dom.createMorphAt(fragment,9,9,contextualElement);\n          var morph5 = dom.createMorphAt(fragment,11,11,contextualElement);\n          var morph6 = dom.createMorphAt(element1,1,1);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\", \"name\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Unit takes\", \"field\": \"unit_takes\", \"name\": \"unit_takes\"});\n          inline(env, morph2, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.cpuSocketsForSelect\"), \"value\": get(env, context, \"view.parentView.selectedCPUSocket\"), \"labelText\": \"CPU Socket\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"cpu_socket\", \"field\": \"cpu_socket\"});\n          inline(env, morph3, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"CPU Quantity\", \"field\": \"cpu_qty\", \"name\": \"cpu_qty\"});\n          inline(env, morph4, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.ramStandardsForSelect\"), \"value\": get(env, context, \"view.parentView.selectedRAMStandard\"), \"labelText\": \"RAM Standard\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"ram_standard\", \"field\": \"ram_standard\"});\n          inline(env, morph5, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"RAM Quantity\", \"field\": \"ram_qty\", \"name\": \"ram_qty\"});\n          block(env, morph6, context, \"each\", [get(env, context, \"view.model.hdds\")], {\"keyword\": \"hdd\"}, child0, null);\n          element(env, element2, context, \"action\", [\"addHdd\"], {\"on\": \"click\", \"target\": get(env, context, \"view.parentView\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/servertemplate-delete-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-body modal-info\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"content\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Are you sure you want to delete this server template?\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,3,3);\n        element(env, element0, context, \"action\", [\"save\", get(env, context, \"view.model\")], {\"target\": \"view\", \"on\": \"submit\"});\n        inline(env, morph0, context, \"view\", [\"modals/modal-base-footer\"], {\"isSaving\": get(env, context, \"view.isSaving\"), \"submitButtonText\": \"Delete\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/modals/servertemplate-update-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"hdd-row clearfix\");\n            dom.setAttribute(el1,\"style\",\"background:#e6e6e6;padding:6px;margin:6px 0px;\");\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(element0,1,1);\n            var morph1 = dom.createMorphAt(element0,3,3);\n            var morph2 = dom.createMorphAt(element0,5,5);\n            inline(env, morph0, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"hdd\"), \"content\": get(env, context, \"view.parentView.hddFormFactorsForSelect\"), \"value\": get(env, context, \"hdd.hdd_form_factor\"), \"labelText\": \"HDD Form Factor\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"hdd_form_factor\", \"field\": \"hdd_form_factor\"});\n            inline(env, morph1, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"hdd\"), \"content\": get(env, context, \"view.parentView.hddConnectionTypeForSelect\"), \"value\": get(env, context, \"hdd.hdd_connection_type\"), \"labelText\": \"HDD Connection Type\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"hdd_connection_type\", \"field\": \"hdd_connection_type\"});\n            inline(env, morph2, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"hdd\"), \"labelText\": \"HDD Qty\", \"name\": \"hdd_qty\", \"field\": \"hdd_qty\"});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"hdds clearfix\");\n          dom.setAttribute(el1,\"style\",\"margin:10px 0;\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"clearfix\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"button\");\n          var el4 = dom.createTextNode(\"Add HDD\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [13]);\n          var element2 = dom.childAt(element1, [3, 1]);\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          var morph3 = dom.createMorphAt(fragment,7,7,contextualElement);\n          var morph4 = dom.createMorphAt(fragment,9,9,contextualElement);\n          var morph5 = dom.createMorphAt(fragment,11,11,contextualElement);\n          var morph6 = dom.createMorphAt(element1,1,1);\n          inline(env, morph0, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Name\", \"field\": \"name\", \"name\": \"name\"});\n          inline(env, morph1, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"Unit takes\", \"field\": \"unit_takes\", \"name\": \"unit_takes\"});\n          inline(env, morph2, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.cpuSocketsForSelect\"), \"value\": get(env, context, \"view.parentView.selectedCPUSocket\"), \"labelText\": \"CPU Socket\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"cpu_socket\", \"field\": \"cpu_socket\"});\n          inline(env, morph3, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"CPU Quantity\", \"field\": \"cpu_qty\", \"name\": \"cpu_qty\"});\n          inline(env, morph4, context, \"view\", [\"form-fields/select-form-field\"], {\"model\": get(env, context, \"view.model\"), \"content\": get(env, context, \"view.parentView.ramStandardsForSelect\"), \"value\": get(env, context, \"view.parentView.selectedRAMStandard\"), \"labelText\": \"RAM Standard\", \"optionValuePath\": \"content.value\", \"optionLabelPath\": \"content.label\", \"name\": \"ram_standard\", \"field\": \"ram_standard\"});\n          inline(env, morph5, context, \"view\", [\"form-fields/text-form-field\"], {\"model\": get(env, context, \"view.model\"), \"labelText\": \"RAM Quantity\", \"field\": \"ram_qty\", \"name\": \"ram_qty\"});\n          block(env, morph6, context, \"each\", [get(env, context, \"view.model.hdds\")], {\"keyword\": \"hdd\"}, child0, null);\n          element(env, element2, context, \"action\", [\"addHdd\"], {\"on\": \"click\", \"target\": get(env, context, \"view.parentView\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"form-fields/form-section\"], {\"model\": get(env, context, \"view.model\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/navigation', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"link-to\", [get(env, context, \"link.title\"), get(env, context, \"link.location\")], {});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"link-li\", [], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container-fluid\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" Brand and toggle get grouped for better mobile display \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"navbar-header\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"type\",\"button\");\n        dom.setAttribute(el3,\"class\",\"navbar-toggle collapsed\");\n        dom.setAttribute(el3,\"data-toggle\",\"collapse\");\n        dom.setAttribute(el3,\"data-target\",\"#bs-example-navbar-collapse-1\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"sr-only\");\n        var el5 = dom.createTextNode(\"Toggle navigation\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"icon-bar\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"icon-bar\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"icon-bar\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" Collect the nav links, forms, and other content for toggling \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"collapse navbar-collapse\");\n        dom.setAttribute(el2,\"id\",\"bs-example-navbar-collapse-1\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        dom.setAttribute(el3,\"class\",\"nav navbar-nav\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" /.navbar-collapse \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" /.container-fluid \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [3]),3,3);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [7, 1]),1,1);\n        inline(env, morph0, context, \"link-to\", [get(env, context, \"title\"), \"nodes\"], {\"classNames\": \"navbar-brand\"});\n        block(env, morph1, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"link\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/node', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"detail-views/description-lists/node-titled-key-values-section\"], {\"model\": get(env, context, \"model\")});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h3\");\n            var el2 = dom.createTextNode(\"Server List\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"results\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n            inline(env, morph0, context, \"view\", [\"results/node-servers-table\"], {\"loader\": get(env, context, \"serversResultsLoader\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"view\", [\"detail-views/api-model-panel\"], {\"model\": get(env, context, \"model\")}, child0, null);\n          block(env, morph1, context, \"view\", [\"detail-views/main-panel\"], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"pageType\": \"Node\", \"title\": get(env, context, \"model.name\")});\n        block(env, morph1, context, \"view\", [\"detail-views/body-panel\"], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/nodes', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"buttons page-actions\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          dom.setAttribute(el2,\"class\",\"btn\");\n          var el3 = dom.createTextNode(\"Add a node\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          element(env, element0, context, \"action\", [\"openModal\", \"modals/node-add-modal\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"results-actions-bar\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"results\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"items-wrapper\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4, 1]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"title\": \"Node List\"}, child0, null);\n        inline(env, morph1, context, \"view\", [\"results/nodes-table\"], {\"loader\": get(env, context, \"resultsLoader\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/notification-center', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              content(env, morph0, context, \"alert.linkText\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            block(env, morph0, context, \"link-to\", [get(env, context, \"alert.linkTo\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"alert-row\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"notification-center-message\");\n          var el4 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"span\");\n          dom.setAttribute(el4,\"class\",\"message\");\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"            \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, content = hooks.content, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          var element1 = dom.childAt(element0, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element1, [1]),0,0);\n          var morph1 = dom.createMorphAt(element1,3,3);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": \":row-fluid :notification-center alert.type\"});\n          content(env, morph0, context, \"alert.message\");\n          block(env, morph1, context, \"if\", [get(env, context, \"alert.linkText\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"each\", [get(env, context, \"controller\")], {\"keyword\": \"alert\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/page-navigations/page-navigation-layout', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"page-type\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"view.pageType\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"page-navigation clearfix\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        dom.setAttribute(el2,\"class\",\"page-title\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,1,1);\n        var morph1 = dom.createMorphAt(element0,3,3);\n        var morph2 = dom.createMorphAt(dom.childAt(element0, [5]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.pageType\")], {}, child0, null);\n        content(env, morph1, context, \"yield\");\n        content(env, morph2, context, \"view.title\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/rack', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"detail-views/description-lists/rack-titled-key-values-section\"], {\"model\": get(env, context, \"model\")});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h3\");\n            var el2 = dom.createTextNode(\"Server List\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"results\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n            inline(env, morph0, context, \"view\", [\"results/node-servers-table\"], {\"loader\": get(env, context, \"serversResultsLoader\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"view\", [\"detail-views/api-model-panel\"], {\"model\": get(env, context, \"model\")}, child0, null);\n          block(env, morph1, context, \"view\", [\"detail-views/main-panel\"], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"pageType\": \"Rack\", \"title\": get(env, context, \"model.name\")});\n        block(env, morph1, context, \"view\", [\"detail-views/body-panel\"], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/racks', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"buttons page-actions\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          dom.setAttribute(el2,\"class\",\"btn\");\n          var el3 = dom.createTextNode(\"Add a rack\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          element(env, element0, context, \"action\", [\"openModal\", \"modals/rack-add-modal\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"results-actions-bar\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"results\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"items-wrapper\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4, 1]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"title\": \"Rack List\"}, child0, null);\n        inline(env, morph1, context, \"view\", [\"results/racks-table\"], {\"loader\": get(env, context, \"resultsLoader\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/baskets-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"view\", [\"results/results-load-more\"], {\"results\": get(env, context, \"view.loader.results\"), \"columns\": 9});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          var morph2 = dom.createMorphAt(dom.childAt(element0, [5]),0,0);\n          var morph3 = dom.createMorphAt(dom.childAt(element0, [7]),0,0);\n          var morph4 = dom.createMorphAt(element0,9,9);\n          var morph5 = dom.createMorphAt(element0,11,11);\n          var morph6 = dom.createMorphAt(element0,13,13);\n          var morph7 = dom.createMorphAt(element0,15,15);\n          var morph8 = dom.createMorphAt(element0,17,17);\n          content(env, morph0, context, \"result.id\");\n          inline(env, morph1, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"basket\", \"item\": get(env, context, \"result\"), \"labelText\": get(env, context, \"result.name\")});\n          content(env, morph2, context, \"result.slot_qty\");\n          content(env, morph3, context, \"result.unit_takes\");\n          inline(env, morph4, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"rack\", \"item\": get(env, context, \"result.json_rack.id\"), \"labelText\": get(env, context, \"result.json_rack.name\")});\n          inline(env, morph5, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"row\", \"item\": get(env, context, \"result.json_row.id\"), \"labelText\": get(env, context, \"result.json_row.name\")});\n          inline(env, morph6, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"room\", \"item\": get(env, context, \"result.json_room.id\"), \"labelText\": get(env, context, \"result.json_room.name\")});\n          inline(env, morph7, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"floor\", \"item\": get(env, context, \"result.json_floor.id\"), \"labelText\": get(env, context, \"result.json_floor.name\")});\n          inline(env, morph8, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"node\", \"item\": get(env, context, \"result.json_node.id\"), \"labelText\": get(env, context, \"result.json_node.name\")});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    No Baskets\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    Loading...\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"9\");\n          dom.setAttribute(el2,\"class\",\"no-results\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.isLoaded\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"thead\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tr\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"ID\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Slot Qty\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Unit Takes\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Rack\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Row\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Room\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Floor\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Node\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"tbody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.hasNextPage\")], {}, child0, null);\n        block(env, morph1, context, \"each\", [get(env, context, \"view.loader.results\")], {\"keyword\": \"result\"}, child1, child2);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/component-properties-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createElement(\"span\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createElement(\"span\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1, 0]),0,0);\n          var morph1 = dom.createMorphAt(dom.childAt(element0, [3, 0]),0,0);\n          content(env, morph0, context, \"prop.title\");\n          content(env, morph1, context, \"prop.value\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"2\");\n          dom.setAttribute(el2,\"class\",\"no-results\");\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"span\");\n          var el4 = dom.createTextNode(\"No properties\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"thead\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tr\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-4\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Title\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-8\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Value\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"tbody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        block(env, morph0, context, \"each\", [get(env, context, \"view.loader.results\")], {\"keyword\": \"prop\"}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/components-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"view\", [\"results/results-load-more\"], {\"results\": get(env, context, \"view.loader.results\"), \"columns\": 8});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          var morph2 = dom.createMorphAt(dom.childAt(element0, [5]),0,0);\n          var morph3 = dom.createMorphAt(dom.childAt(element0, [7]),0,0);\n          var morph4 = dom.createMorphAt(dom.childAt(element0, [9]),0,0);\n          var morph5 = dom.createMorphAt(dom.childAt(element0, [11]),0,0);\n          var morph6 = dom.createMorphAt(dom.childAt(element0, [13]),0,0);\n          var morph7 = dom.createMorphAt(element0,15,15);\n          content(env, morph0, context, \"result.id\");\n          inline(env, morph1, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"component\", \"item\": get(env, context, \"result\"), \"labelText\": get(env, context, \"result.name\")});\n          content(env, morph2, context, \"result.manufacturer\");\n          content(env, morph3, context, \"result.model_name\");\n          content(env, morph4, context, \"result.serial_number\");\n          content(env, morph5, context, \"result.json_kind.name\");\n          content(env, morph6, context, \"result.state\");\n          inline(env, morph7, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"server\", \"item\": get(env, context, \"result.json_server.id\"), \"labelText\": get(env, context, \"result.json_server.name\")});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    No Components\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    Loading...\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"8\");\n          dom.setAttribute(el2,\"class\",\"no-results\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.isLoaded\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"thead\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tr\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"ID\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Manufacturer\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Model name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Serial Number\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Kind\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"State\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Server\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"tbody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.hasNextPage\")], {}, child0, null);\n        block(env, morph1, context, \"each\", [get(env, context, \"view.loader.results\")], {\"keyword\": \"result\"}, child1, child2);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/floors-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"view\", [\"results/results-load-more\"], {\"results\": get(env, context, \"view.loader.results\"), \"columns\": 3});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          var morph2 = dom.createMorphAt(element0,5,5);\n          content(env, morph0, context, \"floor.id\");\n          inline(env, morph1, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"floor\", \"item\": get(env, context, \"floor\"), \"labelText\": get(env, context, \"floor.name\")});\n          inline(env, morph2, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"node\", \"item\": get(env, context, \"floor.json_node.id\"), \"labelText\": get(env, context, \"floor.node_name\")});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    No Floors\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    Loading...\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"3\");\n          dom.setAttribute(el2,\"class\",\"no-results\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.isLoaded\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"thead\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tr\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"ID\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Node\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"tbody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.hasNextPage\")], {}, child0, null);\n        block(env, morph1, context, \"each\", [get(env, context, \"view.loader.results\")], {\"keyword\": \"floor\"}, child1, child2);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/node-servers-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"basket\", \"item\": get(env, context, \"server.basket.id\"), \"labelText\": get(env, context, \"server.basket.name\")});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"td\");\n            var el2 = dom.createTextNode(\"---\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"rack\", \"item\": get(env, context, \"server.rack.id\"), \"labelText\": get(env, context, \"server.rack.name\")});\n            return fragment;\n          }\n        };\n      }());\n      var child3 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"td\");\n            var el2 = dom.createTextNode(\"---\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child4 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"row\", \"item\": get(env, context, \"server.row.id\"), \"labelText\": get(env, context, \"server.row.name\")});\n            return fragment;\n          }\n        };\n      }());\n      var child5 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"td\");\n            var el2 = dom.createTextNode(\"---\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child6 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"room\", \"item\": get(env, context, \"server.room.id\"), \"labelText\": get(env, context, \"server.room.name\")});\n            return fragment;\n          }\n        };\n      }());\n      var child7 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"td\");\n            var el2 = dom.createTextNode(\"---\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child8 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"floor\", \"item\": get(env, context, \"server.floor.id\"), \"labelText\": get(env, context, \"server.floor.name\")});\n            return fragment;\n          }\n        };\n      }());\n      var child9 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"td\");\n            var el2 = dom.createTextNode(\"---\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          var morph2 = dom.createMorphAt(element0,5,5);\n          var morph3 = dom.createMorphAt(element0,7,7);\n          var morph4 = dom.createMorphAt(element0,9,9);\n          var morph5 = dom.createMorphAt(element0,11,11);\n          var morph6 = dom.createMorphAt(element0,13,13);\n          content(env, morph0, context, \"server.id\");\n          inline(env, morph1, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"server\", \"item\": get(env, context, \"server.id\"), \"labelText\": get(env, context, \"server.name\")});\n          block(env, morph2, context, \"if\", [get(env, context, \"server.basket\")], {}, child0, child1);\n          block(env, morph3, context, \"if\", [get(env, context, \"server.rack\")], {}, child2, child3);\n          block(env, morph4, context, \"if\", [get(env, context, \"server.row\")], {}, child4, child5);\n          block(env, morph5, context, \"if\", [get(env, context, \"server.room\")], {}, child6, child7);\n          block(env, morph6, context, \"if\", [get(env, context, \"server.floor\")], {}, child8, child9);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"7\");\n          dom.setAttribute(el2,\"class\",\"no-results\");\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"span\");\n          var el4 = dom.createTextNode(\"No servers\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"thead\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tr\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"ID\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Basket\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Rack\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Row\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Room\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Floor\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"tbody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        block(env, morph0, context, \"each\", [get(env, context, \"view.loader.results\")], {\"keyword\": \"server\"}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/nodes-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"view\", [\"results/results-load-more\"], {\"results\": get(env, context, \"view.loader.results\"), \"columns\": 3});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          var morph2 = dom.createMorphAt(dom.childAt(element0, [5]),0,0);\n          content(env, morph0, context, \"node.id\");\n          inline(env, morph1, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"node\", \"item\": get(env, context, \"node\"), \"labelText\": get(env, context, \"node.name\")});\n          content(env, morph2, context, \"node.servers_count\");\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    No Nodes\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    Loading...\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"3\");\n          dom.setAttribute(el2,\"class\",\"no-results\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.isLoaded\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"thead\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tr\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"ID\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-2\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Server Qty\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"tbody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.hasNextPage\")], {}, child0, null);\n        block(env, morph1, context, \"each\", [get(env, context, \"view.loader.results\")], {\"keyword\": \"node\"}, child1, child2);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/racks-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"view\", [\"results/results-load-more\"], {\"results\": get(env, context, \"view.loader.results\"), \"columns\": 8});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          var morph2 = dom.createMorphAt(dom.childAt(element0, [5]),0,0);\n          var morph3 = dom.createMorphAt(dom.childAt(element0, [7]),0,0);\n          var morph4 = dom.createMorphAt(element0,9,9);\n          var morph5 = dom.createMorphAt(element0,11,11);\n          var morph6 = dom.createMorphAt(element0,13,13);\n          var morph7 = dom.createMorphAt(element0,15,15);\n          content(env, morph0, context, \"result.id\");\n          inline(env, morph1, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"rack\", \"item\": get(env, context, \"result\"), \"labelText\": get(env, context, \"result.name\")});\n          content(env, morph2, context, \"result.total_units\");\n          content(env, morph3, context, \"result.max_gap\");\n          inline(env, morph4, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"row\", \"item\": get(env, context, \"result.json_row.id\"), \"labelText\": get(env, context, \"result.json_row.name\")});\n          inline(env, morph5, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"room\", \"item\": get(env, context, \"result.json_room.id\"), \"labelText\": get(env, context, \"result.json_room.name\")});\n          inline(env, morph6, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"floor\", \"item\": get(env, context, \"result.json_floor.id\"), \"labelText\": get(env, context, \"result.json_floor.name\")});\n          inline(env, morph7, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"node\", \"item\": get(env, context, \"result.json_node.id\"), \"labelText\": get(env, context, \"result.json_node.name\")});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    No Racks\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    Loading...\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"8\");\n          dom.setAttribute(el2,\"class\",\"no-results\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.isLoaded\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"thead\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tr\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"ID\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Units\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Max gap\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Row\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Room\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Floor\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Node\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"tbody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.hasNextPage\")], {}, child0, null);\n        block(env, morph1, context, \"each\", [get(env, context, \"view.loader.results\")], {\"keyword\": \"result\"}, child1, child2);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/results-load-more', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"loader-container\");\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-spin fa-spinner\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"a\");\n            dom.setAttribute(el1,\"class\",\"btn secondary\");\n            var el2 = dom.createTextNode(\"Load more\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            element(env, element0, context, \"action\", [\"loadMore\", get(env, context, \"view.results\")], {\"target\": get(env, context, \"view\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\" \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          block(env, morph0, context, \"if\", [get(env, context, \"view.results.hasNextPage\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"tr\");\n        dom.setAttribute(el1,\"class\",\"load-more-results\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"td\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [0, 1]);\n        var morph0 = dom.createMorphAt(element1,1,1);\n        element(env, element1, context, \"bind-attr\", [], {\"colspan\": get(env, context, \"view.columns\")});\n        block(env, morph0, context, \"if\", [get(env, context, \"view.results.loadingNextPage\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/rooms-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"view\", [\"results/results-load-more\"], {\"results\": get(env, context, \"view.loader.results\"), \"columns\": 4});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          var morph2 = dom.createMorphAt(element0,5,5);\n          var morph3 = dom.createMorphAt(element0,7,7);\n          content(env, morph0, context, \"result.id\");\n          inline(env, morph1, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"room\", \"item\": get(env, context, \"result\"), \"labelText\": get(env, context, \"result.name\")});\n          inline(env, morph2, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"floor\", \"item\": get(env, context, \"result.json_floor.id\"), \"labelText\": get(env, context, \"result.json_floor.name\")});\n          inline(env, morph3, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"node\", \"item\": get(env, context, \"result.json_node.id\"), \"labelText\": get(env, context, \"result.json_node.name\")});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    No Rooms\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    Loading...\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"4\");\n          dom.setAttribute(el2,\"class\",\"no-results\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.isLoaded\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"thead\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tr\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"ID\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Floor\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Node\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"tbody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.hasNextPage\")], {}, child0, null);\n        block(env, morph1, context, \"each\", [get(env, context, \"view.loader.results\")], {\"keyword\": \"result\"}, child1, child2);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/rows-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"view\", [\"results/results-load-more\"], {\"results\": get(env, context, \"view.loader.results\"), \"columns\": 5});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          var morph2 = dom.createMorphAt(element0,5,5);\n          var morph3 = dom.createMorphAt(element0,7,7);\n          var morph4 = dom.createMorphAt(element0,9,9);\n          content(env, morph0, context, \"result.id\");\n          inline(env, morph1, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"row\", \"item\": get(env, context, \"result\"), \"labelText\": get(env, context, \"result.name\")});\n          inline(env, morph2, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"room\", \"item\": get(env, context, \"result.json_room.id\"), \"labelText\": get(env, context, \"result.json_room.name\")});\n          inline(env, morph3, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"floor\", \"item\": get(env, context, \"result.json_floor.id\"), \"labelText\": get(env, context, \"result.json_floor.name\")});\n          inline(env, morph4, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"node\", \"item\": get(env, context, \"result.json_node.id\"), \"labelText\": get(env, context, \"result.json_node.name\")});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    No Rows\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    Loading...\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"5\");\n          dom.setAttribute(el2,\"class\",\"no-results\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.isLoaded\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"thead\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tr\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"ID\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Room\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Floor\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Node\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"tbody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.hasNextPage\")], {}, child0, null);\n        block(env, morph1, context, \"each\", [get(env, context, \"view.loader.results\")], {\"keyword\": \"result\"}, child1, child2);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/server-components-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          content(env, morph0, context, \"component.id\");\n          inline(env, morph1, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"component\", \"item\": get(env, context, \"component\"), \"labelText\": get(env, context, \"component.name\")});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"2\");\n          dom.setAttribute(el2,\"class\",\"no-results\");\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"span\");\n          var el4 = dom.createTextNode(\"No components\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"thead\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tr\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"ID\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"tbody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        block(env, morph0, context, \"each\", [get(env, context, \"view.loader.results\")], {\"keyword\": \"component\"}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/servers-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"view\", [\"results/results-load-more\"], {\"results\": get(env, context, \"view.loader.results\"), \"columns\": 8});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          var morph2 = dom.createMorphAt(element0,5,5);\n          var morph3 = dom.createMorphAt(element0,7,7);\n          var morph4 = dom.createMorphAt(element0,9,9);\n          var morph5 = dom.createMorphAt(element0,11,11);\n          var morph6 = dom.createMorphAt(element0,13,13);\n          var morph7 = dom.createMorphAt(element0,15,15);\n          content(env, morph0, context, \"result.id\");\n          inline(env, morph1, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"server\", \"item\": get(env, context, \"result\"), \"labelText\": get(env, context, \"result.name\")});\n          inline(env, morph2, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"servertemplate\", \"item\": get(env, context, \"result.json_template.id\"), \"labelText\": get(env, context, \"result.json_template.name\")});\n          inline(env, morph3, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"rack\", \"item\": get(env, context, \"result.json_rack.id\"), \"labelText\": get(env, context, \"result.json_rack.name\")});\n          inline(env, morph4, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"row\", \"item\": get(env, context, \"result.json_row.id\"), \"labelText\": get(env, context, \"result.json_row.name\")});\n          inline(env, morph5, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"room\", \"item\": get(env, context, \"result.json_room.id\"), \"labelText\": get(env, context, \"result.json_room.name\")});\n          inline(env, morph6, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"floor\", \"item\": get(env, context, \"result.json_floor.id\"), \"labelText\": get(env, context, \"result.json_floor.name\")});\n          inline(env, morph7, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"node\", \"item\": get(env, context, \"result.json_node.id\"), \"labelText\": get(env, context, \"result.json_node.name\")});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    No Servers\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    Loading...\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"8\");\n          dom.setAttribute(el2,\"class\",\"no-results\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.isLoaded\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"thead\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tr\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"ID\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Template\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Rack\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Row\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Room\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Floor\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Node\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"tbody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.hasNextPage\")], {}, child0, null);\n        block(env, morph1, context, \"each\", [get(env, context, \"view.loader.results\")], {\"keyword\": \"result\"}, child1, child2);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/results/servertemplates-table', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"view\", [\"results/results-load-more\"], {\"results\": get(env, context, \"view.loader.results\"), \"columns\": 3});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          var morph2 = dom.createMorphAt(dom.childAt(element0, [5]),0,0);\n          content(env, morph0, context, \"result.id\");\n          inline(env, morph1, context, \"view\", [\"tables/cells/titled-linked-cell\"], {\"routeName\": \"servertemplate\", \"item\": get(env, context, \"result\"), \"labelText\": get(env, context, \"result.name\")});\n          content(env, morph2, context, \"result.servers_uses\");\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    No Server Templates\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                    Loading...\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"3\");\n          dom.setAttribute(el2,\"class\",\"no-results\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"            \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.isLoaded\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"thead\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tr\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-1\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"ID\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Name\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"th\");\n        dom.setAttribute(el3,\"class\",\"col-xs-2\");\n        var el4 = dom.createElement(\"span\");\n        var el5 = dom.createTextNode(\"Servers uses\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"tbody\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.loader.results.hasNextPage\")], {}, child0, null);\n        block(env, morph1, context, \"each\", [get(env, context, \"view.loader.results\")], {\"keyword\": \"result\"}, child1, child2);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/room', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"detail-views/description-lists/room-titled-key-values-section\"], {\"model\": get(env, context, \"model\")});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h3\");\n            var el2 = dom.createTextNode(\"Server List\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"results\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n            inline(env, morph0, context, \"view\", [\"results/node-servers-table\"], {\"loader\": get(env, context, \"serversResultsLoader\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"view\", [\"detail-views/api-model-panel\"], {\"model\": get(env, context, \"model\")}, child0, null);\n          block(env, morph1, context, \"view\", [\"detail-views/main-panel\"], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"pageType\": \"Room\", \"title\": get(env, context, \"model.name\")});\n        block(env, morph1, context, \"view\", [\"detail-views/body-panel\"], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/rooms', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"buttons page-actions\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          dom.setAttribute(el2,\"class\",\"btn\");\n          var el3 = dom.createTextNode(\"Add a room\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          element(env, element0, context, \"action\", [\"openModal\", \"modals/room-add-modal\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"results-actions-bar\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"results\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"items-wrapper\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4, 1]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"title\": \"Room List\"}, child0, null);\n        inline(env, morph1, context, \"view\", [\"results/rooms-table\"], {\"loader\": get(env, context, \"resultsLoader\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/row', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"detail-views/description-lists/row-titled-key-values-section\"], {\"model\": get(env, context, \"model\")});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h3\");\n            var el2 = dom.createTextNode(\"Server List\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"results\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n            inline(env, morph0, context, \"view\", [\"results/node-servers-table\"], {\"loader\": get(env, context, \"serversResultsLoader\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"view\", [\"detail-views/api-model-panel\"], {\"model\": get(env, context, \"model\")}, child0, null);\n          block(env, morph1, context, \"view\", [\"detail-views/main-panel\"], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"pageType\": \"Row\", \"title\": get(env, context, \"model.name\")});\n        block(env, morph1, context, \"view\", [\"detail-views/body-panel\"], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/rows', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"buttons page-actions\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          dom.setAttribute(el2,\"class\",\"btn\");\n          var el3 = dom.createTextNode(\"Add a row\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          element(env, element0, context, \"action\", [\"openModal\", \"modals/row-add-modal\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"results-actions-bar\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"results\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"items-wrapper\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4, 1]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"title\": \"Row List\"}, child0, null);\n        inline(env, morph1, context, \"view\", [\"results/rows-table\"], {\"loader\": get(env, context, \"resultsLoader\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/server', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"detail-views/description-lists/server-titled-key-values-section\"], {\"model\": get(env, context, \"model\")});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h3\");\n            var el2 = dom.createTextNode(\"Component List\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"results\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n            inline(env, morph0, context, \"view\", [\"results/server-components-table\"], {\"loader\": get(env, context, \"componentsResultsLoader\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"view\", [\"detail-views/api-model-panel\"], {\"model\": get(env, context, \"model\")}, child0, null);\n          block(env, morph1, context, \"view\", [\"detail-views/main-panel\"], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"pageType\": \"Server\", \"title\": get(env, context, \"model.name\")});\n        block(env, morph1, context, \"view\", [\"detail-views/body-panel\"], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/servers', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"buttons page-actions\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          dom.setAttribute(el2,\"class\",\"btn\");\n          var el3 = dom.createTextNode(\"Add a server\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          element(env, element0, context, \"action\", [\"openModal\", \"modals/server-add-modal\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"results-actions-bar\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"results\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"items-wrapper\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4, 1]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"title\": \"Server List\"}, child0, null);\n        inline(env, morph1, context, \"view\", [\"results/servers-table\"], {\"loader\": get(env, context, \"resultsLoader\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/servertemplate', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"view\", [\"detail-views/description-lists/servertemplate-titled-key-values-section\"], {\"model\": get(env, context, \"model\")});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h3\");\n            var el2 = dom.createTextNode(\"Server List\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"results\");\n            var el2 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n            inline(env, morph0, context, \"view\", [\"results/node-servers-table\"], {\"loader\": get(env, context, \"serversResultsLoader\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"view\", [\"detail-views/api-model-panel\"], {\"model\": get(env, context, \"model\")}, child0, null);\n          block(env, morph1, context, \"view\", [\"detail-views/main-panel\"], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"pageType\": \"Server Template\", \"title\": get(env, context, \"model.name\")});\n        block(env, morph1, context, \"view\", [\"detail-views/body-panel\"], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/servertemplates', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"buttons page-actions\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          dom.setAttribute(el2,\"class\",\"btn\");\n          var el3 = dom.createTextNode(\"Add a server template\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          element(env, element0, context, \"action\", [\"openModal\", \"modals/servertemplate-add-modal\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"results-actions-bar\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"results\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"items-wrapper\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4, 1]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"view\", [\"page-navigations/page-navigation\"], {\"title\": \"Server Template List\"}, child0, null);\n        inline(env, morph1, context, \"view\", [\"results/servertemplates-table\"], {\"loader\": get(env, context, \"resultsLoader\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/templates/tables/cells/linked-text-cell', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"        \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              inline(env, morph0, context, \"sentence-case\", [get(env, context, \"view.displayValue\")], {});\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"        \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              content(env, morph0, context, \"view.displayValue\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"span\");\n            var el2 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"    \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, element = hooks.element, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(element0,1,1);\n            element(env, element0, context, \"bind-attr\", [], {\"class\": \"view.isBlank:sl-none view.spanClassNames\"});\n            block(env, morph0, context, \"if\", [get(env, context, \"view.isStatusCell\")], {}, child0, child1);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"link-to\", [get(env, context, \"view.routeName\"), get(env, context, \"view.item\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"span\");\n          var el2 = dom.createTextNode(\"---\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"view.item\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('mb-test-1/tests/adapters/ajax.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/ajax.js should pass jshint', function() { \n    ok(true, 'adapters/ajax.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/adapters/base.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/base.js should pass jshint', function() { \n    ok(true, 'adapters/base.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/components/link-li.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/link-li.js should pass jshint', function() { \n    ok(true, 'components/link-li.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/components/modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/modal.js should pass jshint', function() { \n    ok(true, 'components/modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/basket.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/basket.js should pass jshint', function() { \n    ok(true, 'controllers/basket.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/baskets.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/baskets.js should pass jshint', function() { \n    ok(true, 'controllers/baskets.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/component.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/component.js should pass jshint', function() { \n    ok(true, 'controllers/component.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/components.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/components.js should pass jshint', function() { \n    ok(true, 'controllers/components.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/floor.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/floor.js should pass jshint', function() { \n    ok(true, 'controllers/floor.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/floors.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/floors.js should pass jshint', function() { \n    ok(true, 'controllers/floors.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/modal-notification-center.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/modal-notification-center.js should pass jshint', function() { \n    ok(true, 'controllers/modal-notification-center.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/modals-container.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/modals-container.js should pass jshint', function() { \n    ok(true, 'controllers/modals-container.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/navigation.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/navigation.js should pass jshint', function() { \n    ok(true, 'controllers/navigation.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/node.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/node.js should pass jshint', function() { \n    ok(true, 'controllers/node.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/nodes.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/nodes.js should pass jshint', function() { \n    ok(true, 'controllers/nodes.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/notification-center.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/notification-center.js should pass jshint', function() { \n    ok(true, 'controllers/notification-center.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/rack.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/rack.js should pass jshint', function() { \n    ok(true, 'controllers/rack.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/racks.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/racks.js should pass jshint', function() { \n    ok(true, 'controllers/racks.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/room.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/room.js should pass jshint', function() { \n    ok(true, 'controllers/room.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/rooms.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/rooms.js should pass jshint', function() { \n    ok(true, 'controllers/rooms.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/row.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/row.js should pass jshint', function() { \n    ok(true, 'controllers/row.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/rows.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/rows.js should pass jshint', function() { \n    ok(true, 'controllers/rows.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/server.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/server.js should pass jshint', function() { \n    ok(true, 'controllers/server.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/servers.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/servers.js should pass jshint', function() { \n    ok(true, 'controllers/servers.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/servertemplate.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/servertemplate.js should pass jshint', function() { \n    ok(true, 'controllers/servertemplate.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/controllers/servertemplates.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/servertemplates.js should pass jshint', function() { \n    ok(true, 'controllers/servertemplates.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/helpers/resolver', ['exports', 'ember/resolver', 'mb-test-1/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('mb-test-1/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/helpers/start-app', ['exports', 'ember', 'mb-test-1/app', 'mb-test-1/router', 'mb-test-1/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('mb-test-1/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/initializers/env-injector-initializer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/env-injector-initializer.js should pass jshint', function() { \n    ok(true, 'initializers/env-injector-initializer.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/initializers/mbtest-app-global-initializer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/mbtest-app-global-initializer.js should pass jshint', function() { \n    ok(true, 'initializers/mbtest-app-global-initializer.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/initializers/models-adapter-initializer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/models-adapter-initializer.js should pass jshint', function() { \n    ok(true, 'initializers/models-adapter-initializer.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/initializers/result-loaders-initializer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/result-loaders-initializer.js should pass jshint', function() { \n    ok(true, 'initializers/result-loaders-initializer.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/initializers/type-mappings-initializer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/type-mappings-initializer.js should pass jshint', function() { \n    ok(true, 'initializers/type-mappings-initializer.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/lib/ajax.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - lib');\n  test('lib/ajax.js should pass jshint', function() { \n    ok(true, 'lib/ajax.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/lib/connections/api-connection.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - lib/connections');\n  test('lib/connections/api-connection.js should pass jshint', function() { \n    ok(true, 'lib/connections/api-connection.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/lib/connections/auth-connection.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - lib/connections');\n  test('lib/connections/auth-connection.js should pass jshint', function() { \n    ok(true, 'lib/connections/auth-connection.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/lib/connections/base-connection.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - lib/connections');\n  test('lib/connections/base-connection.js should pass jshint', function() { \n    ok(true, 'lib/connections/base-connection.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/lib/ember-data/system/store/common.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - lib/ember-data/system/store');\n  test('lib/ember-data/system/store/common.js should pass jshint', function() { \n    ok(true, 'lib/ember-data/system/store/common.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/lib/ember-data/system/store/serializers.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - lib/ember-data/system/store');\n  test('lib/ember-data/system/store/serializers.js should pass jshint', function() { \n    ok(true, 'lib/ember-data/system/store/serializers.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/lib/utils.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - lib');\n  test('lib/utils.js should pass jshint', function() { \n    ok(false, 'lib/utils.js should pass jshint.\\nlib/utils.js: line 8, col 5, \\'SPACE_REPLACE_REGEX\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/models/basket.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/basket.js should pass jshint', function() { \n    ok(true, 'models/basket.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/component.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/component.js should pass jshint', function() { \n    ok(true, 'models/component.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/core/mixins/load-promise.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/core/mixins');\n  test('models/core/mixins/load-promise.js should pass jshint', function() { \n    ok(false, 'models/core/mixins/load-promise.js should pass jshint.\\nmodels/core/mixins/load-promise.js: line 8, col 5, \\'PENDING\\' is defined but never used.\\nmodels/core/mixins/load-promise.js: line 9, col 5, \\'SEALED\\' is defined but never used.\\nmodels/core/mixins/load-promise.js: line 10, col 5, \\'FULFILLED\\' is defined but never used.\\n\\n3 errors'); \n  });\n\n});","define('mb-test-1/tests/models/core/model-array.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/core');\n  test('models/core/model-array.js should pass jshint', function() { \n    ok(false, 'models/core/model-array.js should pass jshint.\\nmodels/core/model-array.js: line 6, col 3, \\'_bind\\' is defined but never used.\\nmodels/core/model-array.js: line 7, col 3, \\'_guard\\' is defined but never used.\\nmodels/core/model-array.js: line 8, col 3, \\'_objectIsAlive\\' is defined but never used.\\nmodels/core/model-array.js: line 11, col 3, \\'serializerForAdapter\\' is defined but never used.\\nmodels/core/model-array.js: line 14, col 5, \\'Promise\\' is defined but never used.\\nmodels/core/model-array.js: line 145, col 47, \\'errorThrown\\' is defined but never used.\\nmodels/core/model-array.js: line 145, col 35, \\'textStatus\\' is defined but never used.\\n\\n7 errors'); \n  });\n\n});","define('mb-test-1/tests/models/core/model.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/core');\n  test('models/core/model.js should pass jshint', function() { \n    ok(false, 'models/core/model.js should pass jshint.\\nmodels/core/model.js: line 287, col 26, Don\\'t make functions within a loop.\\nmodels/core/model.js: line 82, col 32, \\'ValidationServerErrorHandler\\' is not defined.\\nmodels/core/model.js: line 13, col 5, \\'INTEGER_REGEX\\' is defined but never used.\\nmodels/core/model.js: line 146, col 76, \\'json\\' is defined but never used.\\nmodels/core/model.js: line 300, col 47, \\'errorThrown\\' is defined but never used.\\nmodels/core/model.js: line 300, col 35, \\'textStatus\\' is defined but never used.\\nmodels/core/model.js: line 385, col 25, \\'settings\\' is defined but never used.\\nmodels/core/model.js: line 409, col 26, \\'settings\\' is defined but never used.\\nmodels/core/model.js: line 428, col 23, \\'settings\\' is defined but never used.\\n\\n9 errors'); \n  });\n\n});","define('mb-test-1/tests/models/core/search-model-array.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/core');\n  test('models/core/search-model-array.js should pass jshint', function() { \n    ok(false, 'models/core/search-model-array.js should pass jshint.\\nmodels/core/search-model-array.js: line 5, col 5, \\'readOnly\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/models/core/type-mappings.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/core');\n  test('models/core/type-mappings.js should pass jshint', function() { \n    ok(true, 'models/core/type-mappings.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/floor.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/floor.js should pass jshint', function() { \n    ok(true, 'models/floor.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/node.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/node.js should pass jshint', function() { \n    ok(true, 'models/node.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/property.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/property.js should pass jshint', function() { \n    ok(true, 'models/property.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/propertyoption.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/propertyoption.js should pass jshint', function() { \n    ok(false, 'models/propertyoption.js should pass jshint.\\nmodels/propertyoption.js: line 3, col 10, \\'generateResultsLoader\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/models/rack.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/rack.js should pass jshint', function() { \n    ok(true, 'models/rack.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/base.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/base.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/base.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/baskets.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/baskets.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/baskets.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/components.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/components.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/components.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/floors.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/floors.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/floors.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/nodes.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/nodes.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/nodes.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/properties.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/properties.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/properties.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/propertyoptions.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/propertyoptions.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/propertyoptions.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/racks.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/racks.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/racks.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/results-loader-query-string-builder.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/results-loader-query-string-builder.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/results-loader-query-string-builder.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/rooms.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/rooms.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/rooms.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/rows.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/rows.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/rows.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/servers.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/servers.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/servers.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/results-loaders/servertemplates.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models/results-loaders');\n  test('models/results-loaders/servertemplates.js should pass jshint', function() { \n    ok(true, 'models/results-loaders/servertemplates.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/room.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/room.js should pass jshint', function() { \n    ok(true, 'models/room.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/row.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/row.js should pass jshint', function() { \n    ok(true, 'models/row.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/server.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/server.js should pass jshint', function() { \n    ok(true, 'models/server.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/servertemplate.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/servertemplate.js should pass jshint', function() { \n    ok(true, 'models/servertemplate.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/models/unit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/unit.js should pass jshint', function() { \n    ok(true, 'models/unit.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/application.js should pass jshint', function() { \n    ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/routes/basket.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/basket.js should pass jshint', function() { \n    ok(true, 'routes/basket.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/routes/baskets.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/baskets.js should pass jshint', function() { \n    ok(false, 'routes/baskets.js should pass jshint.\\nroutes/baskets.js: line 6, col 21, \\'params\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/routes/component.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/component.js should pass jshint', function() { \n    ok(true, 'routes/component.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/routes/components.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/components.js should pass jshint', function() { \n    ok(false, 'routes/components.js should pass jshint.\\nroutes/components.js: line 6, col 21, \\'params\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/routes/floor.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/floor.js should pass jshint', function() { \n    ok(true, 'routes/floor.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/routes/floors.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/floors.js should pass jshint', function() { \n    ok(false, 'routes/floors.js should pass jshint.\\nroutes/floors.js: line 6, col 21, \\'params\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/routes/model.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/model.js should pass jshint', function() { \n    ok(false, 'routes/model.js should pass jshint.\\nroutes/model.js: line 2, col 8, \\'Utils\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/routes/node.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/node.js should pass jshint', function() { \n    ok(true, 'routes/node.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/routes/node/servers.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/node');\n  test('routes/node/servers.js should pass jshint', function() { \n    ok(true, 'routes/node/servers.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/routes/nodes.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/nodes.js should pass jshint', function() { \n    ok(false, 'routes/nodes.js should pass jshint.\\nroutes/nodes.js: line 6, col 21, \\'params\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/routes/rack.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/rack.js should pass jshint', function() { \n    ok(true, 'routes/rack.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/routes/racks.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/racks.js should pass jshint', function() { \n    ok(false, 'routes/racks.js should pass jshint.\\nroutes/racks.js: line 6, col 21, \\'params\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/routes/room.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/room.js should pass jshint', function() { \n    ok(true, 'routes/room.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/routes/rooms.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/rooms.js should pass jshint', function() { \n    ok(false, 'routes/rooms.js should pass jshint.\\nroutes/rooms.js: line 6, col 21, \\'params\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/routes/row.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/row.js should pass jshint', function() { \n    ok(true, 'routes/row.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/routes/rows.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/rows.js should pass jshint', function() { \n    ok(false, 'routes/rows.js should pass jshint.\\nroutes/rows.js: line 6, col 21, \\'params\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/routes/server.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/server.js should pass jshint', function() { \n    ok(true, 'routes/server.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/routes/servers.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/servers.js should pass jshint', function() { \n    ok(false, 'routes/servers.js should pass jshint.\\nroutes/servers.js: line 6, col 21, \\'params\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/routes/servertemplate.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/servertemplate.js should pass jshint', function() { \n    ok(true, 'routes/servertemplate.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/routes/servertemplates.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/servertemplates.js should pass jshint', function() { \n    ok(false, 'routes/servertemplates.js should pass jshint.\\nroutes/servertemplates.js: line 6, col 21, \\'params\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/routes/title.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/title.js should pass jshint', function() { \n    ok(true, 'routes/title.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/serializers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/application.js should pass jshint', function() { \n    ok(true, 'serializers/application.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/serializers/rev0.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/rev0.js should pass jshint', function() { \n    ok(false, 'serializers/rev0.js should pass jshint.\\nserializers/rev0.js: line 34, col 17, \\'$\\' is not defined.\\nserializers/rev0.js: line 35, col 17, \\'$\\' is not defined.\\nserializers/rev0.js: line 36, col 17, \\'$\\' is not defined.\\nserializers/rev0.js: line 14, col 45, \\'href\\' is defined but never used.\\nserializers/rev0.js: line 14, col 39, \\'type\\' is defined but never used.\\n\\n5 errors'); \n  });\n\n});","define('mb-test-1/tests/serializers/rev1.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/rev1.js should pass jshint', function() { \n    ok(false, 'serializers/rev1.js should pass jshint.\\nserializers/rev1.js: line 217, col 22, Don\\'t make functions within a loop.\\nserializers/rev1.js: line 20, col 41, \\'href\\' is defined but never used.\\nserializers/rev1.js: line 95, col 13, \\'meta\\' is defined but never used.\\nserializers/rev1.js: line 156, col 13, \\'link\\' is defined but never used.\\n\\n4 errors'); \n  });\n\n});","define('mb-test-1/tests/test-helper', ['mb-test-1/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('mb-test-1/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/components/link-li-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('link-li', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('mb-test-1/tests/unit/components/link-li-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/link-li-test.js should pass jshint', function() { \n    ok(true, 'unit/components/link-li-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/controllers/navigation-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:navigation', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/controllers/navigation-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/navigation-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/navigation-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/controllers/nodes-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:nodes', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/controllers/nodes-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/nodes-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/nodes-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/controllers/nodesdetail-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:nodesdetail', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/controllers/nodesdetail-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/nodesdetail-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/nodesdetail-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/basket-slot-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('basket-slot', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/basket-slot-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/basket-slot-test.js should pass jshint', function() { \n    ok(true, 'unit/models/basket-slot-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/basket-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('basket', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/basket-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/basket-test.js should pass jshint', function() { \n    ok(true, 'unit/models/basket-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/component-property-value-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('component-property-value', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/component-property-value-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/component-property-value-test.js should pass jshint', function() { \n    ok(true, 'unit/models/component-property-value-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/component-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('component', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/component-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/component-test.js should pass jshint', function() { \n    ok(true, 'unit/models/component-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/components-properties-relation-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('components-properties-relation', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/components-properties-relation-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/components-properties-relation-test.js should pass jshint', function() { \n    ok(true, 'unit/models/components-properties-relation-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/floor-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('floor', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/floor-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/floor-test.js should pass jshint', function() { \n    ok(true, 'unit/models/floor-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/groups-properties-relation-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('groups-properties-relation', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/groups-properties-relation-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/groups-properties-relation-test.js should pass jshint', function() { \n    ok(true, 'unit/models/groups-properties-relation-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/node-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('node', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/node-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/node-test.js should pass jshint', function() { \n    ok(true, 'unit/models/node-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/property-option-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('property-option', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/property-option-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/property-option-test.js should pass jshint', function() { \n    ok(true, 'unit/models/property-option-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/property-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('property', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/property-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/property-test.js should pass jshint', function() { \n    ok(true, 'unit/models/property-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/propertygroup-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('propertygroup', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/propertygroup-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/propertygroup-test.js should pass jshint', function() { \n    ok(true, 'unit/models/propertygroup-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/rack-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('rack', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/rack-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/rack-test.js should pass jshint', function() { \n    ok(true, 'unit/models/rack-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/room-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('room', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/room-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/room-test.js should pass jshint', function() { \n    ok(true, 'unit/models/room-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/row-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('row', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/row-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/row-test.js should pass jshint', function() { \n    ok(true, 'unit/models/row-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/server-template-hdd-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('server-template-hdd', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/server-template-hdd-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/server-template-hdd-test.js should pass jshint', function() { \n    ok(true, 'unit/models/server-template-hdd-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/server-template-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('server-template', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/server-template-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/server-template-test.js should pass jshint', function() { \n    ok(true, 'unit/models/server-template-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/server-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('server', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/server-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/server-test.js should pass jshint', function() { \n    ok(true, 'unit/models/server-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/models/unit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('unit', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('mb-test-1/tests/unit/models/unit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/unit-test.js should pass jshint', function() { \n    ok(true, 'unit/models/unit-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/basket-detail-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:basket-detail', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/basket-detail-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/basket-detail-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/basket-detail-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/baskets-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:baskets', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/baskets-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/baskets-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/baskets-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/floor-detail-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:floor-detail', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/floor-detail-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/floor-detail-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/floor-detail-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/floors-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:floors', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/floors-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/floors-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/floors-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/node-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:node', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/node-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/node-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/node-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/nodesdetail-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:nodesdetail', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/nodesdetail-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/nodesdetail-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/nodesdetail-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/rack-detail-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:rack-detail', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/rack-detail-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/rack-detail-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/rack-detail-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/racks-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:racks', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/racks-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/racks-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/racks-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/room-detail-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:room-detail', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/room-detail-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/room-detail-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/room-detail-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/rooms-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:rooms', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/rooms-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/rooms-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/rooms-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/row-detail-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:row-detail', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/row-detail-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/row-detail-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/row-detail-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/rows-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:rows', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/rows-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/rows-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/rows-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/server-detail-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:server-detail', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/server-detail-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/server-detail-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/server-detail-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/routes/servers-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:servers', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('mb-test-1/tests/unit/routes/servers-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/servers-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/servers-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/views/navigation-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:navigation');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('mb-test-1/tests/unit/views/navigation-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/navigation-test.js should pass jshint', function() { \n    ok(true, 'unit/views/navigation-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/unit/views/nodesdetail-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:nodesdetail');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('mb-test-1/tests/unit/views/nodesdetail-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/nodesdetail-test.js should pass jshint', function() { \n    ok(true, 'unit/views/nodesdetail-test.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/utils/computed.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/computed.js should pass jshint', function() { \n    ok(true, 'utils/computed.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/utils/constants.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/constants.js should pass jshint', function() { \n    ok(true, 'utils/constants.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/utils/constants/cookie.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils/constants');\n  test('utils/constants/cookie.js should pass jshint', function() { \n    ok(true, 'utils/constants/cookie.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/utils/error-handlers/base.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils/error-handlers');\n  test('utils/error-handlers/base.js should pass jshint', function() { \n    ok(true, 'utils/error-handlers/base.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/utils/error-handlers/validation-server-error-handler.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils/error-handlers');\n  test('utils/error-handlers/validation-server-error-handler.js should pass jshint', function() { \n    ok(false, 'utils/error-handlers/validation-server-error-handler.js should pass jshint.\\nutils/error-handlers/validation-server-error-handler.js: line 1, col 8, \\'Ember\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('mb-test-1/tests/utils/model.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/model.js should pass jshint', function() { \n    ok(true, 'utils/model.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/api-model-panel.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views');\n  test('views/detail-views/api-model-panel.js should pass jshint', function() { \n    ok(true, 'views/detail-views/api-model-panel.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/body-panel.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views');\n  test('views/detail-views/body-panel.js should pass jshint', function() { \n    ok(true, 'views/detail-views/body-panel.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/description-lists/basket-titled-key-values-section.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views/description-lists');\n  test('views/detail-views/description-lists/basket-titled-key-values-section.js should pass jshint', function() { \n    ok(true, 'views/detail-views/description-lists/basket-titled-key-values-section.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/description-lists/component-titled-key-values-section.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views/description-lists');\n  test('views/detail-views/description-lists/component-titled-key-values-section.js should pass jshint', function() { \n    ok(true, 'views/detail-views/description-lists/component-titled-key-values-section.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/description-lists/floor-titled-key-values-section.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views/description-lists');\n  test('views/detail-views/description-lists/floor-titled-key-values-section.js should pass jshint', function() { \n    ok(true, 'views/detail-views/description-lists/floor-titled-key-values-section.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/description-lists/list-value-generator.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views/description-lists');\n  test('views/detail-views/description-lists/list-value-generator.js should pass jshint', function() { \n    ok(true, 'views/detail-views/description-lists/list-value-generator.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/description-lists/node-titled-key-values-section.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views/description-lists');\n  test('views/detail-views/description-lists/node-titled-key-values-section.js should pass jshint', function() { \n    ok(true, 'views/detail-views/description-lists/node-titled-key-values-section.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/description-lists/rack-titled-key-values-section.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views/description-lists');\n  test('views/detail-views/description-lists/rack-titled-key-values-section.js should pass jshint', function() { \n    ok(true, 'views/detail-views/description-lists/rack-titled-key-values-section.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/description-lists/room-titled-key-values-section.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views/description-lists');\n  test('views/detail-views/description-lists/room-titled-key-values-section.js should pass jshint', function() { \n    ok(true, 'views/detail-views/description-lists/room-titled-key-values-section.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/description-lists/row-titled-key-values-section.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views/description-lists');\n  test('views/detail-views/description-lists/row-titled-key-values-section.js should pass jshint', function() { \n    ok(true, 'views/detail-views/description-lists/row-titled-key-values-section.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/description-lists/server-titled-key-values-section.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views/description-lists');\n  test('views/detail-views/description-lists/server-titled-key-values-section.js should pass jshint', function() { \n    ok(true, 'views/detail-views/description-lists/server-titled-key-values-section.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/description-lists/servertemplate-titled-key-values-section.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views/description-lists');\n  test('views/detail-views/description-lists/servertemplate-titled-key-values-section.js should pass jshint', function() { \n    ok(true, 'views/detail-views/description-lists/servertemplate-titled-key-values-section.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/description-lists/titled-key-values-section.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views/description-lists');\n  test('views/detail-views/description-lists/titled-key-values-section.js should pass jshint', function() { \n    ok(true, 'views/detail-views/description-lists/titled-key-values-section.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/key-value.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views');\n  test('views/detail-views/key-value.js should pass jshint', function() { \n    ok(true, 'views/detail-views/key-value.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/linked-key-value.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views');\n  test('views/detail-views/linked-key-value.js should pass jshint', function() { \n    ok(true, 'views/detail-views/linked-key-value.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/main-panel.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views');\n  test('views/detail-views/main-panel.js should pass jshint', function() { \n    ok(true, 'views/detail-views/main-panel.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/detail-views/side-panel.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/detail-views');\n  test('views/detail-views/side-panel.js should pass jshint', function() { \n    ok(true, 'views/detail-views/side-panel.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/form-fields/base-form-field.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/form-fields');\n  test('views/form-fields/base-form-field.js should pass jshint', function() { \n    ok(true, 'views/form-fields/base-form-field.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/form-fields/form-section.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/form-fields');\n  test('views/form-fields/form-section.js should pass jshint', function() { \n    ok(true, 'views/form-fields/form-section.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/form-fields/select-form-field.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/form-fields');\n  test('views/form-fields/select-form-field.js should pass jshint', function() { \n    ok(true, 'views/form-fields/select-form-field.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/form-fields/text-form-field.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/form-fields');\n  test('views/form-fields/text-form-field.js should pass jshint', function() { \n    ok(true, 'views/form-fields/text-form-field.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/form-fields/textarea-form-field.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/form-fields');\n  test('views/form-fields/textarea-form-field.js should pass jshint', function() { \n    ok(true, 'views/form-fields/textarea-form-field.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modal-notification-center.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/modal-notification-center.js should pass jshint', function() { \n    ok(true, 'views/modal-notification-center.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals-container.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/modals-container.js should pass jshint', function() { \n    ok(true, 'views/modals-container.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/basket-add-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/basket-add-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/basket-add-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/basket-delete-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/basket-delete-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/basket-delete-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/basket-update-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/basket-update-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/basket-update-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/component-add-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/component-add-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/component-add-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/component-delete-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/component-delete-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/component-delete-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/component-update-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/component-update-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/component-update-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/floor-add-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/floor-add-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/floor-add-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/floor-delete-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/floor-delete-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/floor-delete-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/floor-update-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/floor-update-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/floor-update-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/mixins/display-model-errors-modal-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals/mixins');\n  test('views/modals/mixins/display-model-errors-modal-mixin.js should pass jshint', function() { \n    ok(true, 'views/modals/mixins/display-model-errors-modal-mixin.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/mixins/form-modal-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals/mixins');\n  test('views/modals/mixins/form-modal-mixin.js should pass jshint', function() { \n    ok(true, 'views/modals/mixins/form-modal-mixin.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/mixins/full-modal-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals/mixins');\n  test('views/modals/mixins/full-modal-mixin.js should pass jshint', function() { \n    ok(true, 'views/modals/mixins/full-modal-mixin.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/mixins/object-action-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals/mixins');\n  test('views/modals/mixins/object-action-mixin.js should pass jshint', function() { \n    ok(true, 'views/modals/mixins/object-action-mixin.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/mixins/object-validate-and-save-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals/mixins');\n  test('views/modals/mixins/object-validate-and-save-mixin.js should pass jshint', function() { \n    ok(true, 'views/modals/mixins/object-validate-and-save-mixin.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/mixins/open-next-modal-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals/mixins');\n  test('views/modals/mixins/open-next-modal-mixin.js should pass jshint', function() { \n    ok(true, 'views/modals/mixins/open-next-modal-mixin.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/mixins/search-modal-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals/mixins');\n  test('views/modals/mixins/search-modal-mixin.js should pass jshint', function() { \n    ok(true, 'views/modals/mixins/search-modal-mixin.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/mixins/wide-modal-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals/mixins');\n  test('views/modals/mixins/wide-modal-mixin.js should pass jshint', function() { \n    ok(true, 'views/modals/mixins/wide-modal-mixin.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/modal-base-footer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/modal-base-footer.js should pass jshint', function() { \n    ok(true, 'views/modals/modal-base-footer.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/modal-base.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/modal-base.js should pass jshint', function() { \n    ok(true, 'views/modals/modal-base.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/modal.js should pass jshint', function() { \n    ok(true, 'views/modals/modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/node-add-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/node-add-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/node-add-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/node-delete-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/node-delete-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/node-delete-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/node-update-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/node-update-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/node-update-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/rack-add-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/rack-add-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/rack-add-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/rack-delete-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/rack-delete-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/rack-delete-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/rack-update-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/rack-update-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/rack-update-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/room-add-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/room-add-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/room-add-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/room-delete-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/room-delete-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/room-delete-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/room-update-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/room-update-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/room-update-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/row-add-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/row-add-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/row-add-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/row-delete-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/row-delete-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/row-delete-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/row-update-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/row-update-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/row-update-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/server-add-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/server-add-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/server-add-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/server-delete-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/server-delete-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/server-delete-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/server-update-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/server-update-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/server-update-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/servertemplate-add-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/servertemplate-add-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/servertemplate-add-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/servertemplate-delete-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/servertemplate-delete-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/servertemplate-delete-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/modals/servertemplate-update-modal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/modals');\n  test('views/modals/servertemplate-update-modal.js should pass jshint', function() { \n    ok(true, 'views/modals/servertemplate-update-modal.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/navigation.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/navigation.js should pass jshint', function() { \n    ok(true, 'views/navigation.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/notification-center.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/notification-center.js should pass jshint', function() { \n    ok(true, 'views/notification-center.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/page-navigations/page-navigation.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/page-navigations');\n  test('views/page-navigations/page-navigation.js should pass jshint', function() { \n    ok(true, 'views/page-navigations/page-navigation.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/baskets-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/baskets-table.js should pass jshint', function() { \n    ok(true, 'views/results/baskets-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/component-properties-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/component-properties-table.js should pass jshint', function() { \n    ok(true, 'views/results/component-properties-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/components-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/components-table.js should pass jshint', function() { \n    ok(true, 'views/results/components-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/floors-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/floors-table.js should pass jshint', function() { \n    ok(true, 'views/results/floors-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/node-servers-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/node-servers-table.js should pass jshint', function() { \n    ok(true, 'views/results/node-servers-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/nodes-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/nodes-table.js should pass jshint', function() { \n    ok(true, 'views/results/nodes-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/racks-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/racks-table.js should pass jshint', function() { \n    ok(true, 'views/results/racks-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/results-load-more.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/results-load-more.js should pass jshint', function() { \n    ok(true, 'views/results/results-load-more.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/results-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/results-table.js should pass jshint', function() { \n    ok(true, 'views/results/results-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/rooms-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/rooms-table.js should pass jshint', function() { \n    ok(true, 'views/results/rooms-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/rows-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/rows-table.js should pass jshint', function() { \n    ok(true, 'views/results/rows-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/server-components-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/server-components-table.js should pass jshint', function() { \n    ok(true, 'views/results/server-components-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/servers-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/servers-table.js should pass jshint', function() { \n    ok(true, 'views/results/servers-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/results/servertemplates-table.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/results');\n  test('views/results/servertemplates-table.js should pass jshint', function() { \n    ok(true, 'views/results/servertemplates-table.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/tables/cells/linked-text-cell.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/tables/cells');\n  test('views/tables/cells/linked-text-cell.js should pass jshint', function() { \n    ok(true, 'views/tables/cells/linked-text-cell.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/tables/cells/table-cell-base.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/tables/cells');\n  test('views/tables/cells/table-cell-base.js should pass jshint', function() { \n    ok(true, 'views/tables/cells/table-cell-base.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/tests/views/tables/cells/titled-linked-cell.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/tables/cells');\n  test('views/tables/cells/titled-linked-cell.js should pass jshint', function() { \n    ok(true, 'views/tables/cells/titled-linked-cell.js should pass jshint.'); \n  });\n\n});","define('mb-test-1/utils/computed', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var get = Ember['default'].get,\n        a_slice = Array.prototype.slice;\n\n    var Computed = Ember['default'].Namespace.create({\n        sum: function sum(dependentKey, itemKey) {\n            // FIXME - should be wrapped in Ember.arrayComputed?\n            return Ember['default'].computed(function () {\n                var total = 0,\n                    arr = get(this, dependentKey) || [];\n\n                if (!arr || !arr.forEach) {\n                    return 0;\n                }\n\n                arr.forEach(function (item) {\n                    var number = get(item, itemKey);\n\n                    if (number) {\n                        total += number;\n                    }\n                });\n\n                return total;\n            }).property(dependentKey, dependentKey + '.length', dependentKey + '.@each.' + itemKey);\n        },\n\n        sumAll: function sumAll() {\n            var args = a_slice.call(arguments);\n\n            var computed = Ember['default'].computed(function () {\n                var total = 0;\n\n                for (var i = 0, l = args.length; i < l; ++i) {\n                    total += get(this, args[i]) || 0;\n                }\n\n                return total;\n            });\n\n            return computed.property.apply(computed, args);\n        },\n\n        subtract: function subtract(key1, key2) {\n            return Ember['default'].computed(function () {\n                return this.get(key1) - this.get(key2);\n            }).property(key1, key2);\n        },\n\n        slice: function slice(dependentKey, start, end) {\n            return Ember['default'].computed(dependentKey, function () {\n                var array = get(this, dependentKey) || [];\n                // array might be an Ember.ArrayProxy object so use native slice method here\n                return array.slice(start, end);\n            });\n        },\n\n        concat: function concat(dependentKey, key, flip) {\n            return Ember['default'].computed(dependentKey, function () {\n                var value = get(this, dependentKey) || '';\n\n                if (flip) {\n                    return key + value;\n                }\n\n                return value + key;\n            });\n        },\n\n        downcase: function downcase(dependentKey) {\n            return Ember['default'].computed(dependentKey, function () {\n                return (get(this, dependentKey) || '').toLowerCase();\n            });\n        },\n\n        fmt: function fmt() {\n            var formatString = '' + a_slice.call(arguments, -1),\n                properties = a_slice.call(arguments, 0, -1);\n\n            var computed = Ember['default'].computed(function () {\n                var values = [];\n\n                for (var i = 0, l = properties.length; i < l; ++i) {\n                    values.push(get(this, properties[i]) || '');\n                }\n\n                return Ember['default'].String.fmt(formatString, values);\n            });\n\n            return computed.property.apply(computed, properties);\n        },\n\n        orProperties: function orProperties() {\n            var args = a_slice.call(arguments);\n\n            var computed = Ember['default'].computed(function () {\n                var result;\n\n                for (var i = 0, l = args.length; i < l; ++i) {\n                    result = result || get(this, args[i]);\n\n                    if (result) {\n                        return result;\n                    }\n                }\n\n                return result;\n            });\n\n            return computed.property.apply(computed, args);\n        },\n\n        ifThisOrThat: function ifThisOrThat(dependentKey, one, two, invert) {\n            return Ember['default'].computed(dependentKey, function () {\n                var check = get(this, dependentKey);\n\n                if (invert) {\n                    check = !check;\n                }\n\n                return check ? one : two;\n            });\n        },\n\n        transform: function transform(dependentKey, func, self) {\n            return Ember['default'].computed(dependentKey, function () {\n                if (_.isString(func)) {\n                    func = get(self || this, func) || get(this.constructor, func);\n                }\n\n                return func.call(self || this, get(self || this, dependentKey));\n            });\n        }\n    });\n\n    exports['default'] = Computed;\n\n});","define('mb-test-1/utils/constants', ['exports'], function (exports) {\n\n    'use strict';\n\n    var Constants = {};\n\n    Constants.TIME = {\n        THREE_YEARS: 365 * 3,\n        MONTHS: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n        DAYS_IN_MONTH: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31],\n        WEEK: 7\n    };\n\n    Constants.KEYS = {\n        ENTER: 13,\n        ESCAPE: 27\n    };\n\n    Constants.SEARCH = {\n        CATEGORIES: ['order', 'transaction', 'search', 'customer', 'funding_instrument', 'dispute'],\n        SEARCH_TYPES: ['debit', 'credit', 'card_hold', 'refund', 'reversal'],\n        TRANSACTION_TYPES: ['debit', 'credit', 'hold', 'refund'],\n        FUNDING_INSTRUMENT_TYPES: ['bank_account', 'card'],\n        DISPUTE_TYPES: ['pending', 'won', 'lost', 'arbitration']\n    };\n\n    //  time in ms to throttle between key presses for search\n    Constants.THROTTLE = {\n        SEARCH: 400,\n        REFRESH: 1000\n    };\n\n    Constants.PASSWORD = {\n        MIN_CHARS: 6,\n        REGEX: /(?=.*[A-z])(?=.*\\d)/\n    };\n\n    Constants.MAXLENGTH = {\n        DESCRIPTION: 150,\n        APPEARS_ON_STATEMENT_BANK_ACCOUNT: 14,\n        APPEARS_ON_STATEMENT_CARD: 18\n    };\n\n    Constants.EXPECTED_DAYS_OFFSET = {\n        CREDIT_ACH: 1,\n        CREDIT_DEBIT_CARD: 2,\n        RESTART_VERIFICATION: 3\n    };\n\n    Constants.DATES = {\n        CREATED_AT: moment('2011-04-01').startOf('day').toDate(),\n        RESULTS_MAX_TIME: moment().add(2, 'hours').startOf('hour').toDate(),\n        RESULTS_MIN_TIME: moment().subtract(1, 'months').startOf('hour').toDate()\n    };\n\n    exports['default'] = Constants;\n\n});","define('mb-test-1/utils/constants/cookie', ['exports'], function (exports) {\n\n    'use strict';\n\n    exports['default'] = {\n        EMBER_AUTH_TOKEN: 'ember-auth-rememberable',\n        MARKETPLACE_URI: 'mru',\n        API_KEY_SECRET: 'apiKeySecret',\n        NEW_UPDATES: 'new-updates',\n\n        CSRF_TOKEN: 'csrftoken',\n        SESSION: 'session'\n    };\n\n});","define('mb-test-1/utils/error-handlers/base', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Object.extend({\n        addErrorMessage: function addErrorMessage(key, message) {\n            return this.model.get(\"validationErrors\").add(key, \"serverError\", null, message);\n        },\n\n        clear: function clear() {\n            return this.model.get(\"validationErrors\").clear();\n        }\n    });\n\n});","define('mb-test-1/utils/error-handlers/validation-server-error-handler', ['exports', 'ember', 'mb-test-1/utils/error-handlers/base'], function (exports, Ember, BaseErrorHandler) {\n\n    'use strict';\n\n    exports['default'] = BaseErrorHandler['default'].extend({\n        init: function init(model, response) {\n            this.model = model;\n            this.response = response;\n        },\n\n        getServerExtraKeyMapping: function getServerExtraKeyMapping(key) {\n            switch (key) {\n                case \"incorporation_date\":\n                    return \"business.incorporation_date\";\n                case \"tax_id\":\n                    return \"business.tax_id\";\n                case \"dob\":\n                    return \"person.dob\";\n                default:\n                    return key;\n            }\n        },\n\n        execute: function execute() {\n            var errorsList;\n            errorsList = this.response.errors || [];\n            _.each(errorsList, (function (_this) {\n                return function (error) {\n                    var message;\n                    if (_.keys(error.extras).length > 0) {\n                        return _.each(error.extras, function (message, key) {\n                            key = _this.getServerExtraKeyMapping(key);\n                            return _this.addErrorMessage(key, message);\n                        });\n                    } else if (error.additional) {\n                        return _this.addErrorMessage(void 0, error.additional);\n                    } else if (error.description) {\n                        if (error.description.indexOf(\" - \") > 0) {\n                            message = error.description.split(\" - \")[1];\n                        } else {\n                            message = error.description;\n                        }\n                        return _this.addErrorMessage(void 0, message);\n                    } else {\n                        return _this.addErrorMessage(void 0, error[0]);\n                    }\n                };\n            })(this));\n            return this.model.notifyPropertyChange(\"validationErrors\");\n        }\n    });\n\n});","define('mb-test-1/utils/model', ['exports'], function (exports) {\n\n    'use strict';\n\n    exports.getResultsLoader = getResultsLoader;\n    exports.generateResultsLoader = generateResultsLoader;\n\n    function getResultsLoader(loaderClassName, attributes) {\n        return MbTestApp.__container__.lookupFactory(\"results-loader:\" + loaderClassName).create(attributes);\n    }\n\n    function generateResultsLoader(loaderClassName, uriFieldName) {\n        return function (attributes) {\n            attributes = _.extend({\n                path: this.get(uriFieldName)\n            }, attributes);\n            return getResultsLoader(loaderClassName, attributes);\n        };\n    }\n\n});","define('mb-test-1/views/detail-views/api-model-panel', ['exports', 'mb-test-1/views/detail-views/side-panel'], function (exports, SidePanelView) {\n\n\t'use strict';\n\n\texports['default'] = SidePanelView['default'];\n\n});","define('mb-test-1/views/detail-views/body-panel', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        classNames: ['body-panel', 'clearfix'],\n\n        didInsertElement: function didInsertElement() {\n            var self = this;\n\n            Ember['default'].run(function () {\n                self.updatePanelHeight();\n\n                Ember['default'].$(window).resize(function () {\n                    self.updatePanelHeight();\n                });\n            });\n        },\n\n        updatePanelHeight: function updatePanelHeight() {\n            if (Ember['default'].$('.side-panel').length) {\n                var windowHeight = Ember['default'].$(window).height();\n                var sidePanelTop = Ember['default'].$('.side-panel').offset().top;\n                var sidePanelBottom = Ember['default'].$('.side-panel').height() + sidePanelTop;\n\n                if (windowHeight > sidePanelBottom) {\n                    Ember['default'].$('.side-panel').height(windowHeight - sidePanelTop);\n                }\n            }\n        }\n    });\n\n});","define('mb-test-1/views/detail-views/description-lists/basket-titled-key-values-section', ['exports', 'mb-test-1/views/detail-views/description-lists/titled-key-values-section', 'mb-test-1/views/detail-views/description-lists/list-value-generator'], function (exports, TitledKeyValuesSectionView, ListValueGenerator) {\n\n    'use strict';\n\n    exports['default'] = TitledKeyValuesSectionView['default'].extend({\n        title: \"Basket information\",\n        editModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/basket-update-modal\");\n        }).property(\"model\"),\n\n        deleteModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/basket-delete-modal\");\n        }).property(\"model\"),\n\n        keyValueListViews: ListValueGenerator['default'].create().add(\"Basket ID\", \"id\").add(\"Name\", \"name\").add(\"Total slots Qty\", \"slot_qty\").add(\"Height in units\", \"unit_takes\").add(\"Node name\", \"json_node.name\").add(\"Floor name\", \"json_floor.name\").add(\"Room name\", \"json_room.name\").add(\"Row name\", \"json_row.name\").add(\"Rack name\", \"json_rack.name\").toProperty()\n    });\n\n});","define('mb-test-1/views/detail-views/description-lists/component-titled-key-values-section', ['exports', 'mb-test-1/views/detail-views/description-lists/titled-key-values-section', 'mb-test-1/views/detail-views/description-lists/list-value-generator'], function (exports, TitledKeyValuesSectionView, ListValueGenerator) {\n\n    'use strict';\n\n    exports['default'] = TitledKeyValuesSectionView['default'].extend({\n        title: \"Component information\",\n        editModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/component-update-modal\");\n        }).property(\"model\"),\n\n        deleteModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/component-delete-modal\");\n        }).property(\"model\"),\n\n        keyValueListViews: ListValueGenerator['default'].create().add(\"Component ID\", \"id\").add(\"Name\", \"name\").add(\"Manufacturer\", \"manufacturer\").add(\"Model name\", \"model_name\").add(\"Serial Number\", \"serial_number\").add(\"Kind\", \"json_kind.name\").add(\"State\", \"state\").add(\"Server\", \"json_server.name\").toProperty()\n    });\n\n});","define('mb-test-1/views/detail-views/description-lists/floor-titled-key-values-section', ['exports', 'mb-test-1/views/detail-views/description-lists/titled-key-values-section', 'mb-test-1/views/detail-views/description-lists/list-value-generator'], function (exports, TitledKeyValuesSectionView, ListValueGenerator) {\n\n    'use strict';\n\n    exports['default'] = TitledKeyValuesSectionView['default'].extend({\n        title: \"Floor information\",\n        editModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/floor-update-modal\");\n        }).property(\"model\"),\n\n        deleteModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/floor-delete-modal\");\n        }).property(\"model\"),\n\n        keyValueListViews: ListValueGenerator['default'].create().add(\"Floor ID\", \"id\").add(\"Name\", \"name\").add(\"Node name\", \"node_name\").toProperty()\n    });\n\n});","define('mb-test-1/views/detail-views/description-lists/list-value-generator', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Object.extend({\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.values = [];\n    },\n\n    add: function add(label, fieldName, hrefField) {\n      this.values.push({\n        label: label,\n        fieldName: fieldName,\n        hrefField: hrefField\n      });\n      return this;\n    },\n\n    toProperty: function toProperty() {\n      var fieldNames, method, values;\n      values = this.values;\n      fieldNames = values.mapBy(\"fieldName\").map(function (name) {\n        return \"model.\" + name;\n      });\n      fieldNames.push(\"model\");\n\n      method = Ember['default'].computed(function () {\n        return values.map((function (_this) {\n          return function (value) {\n            if (Ember['default'].isBlank(value.hrefField)) {\n              return _this.getKeyValueView(value.label, value.fieldName);\n            } else {\n              return _this.getLinkedKeyValueView(value.label, value.fieldName, value.hrefField);\n            }\n          };\n        })(this));\n      });\n\n      return method.property.apply(method, fieldNames);\n    }\n  });\n\n});","define('mb-test-1/views/detail-views/description-lists/node-titled-key-values-section', ['exports', 'mb-test-1/views/detail-views/description-lists/titled-key-values-section', 'mb-test-1/views/detail-views/description-lists/list-value-generator'], function (exports, TitledKeyValuesSectionView, ListValueGenerator) {\n\n    'use strict';\n\n    exports['default'] = TitledKeyValuesSectionView['default'].extend({\n        title: \"Node information\",\n        editModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/node-update-modal\");\n        }).property(\"model\"),\n\n        deleteModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/node-delete-modal\");\n        }).property(\"model\"),\n\n        keyValueListViews: ListValueGenerator['default'].create().add(\"Name\", \"name\").add(\"Address\", \"address\").toProperty()\n    });\n\n});","define('mb-test-1/views/detail-views/description-lists/rack-titled-key-values-section', ['exports', 'mb-test-1/views/detail-views/description-lists/titled-key-values-section', 'mb-test-1/views/detail-views/description-lists/list-value-generator'], function (exports, TitledKeyValuesSectionView, ListValueGenerator) {\n\n    'use strict';\n\n    exports['default'] = TitledKeyValuesSectionView['default'].extend({\n        title: \"Rack information\",\n        editModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/rack-update-modal\");\n        }).property(\"model\"),\n\n        deleteModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/rack-delete-modal\");\n        }).property(\"model\"),\n\n        keyValueListViews: ListValueGenerator['default'].create().add(\"Rack ID\", \"id\").add(\"Name\", \"name\").add(\"Total units\", \"total_units\").add(\"Max gap\", \"max_gap\").add(\"Node name\", \"json_node.name\").add(\"Floor name\", \"json_floor.name\").add(\"Room name\", \"json_room.name\").add(\"Row name\", \"json_row.name\").toProperty()\n    });\n\n});","define('mb-test-1/views/detail-views/description-lists/room-titled-key-values-section', ['exports', 'mb-test-1/views/detail-views/description-lists/titled-key-values-section', 'mb-test-1/views/detail-views/description-lists/list-value-generator'], function (exports, TitledKeyValuesSectionView, ListValueGenerator) {\n\n    'use strict';\n\n    exports['default'] = TitledKeyValuesSectionView['default'].extend({\n        title: \"Room information\",\n        editModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/room-update-modal\");\n        }).property(\"model\"),\n\n        deleteModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/room-delete-modal\");\n        }).property(\"model\"),\n\n        keyValueListViews: ListValueGenerator['default'].create().add(\"Room ID\", \"id\").add(\"Name\", \"name\").add(\"Node name\", \"node_name\").add(\"Floor name\", \"floor_name\").toProperty()\n    });\n\n});","define('mb-test-1/views/detail-views/description-lists/row-titled-key-values-section', ['exports', 'mb-test-1/views/detail-views/description-lists/titled-key-values-section', 'mb-test-1/views/detail-views/description-lists/list-value-generator'], function (exports, TitledKeyValuesSectionView, ListValueGenerator) {\n\n    'use strict';\n\n    exports['default'] = TitledKeyValuesSectionView['default'].extend({\n        title: \"Row information\",\n        editModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/row-update-modal\");\n        }).property(\"model\"),\n\n        deleteModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/row-delete-modal\");\n        }).property(\"model\"),\n\n        keyValueListViews: ListValueGenerator['default'].create().add(\"Row ID\", \"id\").add(\"Name\", \"name\").add(\"Node name\", \"json_node.name\").add(\"Floor name\", \"json_floor.name\").add(\"Room name\", \"json_room.name\").toProperty()\n    });\n\n});","define('mb-test-1/views/detail-views/description-lists/server-titled-key-values-section', ['exports', 'mb-test-1/views/detail-views/description-lists/titled-key-values-section', 'mb-test-1/views/detail-views/description-lists/list-value-generator'], function (exports, TitledKeyValuesSectionView, ListValueGenerator) {\n\n    'use strict';\n\n    exports['default'] = TitledKeyValuesSectionView['default'].extend({\n        title: \"Server information\",\n        editModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/server-update-modal\");\n        }).property(\"model\"),\n\n        deleteModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/server-delete-modal\");\n        }).property(\"model\"),\n\n        keyValueListViews: ListValueGenerator['default'].create().add(\"Server ID\", \"id\").add(\"Name\", \"name\").add(\"Template\", \"json_template.name\").add(\"Node name\", \"json_node.name\").add(\"Floor name\", \"json_floor.name\").add(\"Room name\", \"json_room.name\").add(\"Row name\", \"json_row.name\").add(\"Rack name\", \"json_rack.name\").add(\"Basket name\", \"json_basket.name\").toProperty()\n    });\n\n});","define('mb-test-1/views/detail-views/description-lists/servertemplate-titled-key-values-section', ['exports', 'mb-test-1/views/detail-views/description-lists/titled-key-values-section', 'mb-test-1/views/detail-views/description-lists/list-value-generator'], function (exports, TitledKeyValuesSectionView, ListValueGenerator) {\n\n    'use strict';\n\n    exports['default'] = TitledKeyValuesSectionView['default'].extend({\n        title: \"Server Template information\",\n        editModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/servertemplate-update-modal\");\n        }).property(\"model\"),\n\n        deleteModelModalClass: (function () {\n            return this.get(\"container\").lookupFactory(\"view:modals/servertemplate-delete-modal\");\n        }).property(\"model\"),\n\n        keyValueListViews: ListValueGenerator['default'].create().add(\"Server Template ID\", \"id\").add(\"Name\", \"name\").add(\"Num servers uses\", \"servers_uses\").toProperty()\n    });\n\n});","define('mb-test-1/views/detail-views/description-lists/titled-key-values-section', ['exports', 'ember', 'mb-test-1/views/detail-views/key-value', 'mb-test-1/views/detail-views/linked-key-value', 'mb-test-1/lib/utils'], function (exports, Ember, KeyValueView, LinkedKeyValueView, Utils) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        layoutName: \"detail-views/titled-key-values-section\",\n\n        title: (function () {\n            return \"%@ information\".fmt(this.get(\"model.type_name\"));\n        }).property(\"model.type_name\"),\n\n        getFieldValue: function getFieldValue(fieldName) {\n            var model = this.get(\"model\");\n            var dateFields = [\"created_at\", \"initiated_at\", \"respond_by\", \"from_date\", \"to_date\"];\n\n            if (model === undefined) {\n                return;\n            }\n            var value = Ember['default'].get(model, fieldName);\n\n            if (_.contains(dateFields, fieldName)) {\n                value = Utils['default'].humanReadableDateTime(value);\n            }\n\n            return value;\n        },\n\n        getKeyValueView: function getKeyValueView(label, fieldName) {\n            var value = this.getFieldValue(fieldName);\n            return KeyValueView['default'].extend({\n                key: label,\n                value: value\n            });\n        },\n\n        getLinkedKeyValueView: function getLinkedKeyValueView(label, fieldName, hrefFieldName) {\n            if (Ember['default'].isBlank(this.get(\"model\"))) {\n                return this.getKeyValueView(label, fieldName);\n            }\n\n            var value = this.getFieldValue(fieldName);\n            var link = Ember['default'].get(this.get(\"model\"), hrefFieldName);\n\n            if (Ember['default'].isBlank(link)) {\n                return this.getKeyValueView(label, fieldName);\n            }\n\n            if (link.indexOf(\"@\") > 0) {\n                link = \"mailto:\" + link;\n            } else if (link.indexOf(\"http\") < 0) {\n                link = \"http://\" + link;\n            }\n\n            return LinkedKeyValueView['default'].extend({\n                key: label,\n                value: value,\n                link: link\n            });\n        } });\n\n});","define('mb-test-1/views/detail-views/key-value', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        templateName: \"detail-views/key-value\",\n        hasLink: false });\n\n});","define('mb-test-1/views/detail-views/linked-key-value', ['exports', 'mb-test-1/views/detail-views/key-value'], function (exports, KeyValueView) {\n\n    'use strict';\n\n    exports['default'] = KeyValueView['default'].extend({\n        hasLink: true\n    });\n\n});","define('mb-test-1/views/detail-views/main-panel', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        classNameBindings: [\":main-panel\", \":span\"]\n    });\n\n});","define('mb-test-1/views/detail-views/side-panel', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        classNameBindings: [\":side-panel\"],\n        layoutName: \"detail-views/side-panel-layout\"\n    });\n\n});","define('mb-test-1/views/form-fields/base-form-field', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].View.extend({\n    layoutName: \"form-fields/form-field-layout\",\n    templateName: \"form-fields/base-form-field\",\n    classNameBindings: [\":form-group\", \"isError:has-error\"],\n    inputName: Ember['default'].computed(\"field\", function () {\n      return this.get(\"field\").replace(/\\./, \"_\");\n    }),\n    value: Ember['default'].computed(\"model\", \"field\", function (a, value) {\n      var field = this.get(\"field\"),\n          model = this.get(\"model\");\n\n      if (arguments.length > 1 && model) {\n        model.set(field, value);\n      }\n      if (model) {\n        return model.get(field);\n      }\n    }),\n    displayAlertErrors: function displayAlertErrors() {\n      Ember['default'].$(\".alert-error\").hide();\n      return this.$(\".alert-error\").css(\"display\", \"inline\");\n    },\n    didInsertElement: function didInsertElement() {\n      var self = this,\n          $el = this.$();\n\n      var makeShowValidationErrors = function makeShowValidationErrors() {\n        if (!(self.get(\"isDestroyed\") || self.get(\"isDestroying\"))) {\n          self.set(\"isCanShowValidationErrors\", true);\n        }\n      };\n\n      $el.hover(function () {\n        self.displayAlertErrors();\n      });\n      $el.find(\":input\").focus(function () {\n        return self.displayAlertErrors();\n      });\n      $el.find(\":input\").blur(function () {\n        return makeShowValidationErrors();\n      });\n      $el.closest(\"form\").submit(function () {\n        makeShowValidationErrors();\n      });\n    },\n    isLegacyModel: Ember['default'].computed.none(\"model.errors\"),\n    errorMessages: Ember['default'].computed.reads(\"errorMessagesIndirectionHandler.messages\"),\n    isOneError: Ember['default'].computed.equal(\"errorMessages.length\", 1),\n    errorMessagesIndirectionHandler: Ember['default'].computed(\"isLegacyModel\", \"model\", \"field\", function () {\n      var errorsListKeyName,\n          fieldName = this.get(\"field\"),\n          model = this.get(\"model\");\n\n      if (!this.get(\"isLegacyModel\")) {\n        errorsListKeyName = \"model.errors.\" + fieldName;\n      } else {\n        errorsListKeyName = \"model.validationErrors.\" + fieldName + \".messages\";\n      }\n      return Ember['default'].Object.extend({\n        messages: Ember['default'].computed.reads(errorsListKeyName)\n      }).create({\n        model: model\n      });\n    }),\n    isCanShowValidationErrors: false,\n    isError: Ember['default'].computed(\"isCanShowValidationErrors\", \"isLegacyModel\", \"errorMessages.length\", function () {\n      var length = this.get(\"errorMessages.length\");\n      if (this.get(\"isLegacyModel\")) {\n        return length > 0;\n      } else {\n        return length > 0 && this.get(\"isCanShowValidationErrors\");\n      }\n    })\n  });\n\n});","define('mb-test-1/views/form-fields/form-section', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        classNameBindings: [\":form-section\", \":clearfix\"],\n        layoutName: \"form-fields/form-section\"\n    });\n\n});","define('mb-test-1/views/form-fields/select-form-field', ['exports', 'mb-test-1/views/form-fields/base-form-field'], function (exports, BaseFormFieldView) {\n\n    'use strict';\n\n    exports['default'] = BaseFormFieldView['default'].extend({\n        templateName: \"form-fields/select-form-field\",\n        optionValuePath: \"content.value\",\n        optionLabelPath: \"content.label\"\n    });\n\n});","define('mb-test-1/views/form-fields/text-form-field', ['exports', 'mb-test-1/views/form-fields/base-form-field'], function (exports, BaseFormFieldView) {\n\n    'use strict';\n\n    exports['default'] = BaseFormFieldView['default'].extend({\n        inputType: \"text\",\n        inputClassNames: \"full\"\n    });\n\n});","define('mb-test-1/views/form-fields/textarea-form-field', ['exports', 'mb-test-1/views/form-fields/base-form-field'], function (exports, BaseFormFieldView) {\n\n    'use strict';\n\n    exports['default'] = BaseFormFieldView['default'].extend({\n        templateName: \"form-fields/textarea-form-field\",\n        maxlength: 434,\n        inputClassNames: \"full\",\n        explanationText: (function () {\n            var maxLength = this.get(\"maxlength\");\n\n            if (maxLength > 0) {\n                var noteLength = this.get(\"value\") ? this.get(\"value.length\") : 0;\n                var remaining = maxLength - noteLength;\n                return \"%@ characters remaining\".fmt(remaining);\n            }\n        }).property(\"value.length\") });\n\n});","define('mb-test-1/views/modal-notification-center', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        templateName: \"notification-center\"\n    });\n\n});","define('mb-test-1/views/modals-container', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ContainerView.extend({\n        didInsertElement: function didInsertElement() {\n            this._super();\n            this.get(\"controller\").registerContainer(this);\n        }\n    });\n\n});","define('mb-test-1/views/modals/basket-add-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/basket', 'mb-test-1/models/rack'], function (exports, Ember, ModalBaseView, Form, Full, Save, Basket, Rack) {\n\n    'use strict';\n\n    var BasketAddModal = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/basket-add-modal\",\n        elementId: \"add-basket\",\n        title: \"Add a basket\",\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Add\",\n        successAlertText: \"Your basket was created successfully\",\n\n        racks: (function () {\n            return Rack['default'].findAll();\n        }).property(),\n\n        racksForSelect: Ember['default'].computed.map(\"racks\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        /*preselect: function() {\n            var rack_id = this.get('racksForSelect.firstObject').value;\n            this.set('selectedRack', rack_id);\n        }.observes('racksForSelect.@each'),*/\n\n        model: (function () {\n            return Basket['default'].create();\n        }).property(),\n\n        onModelSaved: function onModelSaved(model) {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"basket\", model.__json.id);\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    BasketAddModal.reopenClass({\n        open: function open() {\n            return this.create({\n                selectedRack: null\n            });\n        } });\n\n    exports['default'] = BasketAddModal;\n\n});","define('mb-test-1/views/modals/basket-delete-modal', ['exports', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/object-action-mixin'], function (exports, ModalBaseView, DeleteMixin) {\n\n    'use strict';\n\n    var BasketDeleteModalView = ModalBaseView['default'].extend(DeleteMixin['default'], {\n        templateName: \"modals/basket-delete-modal\",\n        elementId: \"delete-basket\",\n        classNames: [\"wide-modal\"],\n        title: \"Remove basket?\",\n        isSaving: false,\n\n        onModelSaved: function onModelSaved() {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"baskets\");\n        },\n\n        actions: {\n            save: function save(model) {\n                this[\"delete\"](model);\n            }\n        }\n    });\n\n    BasketDeleteModalView.reopenClass({\n        open: function open(model) {\n            return this.create({\n                model: model\n            });\n        }\n    });\n\n    exports['default'] = BasketDeleteModalView;\n\n});","define('mb-test-1/views/modals/basket-update-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/rack'], function (exports, Ember, ModalBaseView, Form, Full, Save, Rack) {\n\n    'use strict';\n\n    var BasketUpdateModalView = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/basket-update-modal\",\n        elementId: \"basket-update\",\n        title: (function () {\n            return \"Edit basket information\";\n        }).property(),\n\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Save\",\n\n        racks: (function () {\n            return Rack['default'].findAll();\n        }).property(),\n\n        racksForSelect: Ember['default'].computed.map(\"racks\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselect: (function () {\n            var rack = this.get(\"model\").__json.rack;\n            this.set(\"selectedRack\", rack && rack.id || null);\n        }).observes(\"racks.@each\"),\n\n        onModelSaved: function onModelSaved() {\n            this.getNotificationController().alertSuccess(\"Basket has been saved.\", {\n                expire: true\n            });\n            this.get(\"originalModel\").reload();\n            this.close();\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    BasketUpdateModalView.reopenClass({\n        open: function open(model) {\n            var view = this.create({\n                originalModel: model,\n                model: model,\n                selectedRack: model.__json.rack && model.__json.rack.id || null\n            });\n            return view;\n        }\n    });\n\n    exports['default'] = BasketUpdateModalView;\n\n});","define('mb-test-1/views/modals/component-add-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/propertyoption', 'mb-test-1/models/component'], function (exports, Ember, ModalBaseView, Form, Full, Save, PropertyOption, Component) {\n\n    'use strict';\n\n    var ComponentAddModal = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/component-add-modal\",\n        elementId: \"component-add\",\n        title: \"Add a component\",\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Add\",\n        successAlertText: \"Your component was created successfully\",\n\n        // kind choices\n        kinds: (function () {\n            var obj = PropertyOption['default'].create();\n            return obj.getComponentKinds();\n        }).property(),\n\n        kindsForSelect: Ember['default'].computed.map(\"kinds\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselectKinds: (function () {\n            var o_id = this.get(\"kindsForSelect.firstObject\").value;\n            this.set(\"selectedKind\", o_id);\n        }).observes(\"kindsForSelect.@each\"),\n\n        model: (function () {\n            return Component['default'].create();\n        }).property(),\n\n        onModelSaved: function onModelSaved(model) {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"component\", model.__json.id);\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        } });\n\n    ComponentAddModal.reopenClass({\n        open: function open() {\n            return this.create({\n                selectedKind: null\n            });\n        } });\n\n    exports['default'] = ComponentAddModal;\n\n});","define('mb-test-1/views/modals/component-delete-modal', ['exports', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/object-action-mixin'], function (exports, ModalBaseView, DeleteMixin) {\n\n    'use strict';\n\n    var ComponentDeleteModalView = ModalBaseView['default'].extend(DeleteMixin['default'], {\n        templateName: \"modals/component-delete-modal\",\n        elementId: \"delete-component\",\n        classNames: [\"wide-modal\"],\n        title: \"Remove component?\",\n        isSaving: false,\n\n        onModelSaved: function onModelSaved() {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"components\");\n        },\n\n        actions: {\n            save: function save(model) {\n                this[\"delete\"](model);\n            }\n        }\n    });\n\n    ComponentDeleteModalView.reopenClass({\n        open: function open(model) {\n            return this.create({\n                model: model\n            });\n        }\n    });\n\n    exports['default'] = ComponentDeleteModalView;\n\n});","define('mb-test-1/views/modals/component-update-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/propertyoption'], function (exports, Ember, ModalBaseView, Form, Full, Save, PropertyOption) {\n\n    'use strict';\n\n    var ComponentUpdateModalView = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/component-update-modal\",\n        elementId: \"component-update\",\n        title: (function () {\n            return \"Edit component information\";\n        }).property(),\n\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Save\",\n\n        // kind choices\n        kinds: (function () {\n            var obj = PropertyOption['default'].create();\n            return obj.getComponentKinds();\n        }).property(),\n\n        kindsForSelect: Ember['default'].computed.map(\"kinds\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselectKinds: (function () {\n            var o_id = this.get(\"kindsForSelect.firstObject\").value;\n            var current = this.get(\"model\").__json.kind;\n            this.set(\"selectedKind\", current && current.id || o_id);\n        }).observes(\"kindsForSelect.@each\"),\n\n        onModelSaved: function onModelSaved() {\n            this.getNotificationController().alertSuccess(\"Component has been saved.\", {\n                expire: true\n            });\n            this.get(\"originalModel\").reload();\n            this.close();\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    ComponentUpdateModalView.reopenClass({\n        open: function open(model) {\n            var view = this.create({\n                originalModel: model,\n                model: model,\n                selectedKind: model.__json.kind && model.__json.kind.id || null\n            });\n            return view;\n        }\n    });\n\n    exports['default'] = ComponentUpdateModalView;\n\n});","define('mb-test-1/views/modals/floor-add-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/floor', 'mb-test-1/models/node'], function (exports, Ember, ModalBaseView, Form, Full, Save, Floor, Node) {\n\n    'use strict';\n\n    var FloorAddModal = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/floor-add-modal\",\n        elementId: \"add-floor\",\n        title: \"Add a floor\",\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Add\",\n        successAlertText: \"Your floor was created successfully\",\n\n        nodes: (function () {\n            return Node['default'].findAll();\n        }).property(),\n\n        nodesForSelect: Ember['default'].computed.map(\"nodes\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        model: (function () {\n            return Floor['default'].create();\n        }).property(),\n\n        onModelSaved: function onModelSaved(model) {\n            var controller = this.get(\"controller\");\n            Ember['default'].Logger.debug(\"FloorAddModal.onModelSaved: model=\", model);\n            controller.transitionToRoute(\"floor\", model.__json.id);\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    FloorAddModal.reopenClass({\n        open: function open() {\n            return this.create();\n        } });\n\n    exports['default'] = FloorAddModal;\n\n});","define('mb-test-1/views/modals/floor-delete-modal', ['exports', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/object-action-mixin'], function (exports, ModalBaseView, DeleteMixin) {\n\n    'use strict';\n\n    var FloorDeleteModalView = ModalBaseView['default'].extend(DeleteMixin['default'], {\n        templateName: \"modals/floor-delete-modal\",\n        elementId: \"delete-floor\",\n        classNames: [\"wide-modal\"],\n        title: \"Remove floor?\",\n        isSaving: false,\n\n        onModelSaved: function onModelSaved() {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"floors\");\n        },\n\n        actions: {\n            save: function save(model) {\n                this[\"delete\"](model);\n            }\n        }\n    });\n\n    FloorDeleteModalView.reopenClass({\n        open: function open(model) {\n            return this.create({\n                model: model\n            });\n        }\n    });\n\n    exports['default'] = FloorDeleteModalView;\n\n});","define('mb-test-1/views/modals/floor-update-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/node'], function (exports, Ember, ModalBaseView, Form, Full, Save, Node) {\n\n    'use strict';\n\n    var FloorUpdateModalView = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/floor-update-modal\",\n        elementId: \"floor-update\",\n        title: (function () {\n            return \"Edit floor information\";\n        }).property(),\n\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Save\",\n\n        nodes: (function () {\n            return Node['default'].findAll();\n        }).property(),\n\n        nodesForSelect: Ember['default'].computed.map(\"nodes\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") + \"\" };\n        }),\n\n        preselect: (function () {\n            var node_id = this.get(\"model\").__json.node.id;\n            this.set(\"selectedNode\", node_id);\n        }).observes(\"nodes.@each\"),\n\n        onModelSaved: function onModelSaved() {\n            this.getNotificationController().alertSuccess(\"Floor has been saved.\", {\n                expire: true\n            });\n            this.get(\"originalModel\").reload();\n            this.close();\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    FloorUpdateModalView.reopenClass({\n        open: function open(model) {\n            var view = this.create({\n                originalModel: model,\n                model: model,\n                selectedNode: null\n            });\n            return view;\n        }\n    });\n\n    exports['default'] = FloorUpdateModalView;\n\n});","define('mb-test-1/views/modals/mixins/display-model-errors-modal-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var getModelRootErrorMessages = function getModelRootErrorMessages(model) {\n        return model.get(\"validationErrors.length\") ? \"Your information could not be saved. Please correct the errors below.\" : \"Your information could not be saved.\";\n    };\n\n    var DisplayModelErrorsModalMixin = Ember['default'].Mixin.create({\n        updateErrorsBar: (function () {\n            var model = this.get(\"model\");\n            if (model.get(\"validationErrors.length\")) {\n                var errorMessage = getModelRootErrorMessages(model);\n                if (errorMessage) {\n                    var controller = this.get(\"container\").lookup(\"controller:modal_notification_center\");\n                    controller.clearAlerts();\n                    controller.alertError(new Ember['default'].Handlebars.SafeString(errorMessage));\n                }\n            }\n        }).observes(\"model.validationErrors.allMessages\") });\n\n    exports['default'] = DisplayModelErrorsModalMixin;\n\n});","define('mb-test-1/views/modals/mixins/form-modal-mixin', ['exports', 'ember', 'mb-test-1/views/modals/mixins/display-model-errors-modal-mixin'], function (exports, Ember, DisplayModelErrors) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create(DisplayModelErrors['default'], {\n        layoutName: \"modals/form-modal-layout\"\n    });\n\n});","define('mb-test-1/views/modals/mixins/full-modal-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create({\n        layoutName: \"modals/full-modal-layout\",\n        classNameBindings: [\":half-screen-modal\"]\n    });\n\n});","define('mb-test-1/views/modals/mixins/object-action-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var getRootErrorMessages = function getRootErrorMessages(model) {\n    var messages = model.get(\"errors._root\") || model.get(\"validationErrors.messages\");\n    return Ember['default'].A(messages);\n  };\n\n  exports['default'] = Ember['default'].Mixin.create({\n    isSaving: false,\n    onModelSaved: function onModelSaved(model) {\n      this.close();\n      return Ember['default'].RSVP.resolve(model);\n    },\n    executeAction: function executeAction(callback) {\n      var self = this;\n      var notificationsController = this.getModalNotificationController();\n      if (notificationsController) {\n        notificationsController.clearAlerts();\n      }\n      var successHandler = function successHandler(model) {\n        var successAlertText = self.get(\"successAlertText\");\n        if (!Ember['default'].isBlank(successAlertText)) {\n          self.getNotificationController().alertSuccess(successAlertText);\n        }\n        return self.onModelSaved(model);\n      };\n      var errorHandler = function errorHandler(model) {\n        if (!Ember['default'].isBlank(model)) {\n          var messages = getRootErrorMessages(model);\n          messages.forEach(function (message) {\n            return notificationsController.alertError(message);\n          });\n          return Ember['default'].RSVP.reject(model);\n        } else {\n          return Ember['default'].RSVP.reject();\n        }\n      };\n      this.set(\"isSaving\", true);\n      return callback().then(successHandler, errorHandler)[\"finally\"](function () {\n        return self.set(\"isSaving\", false);\n      });\n    },\n    \"delete\": function _delete(model) {\n      return this.executeAction(function () {\n        return model[\"delete\"]();\n      });\n    },\n    validateAndSaveModel: function validateAndSaveModel() {\n      var model = this.get(\"model\");\n      return this.executeAction(function () {\n        return model.validateAndSave();\n      });\n    },\n    save: function save(model) {\n      return this.executeAction(function () {\n        if (model.get(\"validationErrors\")) {\n          model.get(\"validationErrors\").clear();\n        }\n        return model.save();\n      });\n    }\n  });\n\n});","define('mb-test-1/views/modals/mixins/object-validate-and-save-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var ObjectValidateAndSaveMixin = Ember['default'].Mixin.create({\n        isSaving: false,\n        save: function save(model) {\n            var self = this;\n            this.set(\"isSaving\", true);\n            model.validate();\n            if (model.get(\"isValid\")) {\n                return model.save().then(function (savedModel) {\n                    self.set(\"isSaving\", false);\n                    self.close();\n                    return Ember['default'].RSVP.resolve(savedModel);\n                }, function (errors) {\n                    self.set(\"isSaving\", false);\n                    return Ember['default'].RSVP.reject(errors);\n                });\n            } else {\n                self.set(\"isSaving\", false);\n                return Ember['default'].RSVP.reject();\n            }\n        }\n    });\n\n    exports['default'] = ObjectValidateAndSaveMixin;\n\n});","define('mb-test-1/views/modals/mixins/open-next-modal-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n    openNext: function openNext() {\n      var applicationController = this.get(\"container\").lookup(\"controller:application\");\n      var args = _.toArray(arguments);\n      args.unshift(\"openModal\");\n      return applicationController.send.apply(applicationController, args);\n    },\n    openInstance: function openInstance(instance) {\n      return this.get(\"container\").lookup(\"controller:modals-container\").openInstance(instance);\n    }\n  });\n\n});","define('mb-test-1/views/modals/mixins/search-modal-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create({\n        layoutName: \"modals/search-modal-layout\",\n        classNameBindings: [\":search-screen-modal\"]\n    });\n\n});","define('mb-test-1/views/modals/mixins/wide-modal-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var WideModalMixin = Ember['default'].Mixin.create({\n        classNameBindings: [\":wide-modal\", \":modal-overflow\"] });\n\n    exports['default'] = WideModalMixin;\n\n});","define('mb-test-1/views/modals/modal-base-footer', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        classNameBindings: [\":modal-footer\"],\n        templateName: \"modals/modal-base-footer\"\n    });\n\n});","define('mb-test-1/views/modals/modal-base', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var ModalBaseView = Ember['default'].View.extend({\n        layoutName: \"modals/base-modal-layout\",\n        classNames: [\"modal\"],\n        submitButtonText: \"Submit\",\n\n        getNotificationController: function getNotificationController() {\n            return this.get(\"container\").lookup(\"controller:notification-center\");\n        },\n\n        getModalNotificationController: function getModalNotificationController() {\n            return this.get(\"container\").lookup(\"controller:modal-notification-center\");\n        },\n\n        openModal: function openModal(name) {\n            this.get(\"container\").lookup(\"controller:modals-container\").open(name, _.toArray(arguments).slice(1));\n        },\n\n        reposition: function reposition() {\n            Ember['default'].$(window).resize();\n        },\n\n        open: function open() {\n            var options = {\n                show: true,\n                backdrop: true,\n                keyboard: true\n            };\n\n            if (this.get(\"staticBackdrop\")) {\n                _.extend(options, {\n                    backdrop: \"static\",\n                    keyboard: false\n                });\n            }\n            return this.$().modal(options);\n        },\n\n        close: function close() {\n            var element = this.$();\n            if (element) {\n                return element.modal(\"hide\");\n            }\n        },\n\n        didInsertElement: function didInsertElement() {\n            Ember['default'].$(\".modal input:eq(0)\").focus();\n        }\n    });\n\n    ModalBaseView.reopenClass({\n        open: function open(attributes) {\n            return this.create(attributes);\n        }\n    });\n\n    exports['default'] = ModalBaseView;\n\n});","define('mb-test-1/views/modals/modal', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var ModalView = Ember['default'].View.extend({\n        controllerEventName: 'openModal',\n        modalElement: '.modal',\n        defaultModelAction: 'save',\n        controllerKey: 'controller',\n\n        didInsertElement: function didInsertElement() {\n            if (this.controllerEventName) {\n                this.get(this.get('controllerKey')).on(this.controllerEventName, this, this.open);\n            }\n\n            this._super();\n        },\n\n        willDestroyElement: function willDestroyElement() {\n            if (this.controllerEventName) {\n                this.get(this.get('controllerKey')).off(this.controllerEventName, this, this.open);\n            }\n\n            this._super();\n        },\n\n        hide: function hide() {\n            this.$(this.get('modalElement')).modal('hide');\n        },\n\n        _createModal: function _createModal(opts) {\n            this.$(this.get('modalElement')).modal(_.extend({\n                manager: this.$()\n            }, opts || {}));\n        },\n\n        open: function open(model) {\n            var self = this;\n            if (model) {\n                var eventName = this.get('defaultModelAction');\n                if (eventName) {\n                    if (eventName === 'save') {\n                        eventName = 'didCreate';\n                    } else if (eventName === 'delete') {\n                        eventName = 'didDelete';\n                    }\n\n                    model.on(eventName, function () {\n                        self.hide();\n                    });\n                }\n\n                this.set('model', model);\n            }\n\n            this._createModal();\n        },\n\n        reposition: function reposition() {\n            // trigger a resize to reposition the dialog\n            Ember['default'].$(document.body).trigger('resize');\n        },\n\n        actions: {\n            close: function close() {\n                this.hide();\n            },\n\n            save: function save(model, opts) {\n                model = model || this.get('model');\n\n                if (Ember['default'].get(model, 'isSaving')) {\n                    return;\n                }\n\n                var self = this;\n                if (_.isFunction(this.beforeSave) && this.beforeSave(model) === false) {\n                    return;\n                }\n\n                var errorCallback = this.errorSaving;\n                if (_.isFunction(errorCallback)) {\n                    errorCallback = _.bind(errorCallback, this);\n                }\n\n                model[this.get('defaultModelAction')].call(model, opts).then(function (model) {\n                    if (_.isFunction(self.afterSave)) {\n                        self.afterSave(model);\n                    }\n\n                    if (!self.get('submitAction')) {\n                        return;\n                    }\n\n                    self.sendAction('submitAction', model);\n                }, errorCallback);\n            }\n        }\n    });\n\n    exports['default'] = ModalView;\n\n});","define('mb-test-1/views/modals/node-add-modal', ['exports', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/node'], function (exports, ModalBaseView, Form, Full, Save, Node) {\n\n    'use strict';\n\n    var AddNodeModal = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/node-add-modal\",\n        elementId: \"add-node\",\n        title: \"Add a node\",\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Add\",\n        successAlertText: \"Your node was created successfully\",\n\n        model: (function () {\n            var node = Node['default'].create({});\n            return node;\n        }).property(),\n\n        onModelSaved: function onModelSaved(model) {\n            //var Node = this.get(\"container\").lookupFactory(\"model:node\");\n            //var controller = this.container.lookup(\"controller:marketplace\");\n            var controller = this.get(\"controller\");\n            //return Node.find(model.get(\"id\")).then(function(m) {\n            controller.transitionToRoute(\"node\", model);\n            //});\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    AddNodeModal.reopenClass({\n        open: function open() {\n            var view = this.create({});\n            //var store = view.container.lookup('store:main');\n            //var model = store.createRecord('node', {});\n            //view.set('model', model);\n            //Ember.Logger.debug(model);\n            return view;\n        } });\n\n    exports['default'] = AddNodeModal;\n\n});","define('mb-test-1/views/modals/node-delete-modal', ['exports', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/object-action-mixin'], function (exports, ModalBaseView, DeleteMixin) {\n\n    'use strict';\n\n    var NodeDeleteModalView = ModalBaseView['default'].extend(DeleteMixin['default'], {\n        templateName: \"modals/node-delete-modal\",\n        elementId: \"delete-node\",\n        classNames: [\"wide-modal\"],\n        title: \"Remove node?\",\n        isSaving: false,\n\n        onModelSaved: function onModelSaved() {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"nodes\");\n        },\n\n        actions: {\n            save: function save(model) {\n                this[\"delete\"](model);\n            }\n        }\n    });\n\n    NodeDeleteModalView.reopenClass({\n        open: function open(model) {\n            return this.create({\n                model: model\n            });\n        }\n    });\n\n    exports['default'] = NodeDeleteModalView;\n\n});","define('mb-test-1/views/modals/node-update-modal', ['exports', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin'], function (exports, ModalBaseView, Form, Full, Save) {\n\n    'use strict';\n\n    var EditNodeDetailModalView = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/node-update-modal\",\n        elementId: \"edit-node-detail\",\n        title: (function () {\n            return \"Edit node information\";\n        }).property(),\n\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Save\",\n\n        onModelSaved: function onModelSaved() {\n            this.getNotificationController().alertSuccess(\"Node has been saved.\", {\n                expire: true\n            });\n            this.get(\"originalModel\").reload();\n            this.close();\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    EditNodeDetailModalView.reopenClass({\n        open: function open(model) {\n            var view = this.create({\n                originalModel: model,\n                model: model });\n            return view;\n        }\n    });\n\n    exports['default'] = EditNodeDetailModalView;\n\n});","define('mb-test-1/views/modals/rack-add-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/row', 'mb-test-1/models/rack'], function (exports, Ember, ModalBaseView, Form, Full, Save, Row, Rack) {\n\n    'use strict';\n\n    var RackAddModal = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/rack-add-modal\",\n        elementId: \"add-rack\",\n        title: \"Add a rack\",\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Add\",\n        successAlertText: \"Your rack was created successfully\",\n\n        rows: (function () {\n            return Row['default'].findAll();\n        }).property(),\n\n        rowsForSelect: Ember['default'].computed.map(\"rows\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselect: (function () {\n            var row_id = this.get(\"rowsForSelect.firstObject\").value;\n            this.set(\"selectedRow\", row_id);\n        }).observes(\"rowsForSelect.@each\"),\n\n        model: (function () {\n            return Rack['default'].create();\n        }).property(),\n\n        onModelSaved: function onModelSaved(model) {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"rack\", model.__json.id);\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    RackAddModal.reopenClass({\n        open: function open() {\n            return this.create({\n                selectedRow: null\n            });\n        } });\n\n    exports['default'] = RackAddModal;\n\n});","define('mb-test-1/views/modals/rack-delete-modal', ['exports', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/object-action-mixin'], function (exports, ModalBaseView, DeleteMixin) {\n\n    'use strict';\n\n    var RackDeleteModalView = ModalBaseView['default'].extend(DeleteMixin['default'], {\n        templateName: \"modals/rack-delete-modal\",\n        elementId: \"delete-rack\",\n        classNames: [\"wide-modal\"],\n        title: \"Remove rack?\",\n        isSaving: false,\n\n        onModelSaved: function onModelSaved() {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"racks\");\n        },\n\n        actions: {\n            save: function save(model) {\n                this[\"delete\"](model);\n            }\n        }\n    });\n\n    RackDeleteModalView.reopenClass({\n        open: function open(model) {\n            return this.create({\n                model: model\n            });\n        }\n    });\n\n    exports['default'] = RackDeleteModalView;\n\n});","define('mb-test-1/views/modals/rack-update-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/row'], function (exports, Ember, ModalBaseView, Form, Full, Save, Row) {\n\n    'use strict';\n\n    var RackUpdateModalView = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/rack-update-modal\",\n        elementId: \"rack-update\",\n        title: (function () {\n            return \"Edit rack information\";\n        }).property(),\n\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Save\",\n\n        rows: (function () {\n            return Row['default'].findAll();\n        }).property(),\n\n        rowsForSelect: Ember['default'].computed.map(\"rows\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselect: (function () {\n            var row_id = this.get(\"model\").__json.row.id;\n            this.set(\"selectedRow\", row_id);\n        }).observes(\"rows.@each\"),\n\n        onModelSaved: function onModelSaved() {\n            this.getNotificationController().alertSuccess(\"Rack has been saved.\", {\n                expire: true\n            });\n            this.get(\"originalModel\").reload();\n            this.close();\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    RackUpdateModalView.reopenClass({\n        open: function open(model) {\n            var view = this.create({\n                originalModel: model,\n                model: model,\n                selectedRow: model.json_row.id\n            });\n            return view;\n        }\n    });\n\n    exports['default'] = RackUpdateModalView;\n\n});","define('mb-test-1/views/modals/room-add-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/floor', 'mb-test-1/models/room'], function (exports, Ember, ModalBaseView, Form, Full, Save, Floor, Room) {\n\n    'use strict';\n\n    var RoomAddModal = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/room-add-modal\",\n        elementId: \"add-room\",\n        title: \"Add a room\",\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Add\",\n        successAlertText: \"Your room was created successfully\",\n\n        floors: (function () {\n            return Floor['default'].findAll();\n        }).property(),\n\n        floorsForSelect: Ember['default'].computed.map(\"floors\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        model: (function () {\n            return Room['default'].create();\n        }).property(),\n\n        onModelSaved: function onModelSaved(model) {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"room\", model.__json.id);\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    RoomAddModal.reopenClass({\n        open: function open() {\n            return this.create();\n        } });\n\n    exports['default'] = RoomAddModal;\n\n});","define('mb-test-1/views/modals/room-delete-modal', ['exports', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/object-action-mixin'], function (exports, ModalBaseView, DeleteMixin) {\n\n    'use strict';\n\n    var RoomDeleteModalView = ModalBaseView['default'].extend(DeleteMixin['default'], {\n        templateName: \"modals/room-delete-modal\",\n        elementId: \"delete-room\",\n        classNames: [\"wide-modal\"],\n        title: \"Remove room?\",\n        isSaving: false,\n\n        onModelSaved: function onModelSaved() {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"rooms\");\n        },\n\n        actions: {\n            save: function save(model) {\n                this[\"delete\"](model);\n            }\n        }\n    });\n\n    RoomDeleteModalView.reopenClass({\n        open: function open(model) {\n            return this.create({\n                model: model\n            });\n        }\n    });\n\n    exports['default'] = RoomDeleteModalView;\n\n});","define('mb-test-1/views/modals/room-update-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/floor'], function (exports, Ember, ModalBaseView, Form, Full, Save, Floor) {\n\n    'use strict';\n\n    var RoomUpdateModalView = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/room-update-modal\",\n        elementId: \"room-update\",\n        title: (function () {\n            return \"Edit room information\";\n        }).property(),\n\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Save\",\n\n        floors: (function () {\n            return Floor['default'].findAll();\n        }).property(),\n\n        floorsForSelect: Ember['default'].computed.map(\"floors\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") + \"\" };\n        }),\n\n        preselect: (function () {\n            var floor_id = this.get(\"model\").__json.floor.id;\n            this.set(\"selectedFloor\", floor_id);\n        }).observes(\"floors.@each\"),\n\n        onModelSaved: function onModelSaved() {\n            this.getNotificationController().alertSuccess(\"Room has been saved.\", {\n                expire: true\n            });\n            this.get(\"originalModel\").reload();\n            this.close();\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    RoomUpdateModalView.reopenClass({\n        open: function open(model) {\n            var view = this.create({\n                originalModel: model,\n                model: model,\n                selectedFloor: null\n            });\n            return view;\n        }\n    });\n\n    exports['default'] = RoomUpdateModalView;\n\n});","define('mb-test-1/views/modals/row-add-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/row', 'mb-test-1/models/room'], function (exports, Ember, ModalBaseView, Form, Full, Save, Row, Room) {\n\n    'use strict';\n\n    var RowAddModal = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/row-add-modal\",\n        elementId: \"add-row\",\n        title: \"Add a row\",\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Add\",\n        successAlertText: \"Your row was created successfully\",\n\n        rooms: (function () {\n            return Room['default'].findAll();\n        }).property(),\n\n        roomsForSelect: Ember['default'].computed.map(\"rooms\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselect: (function () {\n            var room_id = this.get(\"roomsForSelect.firstObject\").value;\n            Ember['default'].Logger.debug(\"RowAddModal.preselect: room_id=\", room_id);\n            this.set(\"selectedRoom\", room_id);\n        }).observes(\"roomsForSelect.@each\"),\n\n        model: (function () {\n            return Row['default'].create();\n        }).property(),\n\n        onModelSaved: function onModelSaved(model) {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"row\", model.__json.id);\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    RowAddModal.reopenClass({\n        open: function open() {\n            return this.create({\n                selectedRoom: null\n            });\n        } });\n\n    exports['default'] = RowAddModal;\n\n});","define('mb-test-1/views/modals/row-delete-modal', ['exports', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/object-action-mixin'], function (exports, ModalBaseView, DeleteMixin) {\n\n    'use strict';\n\n    var RowDeleteModalView = ModalBaseView['default'].extend(DeleteMixin['default'], {\n        templateName: \"modals/row-delete-modal\",\n        elementId: \"delete-row\",\n        classNames: [\"wide-modal\"],\n        title: \"Remove row?\",\n        isSaving: false,\n\n        onModelSaved: function onModelSaved() {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"rows\");\n        },\n\n        actions: {\n            save: function save(model) {\n                this[\"delete\"](model);\n            }\n        }\n    });\n\n    RowDeleteModalView.reopenClass({\n        open: function open(model) {\n            return this.create({\n                model: model\n            });\n        }\n    });\n\n    exports['default'] = RowDeleteModalView;\n\n});","define('mb-test-1/views/modals/row-update-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/room'], function (exports, Ember, ModalBaseView, Form, Full, Save, Room) {\n\n    'use strict';\n\n    var RowUpdateModalView = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/row-update-modal\",\n        elementId: \"row-update\",\n        title: (function () {\n            return \"Edit row information\";\n        }).property(),\n\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Save\",\n\n        rooms: (function () {\n            return Room['default'].findAll();\n        }).property(),\n\n        roomsForSelect: Ember['default'].computed.map(\"rooms\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselect: (function () {\n            var room_id = this.get(\"model\").__json.room.id;\n            this.set(\"selectedRoom\", room_id);\n        }).observes(\"rooms.@each\"),\n\n        onModelSaved: function onModelSaved() {\n            this.getNotificationController().alertSuccess(\"Row has been saved.\", {\n                expire: true\n            });\n            this.get(\"originalModel\").reload();\n            this.close();\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    RowUpdateModalView.reopenClass({\n        open: function open(model) {\n            var view = this.create({\n                originalModel: model,\n                model: model,\n                selectedRoom: model.json_room.id\n            });\n            return view;\n        }\n    });\n\n    exports['default'] = RowUpdateModalView;\n\n});","define('mb-test-1/views/modals/server-add-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/servertemplate', 'mb-test-1/models/server'], function (exports, Ember, ModalBaseView, Form, Full, Save, ServerTemplate, Server) {\n\n    'use strict';\n\n    var ServerAddModal = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/server-add-modal\",\n        elementId: \"server-add\",\n        title: \"Add a server\",\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Add\",\n        successAlertText: \"Your server was created successfully\",\n\n        templates: (function () {\n            return ServerTemplate['default'].findAll();\n        }).property(),\n\n        templatesForSelect: Ember['default'].computed.map(\"templates\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselect: (function () {\n            var template_id = this.get(\"templatesForSelect.firstObject\").value;\n            this.set(\"selectedTemplate\", template_id);\n        }).observes(\"templatesForSelect.@each\"),\n\n        model: (function () {\n            return Server['default'].create();\n        }).property(),\n\n        onModelSaved: function onModelSaved(model) {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"server\", model.__json.id);\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    ServerAddModal.reopenClass({\n        open: function open() {\n            return this.create({\n                selectedTemplate: null\n            });\n        } });\n\n    exports['default'] = ServerAddModal;\n\n});","define('mb-test-1/views/modals/server-delete-modal', ['exports', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/object-action-mixin'], function (exports, ModalBaseView, DeleteMixin) {\n\n    'use strict';\n\n    var ServerDeleteModalView = ModalBaseView['default'].extend(DeleteMixin['default'], {\n        templateName: \"modals/server-delete-modal\",\n        elementId: \"delete-server\",\n        classNames: [\"wide-modal\"],\n        title: \"Remove server?\",\n        isSaving: false,\n\n        onModelSaved: function onModelSaved() {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"servers\");\n        },\n\n        actions: {\n            save: function save(model) {\n                this[\"delete\"](model);\n            }\n        }\n    });\n\n    ServerDeleteModalView.reopenClass({\n        open: function open(model) {\n            return this.create({\n                model: model\n            });\n        }\n    });\n\n    exports['default'] = ServerDeleteModalView;\n\n});","define('mb-test-1/views/modals/server-update-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/servertemplate'], function (exports, Ember, ModalBaseView, Form, Full, Save, ServerTemplate) {\n\n    'use strict';\n\n    var ServerUpdateModalView = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/server-update-modal\",\n        elementId: \"server-update\",\n        title: (function () {\n            return \"Edit server information\";\n        }).property(),\n\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Save\",\n\n        templates: (function () {\n            return ServerTemplate['default'].findAll();\n        }).property(),\n\n        templatesForSelect: Ember['default'].computed.map(\"templates\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselect: (function () {\n            var template = this.get(\"model\").__json.template;\n            this.set(\"selectedTemplate\", template && template.id || null);\n        }).observes(\"templates.@each\"),\n\n        onModelSaved: function onModelSaved() {\n            this.getNotificationController().alertSuccess(\"Server has been saved.\", {\n                expire: true\n            });\n            this.get(\"originalModel\").reload();\n            this.close();\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            }\n        }\n    });\n\n    ServerUpdateModalView.reopenClass({\n        open: function open(model) {\n            var view = this.create({\n                originalModel: model,\n                model: model,\n                selectedTemplate: model.__json.template && model.__json.template.id || null\n            });\n            return view;\n        }\n    });\n\n    exports['default'] = ServerUpdateModalView;\n\n});","define('mb-test-1/views/modals/servertemplate-add-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/servertemplate', 'mb-test-1/models/propertyoption'], function (exports, Ember, ModalBaseView, Form, Full, Save, ServerTemplate, PropertyOption) {\n\n    'use strict';\n\n    var ServerTemplateAddModal = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/servertemplate-add-modal\",\n        elementId: \"servertemplate-add\",\n        title: \"Add a server template\",\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Add\",\n        successAlertText: \"Your server template was created successfully\",\n\n        // cpu socket\n        cpuSockets: (function () {\n            var obj = PropertyOption['default'].create();\n            return obj.getCPUSockets();\n        }).property(),\n\n        cpuSocketsForSelect: Ember['default'].computed.map(\"cpuSockets\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselectCPUSockets: (function () {\n            var o_id = this.get(\"cpuSocketsForSelect.firstObject\").value;\n            this.set(\"selectedCPUSocket\", o_id);\n        }).observes(\"cpuSocketsForSelect.@each\"),\n\n        // ram standard\n        ramStandards: (function () {\n            var obj = PropertyOption['default'].create();\n            return obj.getRAMStandards();\n        }).property(),\n\n        ramStandardsForSelect: Ember['default'].computed.map(\"ramStandards\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselectRAMStandards: (function () {\n            var o_id = this.get(\"ramStandardsForSelect.firstObject\").value;\n            this.set(\"selectedRAMStandard\", o_id);\n        }).observes(\"ramStandardsForSelect.@each\"),\n\n        // hdd form factor\n        hddFormFactors: (function () {\n            var obj = PropertyOption['default'].create();\n            return obj.getHDDFormFactors();\n        }).property(),\n\n        hddFormFactorsForSelect: Ember['default'].computed.map(\"hddFormFactors\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselectHDDFormFactors: (function () {\n            var o_id = this.get(\"hddFormFactorsForSelect.firstObject\").value;\n            this.get(\"model\").hdds.forEach(function (hdd) {\n                if (Ember['default'].get(hdd, \"hdd_form_factor\") === null) {\n                    Ember['default'].set(hdd, \"hdd_form_factor\", o_id);\n                }\n            });\n        }).observes(\"hddFormFactorsForSelect.@each\"),\n\n        // hdd connection type\n        hddConnectionTypes: (function () {\n            var obj = PropertyOption['default'].create();\n            return obj.getHDDConnectionType();\n        }).property(),\n\n        hddConnectionTypeForSelect: Ember['default'].computed.map(\"hddConnectionTypes\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselectHDDConnectionTypes: (function () {\n            var o_id = this.get(\"hddConnectionTypeForSelect.firstObject\").value;\n            this.get(\"model\").hdds.forEach(function (hdd) {\n                if (Ember['default'].get(hdd, \"hdd_connection_type\") === null) {\n                    Ember['default'].set(hdd, \"hdd_connection_type\", o_id);\n                }\n            });\n        }).observes(\"hddConnectionTypes.@each\"),\n\n        model: (function () {\n            return ServerTemplate['default'].create({\n                hdds: Ember['default'].A() });\n        }).property(),\n\n        onModelSaved: function onModelSaved(model) {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"servertemplate\", model.__json.id);\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            },\n            addHdd: function addHdd() {\n                var obj = Ember['default'].Object.create({\n                    hdd_qty: 1,\n                    hdd_connection_type: null,\n                    hdd_form_factor: null\n                });\n                this.get(\"model\").hdds.pushObject(obj);\n            }\n        } });\n\n    ServerTemplateAddModal.reopenClass({\n        open: function open() {\n            return this.create({\n                selectedCPUSocket: null,\n                selectedRAMStandard: null\n            });\n        } });\n\n    exports['default'] = ServerTemplateAddModal;\n\n});","define('mb-test-1/views/modals/servertemplate-delete-modal', ['exports', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/object-action-mixin'], function (exports, ModalBaseView, DeleteMixin) {\n\n    'use strict';\n\n    var ServerTemplateDeleteModalView = ModalBaseView['default'].extend(DeleteMixin['default'], {\n        templateName: \"modals/servertemplate-delete-modal\",\n        elementId: \"delete-servertemplate\",\n        classNames: [\"wide-modal\"],\n        title: \"Remove server template?\",\n        isSaving: false,\n\n        onModelSaved: function onModelSaved() {\n            var controller = this.get(\"controller\");\n            controller.transitionToRoute(\"servertemplates\");\n        },\n\n        actions: {\n            save: function save(model) {\n                this[\"delete\"](model);\n            }\n        }\n    });\n\n    ServerTemplateDeleteModalView.reopenClass({\n        open: function open(model) {\n            return this.create({\n                model: model\n            });\n        }\n    });\n\n    exports['default'] = ServerTemplateDeleteModalView;\n\n});","define('mb-test-1/views/modals/servertemplate-update-modal', ['exports', 'ember', 'mb-test-1/views/modals/modal-base', 'mb-test-1/views/modals/mixins/form-modal-mixin', 'mb-test-1/views/modals/mixins/full-modal-mixin', 'mb-test-1/views/modals/mixins/object-action-mixin', 'mb-test-1/models/propertyoption'], function (exports, Ember, ModalBaseView, Form, Full, Save, PropertyOption) {\n\n    'use strict';\n\n    var ServerTemplateUpdateModalView = ModalBaseView['default'].extend(Full['default'], Form['default'], Save['default'], {\n        templateName: \"modals/servertemplate-update-modal\",\n        elementId: \"servertemplate-update\",\n        title: (function () {\n            return \"Edit server template information\";\n        }).property(),\n\n        cancelButtonText: \"Cancel\",\n        submitButtonText: \"Save\",\n\n        // cpu socket\n        cpuSockets: (function () {\n            var obj = PropertyOption['default'].create();\n            return obj.getCPUSockets();\n        }).property(),\n\n        cpuSocketsForSelect: Ember['default'].computed.map(\"cpuSockets\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselectCPUSockets: (function () {\n            var o_id = this.get(\"cpuSocketsForSelect.firstObject\").value;\n            var current = this.get(\"model\").__json.cpu_socket;\n            this.set(\"selectedCPUSocket\", current && current.id || o_id);\n        }).observes(\"cpuSocketsForSelect.@each\"),\n\n        // ram standard\n        ramStandards: (function () {\n            var obj = PropertyOption['default'].create();\n            return obj.getRAMStandards();\n        }).property(),\n\n        ramStandardsForSelect: Ember['default'].computed.map(\"ramStandards\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselectRAMStandards: (function () {\n            var o_id = this.get(\"ramStandardsForSelect.firstObject\").value;\n            var current = this.get(\"model\").__json.ram_standard;\n            this.set(\"selectedRAMStandard\", current && current.id || o_id);\n        }).observes(\"ramStandardsForSelect.@each\"),\n\n        // hdd form factor\n        hddFormFactors: (function () {\n            var obj = PropertyOption['default'].create();\n            return obj.getHDDFormFactors();\n        }).property(),\n\n        hddFormFactorsForSelect: Ember['default'].computed.map(\"hddFormFactors\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselectHDDFormFactors: (function () {\n            var o_id = this.get(\"hddFormFactorsForSelect.firstObject\").value;\n            var model = this.get(\"model\");\n            model.hdds.forEach(function (hdd) {\n                var is_updated = false;\n                model.__json.hdds.forEach(function (json_hdd) {\n                    if (hdd.id === json_hdd.id) {\n                        var current = json_hdd.hdd_form_factor;\n                        Ember['default'].set(hdd, \"hdd_form_factor\", current && current.id || o_id);\n                        is_updated = true;\n                        return;\n                    }\n                });\n                if (!is_updated) {\n                    Ember['default'].set(hdd, \"hdd_form_factor\", o_id);\n                }\n            });\n        }).observes(\"hddFormFactorsForSelect.@each\"),\n\n        // hdd connection type\n        hddConnectionTypes: (function () {\n            var obj = PropertyOption['default'].create();\n            return obj.getHDDConnectionType();\n        }).property(),\n\n        hddConnectionTypeForSelect: Ember['default'].computed.map(\"hddConnectionTypes\", function (o) {\n            return { label: o.get(\"name\"), value: o.get(\"id\") };\n        }),\n\n        preselectHDDConnectionTypes: (function () {\n            var o_id = this.get(\"hddConnectionTypeForSelect.firstObject\").value;\n            var model = this.get(\"model\");\n            model.hdds.forEach(function (hdd) {\n                var is_updated = false;\n                model.__json.hdds.forEach(function (json_hdd) {\n                    if (hdd.id === json_hdd.id) {\n                        var current = json_hdd.hdd_connection_type;\n                        Ember['default'].set(hdd, \"hdd_connection_type\", current && current.id || o_id);\n                        is_updated = true;\n                        return;\n                    }\n                });\n                if (!is_updated) {\n                    Ember['default'].set(hdd, \"hdd_connection_type\", o_id);\n                }\n            });\n        }).observes(\"hddConnectionTypes.@each\"),\n\n        onModelSaved: function onModelSaved() {\n            this.getNotificationController().alertSuccess(\"Server template has been saved.\", {\n                expire: true\n            });\n            this.get(\"originalModel\").reload();\n            this.close();\n        },\n\n        actions: {\n            save: function save() {\n                this.save(this.get(\"model\"));\n            },\n            addHdd: function addHdd() {\n                var obj = Ember['default'].Object.create({\n                    hdd_qty: 1,\n                    hdd_connection_type: null,\n                    hdd_form_factor: null\n                });\n                var model = this.get(\"model\");\n                model.hdds.pushObject(obj);\n            }\n        }\n    });\n\n    ServerTemplateUpdateModalView.reopenClass({\n        open: function open(model) {\n            var view = this.create({\n                originalModel: model,\n                model: model,\n                //selectedTemplate: model.__json.template && model.__json.template.id || null\n                selectedCPUSocket: model.__json.cpu_socket && model.__json.cpu_socket.id || null,\n                selectedRAMStandard: model.__json.ram_standard && model.__json.ram_standard.id || null\n            });\n            return view;\n        }\n    });\n\n    exports['default'] = ServerTemplateUpdateModalView;\n\n});","define('mb-test-1/views/navigation', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].View.extend({\n    tagName: 'nav',\n    classNames: ['navbar navbar-default navbar-fixed-top'],\n    templateName: 'navigation'\n  });\n\n});","define('mb-test-1/views/notification-center', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].View;\n\n});","define('mb-test-1/views/page-navigations/page-navigation', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        layoutName: \"page-navigations/page-navigation-layout\" });\n\n});","define('mb-test-1/views/results/baskets-table', ['exports', 'mb-test-1/views/results/results-table'], function (exports, ResultsTableView) {\n\n    'use strict';\n\n    exports['default'] = ResultsTableView['default'].extend({\n        classNames: 'baskets',\n        templateName: 'results/baskets-table'\n    });\n\n});","define('mb-test-1/views/results/component-properties-table', ['exports', 'mb-test-1/views/results/results-table'], function (exports, ResultsTableView) {\n\n    'use strict';\n\n    exports['default'] = ResultsTableView['default'].extend({\n        classNames: 'component-properties',\n        templateName: 'results/component-properties-table'\n    });\n\n});","define('mb-test-1/views/results/components-table', ['exports', 'mb-test-1/views/results/results-table'], function (exports, ResultsTableView) {\n\n    'use strict';\n\n    exports['default'] = ResultsTableView['default'].extend({\n        classNames: 'components',\n        templateName: 'results/components-table'\n    });\n\n});","define('mb-test-1/views/results/floors-table', ['exports', 'mb-test-1/views/results/results-table'], function (exports, ResultsTableView) {\n\n    'use strict';\n\n    exports['default'] = ResultsTableView['default'].extend({\n        classNames: 'floors',\n        templateName: 'results/floors-table'\n    });\n\n});","define('mb-test-1/views/results/node-servers-table', ['exports', 'mb-test-1/views/results/results-table'], function (exports, ResultsTableView) {\n\n    'use strict';\n\n    exports['default'] = ResultsTableView['default'].extend({\n        classNames: 'node-servers',\n        templateName: 'results/node-servers-table'\n    });\n\n});","define('mb-test-1/views/results/nodes-table', ['exports', 'mb-test-1/views/results/results-table'], function (exports, ResultsTableView) {\n\n    'use strict';\n\n    exports['default'] = ResultsTableView['default'].extend({\n        classNames: 'nodes',\n        templateName: 'results/nodes-table'\n    });\n\n});","define('mb-test-1/views/results/racks-table', ['exports', 'mb-test-1/views/results/results-table'], function (exports, ResultsTableView) {\n\n    'use strict';\n\n    exports['default'] = ResultsTableView['default'].extend({\n        classNames: 'racks',\n        templateName: 'results/racks-table'\n    });\n\n});","define('mb-test-1/views/results/results-load-more', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        tagName: \"tfoot\",\n        templateName: \"results/results-load-more\",\n        actions: {\n            loadMore: function loadMore(results) {\n                results.loadNextPage();\n            }\n        }\n    });\n\n});","define('mb-test-1/views/results/results-table', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        tagName: 'table',\n        classNames: 'items'\n    });\n\n});","define('mb-test-1/views/results/rooms-table', ['exports', 'mb-test-1/views/results/results-table'], function (exports, ResultsTableView) {\n\n    'use strict';\n\n    exports['default'] = ResultsTableView['default'].extend({\n        classNames: 'rooms',\n        templateName: 'results/rooms-table'\n    });\n\n});","define('mb-test-1/views/results/rows-table', ['exports', 'mb-test-1/views/results/results-table'], function (exports, ResultsTableView) {\n\n    'use strict';\n\n    exports['default'] = ResultsTableView['default'].extend({\n        classNames: 'rows',\n        templateName: 'results/rows-table'\n    });\n\n});","define('mb-test-1/views/results/server-components-table', ['exports', 'mb-test-1/views/results/results-table'], function (exports, ResultsTableView) {\n\n    'use strict';\n\n    exports['default'] = ResultsTableView['default'].extend({\n        classNames: 'server-components',\n        templateName: 'results/server-components-table'\n    });\n\n});","define('mb-test-1/views/results/servers-table', ['exports', 'mb-test-1/views/results/results-table'], function (exports, ResultsTableView) {\n\n    'use strict';\n\n    exports['default'] = ResultsTableView['default'].extend({\n        classNames: 'servers',\n        templateName: 'results/servers-table'\n    });\n\n});","define('mb-test-1/views/results/servertemplates-table', ['exports', 'mb-test-1/views/results/results-table'], function (exports, ResultsTableView) {\n\n    'use strict';\n\n    exports['default'] = ResultsTableView['default'].extend({\n        classNames: 'servertemplates',\n        templateName: 'results/servertemplates-table'\n    });\n\n});","define('mb-test-1/views/tables/cells/linked-text-cell', ['exports', 'ember', 'mb-test-1/views/tables/cells/table-cell-base'], function (exports, Ember, TableCellBaseView) {\n\n    'use strict';\n\n    exports['default'] = TableCellBaseView['default'].extend({\n        templateName: \"tables/cells/linked-text-cell\",\n        blankText: \"none\",\n        attributeBindings: [\"title\"],\n        isBlank: Ember['default'].computed.empty(\"labelText\"),\n        displayValue: (function () {\n            if (this.get(\"isBlank\")) {\n                return this.get(\"blankText\");\n            } else {\n                return this.get(\"labelText\");\n            }\n        }).property(\"blankText\", \"isBlank\", \"labelText\") });\n\n});","define('mb-test-1/views/tables/cells/table-cell-base', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        tagName: \"td\" });\n\n});","define('mb-test-1/views/tables/cells/titled-linked-cell', ['exports', 'ember', 'mb-test-1/views/tables/cells/linked-text-cell'], function (exports, Ember, LinkedTextCellView) {\n\n    'use strict';\n\n    exports['default'] = LinkedTextCellView['default'].extend({\n        title: Ember['default'].computed.oneWay(\"labelText\") });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('mb-test-1/config/environment', ['ember'], function(Ember) {\n  var prefix = 'mb-test-1';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"mb-test-1/tests/test-helper\");\n} else {\n  require(\"mb-test-1/app\")[\"default\"].create({\"API_HOST\":\"http://46.101.149.14\",\"API_NAMESPACE\":\"api/v1\",\"API_ADD_TRAILING_SLASHES\":false,\"name\":\"mb-test-1\",\"version\":\"0.0.0.9090aaaa\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappingsrljEA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhcvjkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACznFA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACflhOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrrjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrpzhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzrpzpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzrzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzzpNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzpnNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrtrMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClavxxqprtphrrrrvrpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"mb-test-1.js"}